
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model ClientView
 * 
 */
export type ClientView = $Result.DefaultSelection<Prisma.$ClientViewPayload>
/**
 * Model hotel_apartments
 * 
 */
export type hotel_apartments = $Result.DefaultSelection<Prisma.$hotel_apartmentsPayload>
/**
 * Model Booking
 * 
 */
export type Booking = $Result.DefaultSelection<Prisma.$BookingPayload>
/**
 * Model Leads
 * 
 */
export type Leads = $Result.DefaultSelection<Prisma.$LeadsPayload>
/**
 * Model IA_CMR_Clientes
 * 
 */
export type IA_CMR_Clientes = $Result.DefaultSelection<Prisma.$IA_CMR_ClientesPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more ClientViews
 * const clientViews = await prisma.clientView.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more ClientViews
   * const clientViews = await prisma.clientView.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.clientView`: Exposes CRUD operations for the **ClientView** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClientViews
    * const clientViews = await prisma.clientView.findMany()
    * ```
    */
  get clientView(): Prisma.ClientViewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.hotel_apartments`: Exposes CRUD operations for the **hotel_apartments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Hotel_apartments
    * const hotel_apartments = await prisma.hotel_apartments.findMany()
    * ```
    */
  get hotel_apartments(): Prisma.hotel_apartmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.booking`: Exposes CRUD operations for the **Booking** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bookings
    * const bookings = await prisma.booking.findMany()
    * ```
    */
  get booking(): Prisma.BookingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leads`: Exposes CRUD operations for the **Leads** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leads
    * const leads = await prisma.leads.findMany()
    * ```
    */
  get leads(): Prisma.LeadsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.iA_CMR_Clientes`: Exposes CRUD operations for the **IA_CMR_Clientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IA_CMR_Clientes
    * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.findMany()
    * ```
    */
  get iA_CMR_Clientes(): Prisma.IA_CMR_ClientesDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.14.0
   * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    ClientView: 'ClientView',
    hotel_apartments: 'hotel_apartments',
    Booking: 'Booking',
    Leads: 'Leads',
    IA_CMR_Clientes: 'IA_CMR_Clientes'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "clientView" | "hotel_apartments" | "booking" | "leads" | "iA_CMR_Clientes"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      ClientView: {
        payload: Prisma.$ClientViewPayload<ExtArgs>
        fields: Prisma.ClientViewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientViewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientViewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload>
          }
          findFirst: {
            args: Prisma.ClientViewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientViewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload>
          }
          findMany: {
            args: Prisma.ClientViewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload>[]
          }
          create: {
            args: Prisma.ClientViewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload>
          }
          createMany: {
            args: Prisma.ClientViewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientViewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload>[]
          }
          delete: {
            args: Prisma.ClientViewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload>
          }
          update: {
            args: Prisma.ClientViewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload>
          }
          deleteMany: {
            args: Prisma.ClientViewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientViewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientViewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload>[]
          }
          upsert: {
            args: Prisma.ClientViewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientViewPayload>
          }
          aggregate: {
            args: Prisma.ClientViewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientView>
          }
          groupBy: {
            args: Prisma.ClientViewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientViewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientViewCountArgs<ExtArgs>
            result: $Utils.Optional<ClientViewCountAggregateOutputType> | number
          }
        }
      }
      hotel_apartments: {
        payload: Prisma.$hotel_apartmentsPayload<ExtArgs>
        fields: Prisma.hotel_apartmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.hotel_apartmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.hotel_apartmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload>
          }
          findFirst: {
            args: Prisma.hotel_apartmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.hotel_apartmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload>
          }
          findMany: {
            args: Prisma.hotel_apartmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload>[]
          }
          create: {
            args: Prisma.hotel_apartmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload>
          }
          createMany: {
            args: Prisma.hotel_apartmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.hotel_apartmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload>[]
          }
          delete: {
            args: Prisma.hotel_apartmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload>
          }
          update: {
            args: Prisma.hotel_apartmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload>
          }
          deleteMany: {
            args: Prisma.hotel_apartmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.hotel_apartmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.hotel_apartmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload>[]
          }
          upsert: {
            args: Prisma.hotel_apartmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$hotel_apartmentsPayload>
          }
          aggregate: {
            args: Prisma.Hotel_apartmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHotel_apartments>
          }
          groupBy: {
            args: Prisma.hotel_apartmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Hotel_apartmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.hotel_apartmentsCountArgs<ExtArgs>
            result: $Utils.Optional<Hotel_apartmentsCountAggregateOutputType> | number
          }
        }
      }
      Booking: {
        payload: Prisma.$BookingPayload<ExtArgs>
        fields: Prisma.BookingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BookingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BookingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          findFirst: {
            args: Prisma.BookingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BookingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          findMany: {
            args: Prisma.BookingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>[]
          }
          create: {
            args: Prisma.BookingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          createMany: {
            args: Prisma.BookingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BookingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>[]
          }
          delete: {
            args: Prisma.BookingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          update: {
            args: Prisma.BookingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          deleteMany: {
            args: Prisma.BookingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BookingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BookingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>[]
          }
          upsert: {
            args: Prisma.BookingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          aggregate: {
            args: Prisma.BookingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBooking>
          }
          groupBy: {
            args: Prisma.BookingGroupByArgs<ExtArgs>
            result: $Utils.Optional<BookingGroupByOutputType>[]
          }
          count: {
            args: Prisma.BookingCountArgs<ExtArgs>
            result: $Utils.Optional<BookingCountAggregateOutputType> | number
          }
        }
      }
      Leads: {
        payload: Prisma.$LeadsPayload<ExtArgs>
        fields: Prisma.LeadsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LeadsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LeadsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload>
          }
          findFirst: {
            args: Prisma.LeadsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LeadsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload>
          }
          findMany: {
            args: Prisma.LeadsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload>[]
          }
          create: {
            args: Prisma.LeadsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload>
          }
          createMany: {
            args: Prisma.LeadsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LeadsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload>[]
          }
          delete: {
            args: Prisma.LeadsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload>
          }
          update: {
            args: Prisma.LeadsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload>
          }
          deleteMany: {
            args: Prisma.LeadsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LeadsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LeadsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload>[]
          }
          upsert: {
            args: Prisma.LeadsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadsPayload>
          }
          aggregate: {
            args: Prisma.LeadsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLeads>
          }
          groupBy: {
            args: Prisma.LeadsGroupByArgs<ExtArgs>
            result: $Utils.Optional<LeadsGroupByOutputType>[]
          }
          count: {
            args: Prisma.LeadsCountArgs<ExtArgs>
            result: $Utils.Optional<LeadsCountAggregateOutputType> | number
          }
        }
      }
      IA_CMR_Clientes: {
        payload: Prisma.$IA_CMR_ClientesPayload<ExtArgs>
        fields: Prisma.IA_CMR_ClientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IA_CMR_ClientesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IA_CMR_ClientesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload>
          }
          findFirst: {
            args: Prisma.IA_CMR_ClientesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IA_CMR_ClientesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload>
          }
          findMany: {
            args: Prisma.IA_CMR_ClientesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload>[]
          }
          create: {
            args: Prisma.IA_CMR_ClientesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload>
          }
          createMany: {
            args: Prisma.IA_CMR_ClientesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.IA_CMR_ClientesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload>[]
          }
          delete: {
            args: Prisma.IA_CMR_ClientesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload>
          }
          update: {
            args: Prisma.IA_CMR_ClientesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload>
          }
          deleteMany: {
            args: Prisma.IA_CMR_ClientesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.IA_CMR_ClientesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.IA_CMR_ClientesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload>[]
          }
          upsert: {
            args: Prisma.IA_CMR_ClientesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IA_CMR_ClientesPayload>
          }
          aggregate: {
            args: Prisma.IA_CMR_ClientesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIA_CMR_Clientes>
          }
          groupBy: {
            args: Prisma.IA_CMR_ClientesGroupByArgs<ExtArgs>
            result: $Utils.Optional<IA_CMR_ClientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.IA_CMR_ClientesCountArgs<ExtArgs>
            result: $Utils.Optional<IA_CMR_ClientesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    clientView?: ClientViewOmit
    hotel_apartments?: hotel_apartmentsOmit
    booking?: BookingOmit
    leads?: LeadsOmit
    iA_CMR_Clientes?: IA_CMR_ClientesOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model ClientView
   */

  export type AggregateClientView = {
    _count: ClientViewCountAggregateOutputType | null
    _avg: ClientViewAvgAggregateOutputType | null
    _sum: ClientViewSumAggregateOutputType | null
    _min: ClientViewMinAggregateOutputType | null
    _max: ClientViewMaxAggregateOutputType | null
  }

  export type ClientViewAvgAggregateOutputType = {
    threadTokenCount: number | null
    prioridad: number | null
  }

  export type ClientViewSumAggregateOutputType = {
    threadTokenCount: number | null
    prioridad: number | null
  }

  export type ClientViewMinAggregateOutputType = {
    phoneNumber: string | null
    name: string | null
    userName: string | null
    labels: string | null
    chatId: string | null
    lastActivity: Date | null
    threadId: string | null
    threadTokenCount: number | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
  }

  export type ClientViewMaxAggregateOutputType = {
    phoneNumber: string | null
    name: string | null
    userName: string | null
    labels: string | null
    chatId: string | null
    lastActivity: Date | null
    threadId: string | null
    threadTokenCount: number | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
  }

  export type ClientViewCountAggregateOutputType = {
    phoneNumber: number
    name: number
    userName: number
    labels: number
    chatId: number
    lastActivity: number
    threadId: number
    threadTokenCount: number
    profileStatus: number
    proximaAccion: number
    fechaProximaAccion: number
    prioridad: number
    _all: number
  }


  export type ClientViewAvgAggregateInputType = {
    threadTokenCount?: true
    prioridad?: true
  }

  export type ClientViewSumAggregateInputType = {
    threadTokenCount?: true
    prioridad?: true
  }

  export type ClientViewMinAggregateInputType = {
    phoneNumber?: true
    name?: true
    userName?: true
    labels?: true
    chatId?: true
    lastActivity?: true
    threadId?: true
    threadTokenCount?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
  }

  export type ClientViewMaxAggregateInputType = {
    phoneNumber?: true
    name?: true
    userName?: true
    labels?: true
    chatId?: true
    lastActivity?: true
    threadId?: true
    threadTokenCount?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
  }

  export type ClientViewCountAggregateInputType = {
    phoneNumber?: true
    name?: true
    userName?: true
    labels?: true
    chatId?: true
    lastActivity?: true
    threadId?: true
    threadTokenCount?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
    _all?: true
  }

  export type ClientViewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientView to aggregate.
     */
    where?: ClientViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientViews to fetch.
     */
    orderBy?: ClientViewOrderByWithRelationInput | ClientViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClientViews
    **/
    _count?: true | ClientViewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientViewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientViewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientViewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientViewMaxAggregateInputType
  }

  export type GetClientViewAggregateType<T extends ClientViewAggregateArgs> = {
        [P in keyof T & keyof AggregateClientView]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientView[P]>
      : GetScalarType<T[P], AggregateClientView[P]>
  }




  export type ClientViewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientViewWhereInput
    orderBy?: ClientViewOrderByWithAggregationInput | ClientViewOrderByWithAggregationInput[]
    by: ClientViewScalarFieldEnum[] | ClientViewScalarFieldEnum
    having?: ClientViewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientViewCountAggregateInputType | true
    _avg?: ClientViewAvgAggregateInputType
    _sum?: ClientViewSumAggregateInputType
    _min?: ClientViewMinAggregateInputType
    _max?: ClientViewMaxAggregateInputType
  }

  export type ClientViewGroupByOutputType = {
    phoneNumber: string
    name: string | null
    userName: string | null
    labels: string | null
    chatId: string | null
    lastActivity: Date
    threadId: string | null
    threadTokenCount: number | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
    _count: ClientViewCountAggregateOutputType | null
    _avg: ClientViewAvgAggregateOutputType | null
    _sum: ClientViewSumAggregateOutputType | null
    _min: ClientViewMinAggregateOutputType | null
    _max: ClientViewMaxAggregateOutputType | null
  }

  type GetClientViewGroupByPayload<T extends ClientViewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientViewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientViewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientViewGroupByOutputType[P]>
            : GetScalarType<T[P], ClientViewGroupByOutputType[P]>
        }
      >
    >


  export type ClientViewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }, ExtArgs["result"]["clientView"]>

  export type ClientViewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }, ExtArgs["result"]["clientView"]>

  export type ClientViewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }, ExtArgs["result"]["clientView"]>

  export type ClientViewSelectScalar = {
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }

  export type ClientViewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"phoneNumber" | "name" | "userName" | "labels" | "chatId" | "lastActivity" | "threadId" | "threadTokenCount" | "profileStatus" | "proximaAccion" | "fechaProximaAccion" | "prioridad", ExtArgs["result"]["clientView"]>

  export type $ClientViewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClientView"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      phoneNumber: string
      name: string | null
      userName: string | null
      labels: string | null
      chatId: string | null
      lastActivity: Date
      threadId: string | null
      threadTokenCount: number | null
      profileStatus: string | null
      proximaAccion: string | null
      fechaProximaAccion: Date | null
      prioridad: number | null
    }, ExtArgs["result"]["clientView"]>
    composites: {}
  }

  type ClientViewGetPayload<S extends boolean | null | undefined | ClientViewDefaultArgs> = $Result.GetResult<Prisma.$ClientViewPayload, S>

  type ClientViewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientViewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientViewCountAggregateInputType | true
    }

  export interface ClientViewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClientView'], meta: { name: 'ClientView' } }
    /**
     * Find zero or one ClientView that matches the filter.
     * @param {ClientViewFindUniqueArgs} args - Arguments to find a ClientView
     * @example
     * // Get one ClientView
     * const clientView = await prisma.clientView.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientViewFindUniqueArgs>(args: SelectSubset<T, ClientViewFindUniqueArgs<ExtArgs>>): Prisma__ClientViewClient<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ClientView that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientViewFindUniqueOrThrowArgs} args - Arguments to find a ClientView
     * @example
     * // Get one ClientView
     * const clientView = await prisma.clientView.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientViewFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientViewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientViewClient<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientView that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientViewFindFirstArgs} args - Arguments to find a ClientView
     * @example
     * // Get one ClientView
     * const clientView = await prisma.clientView.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientViewFindFirstArgs>(args?: SelectSubset<T, ClientViewFindFirstArgs<ExtArgs>>): Prisma__ClientViewClient<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientView that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientViewFindFirstOrThrowArgs} args - Arguments to find a ClientView
     * @example
     * // Get one ClientView
     * const clientView = await prisma.clientView.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientViewFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientViewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientViewClient<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ClientViews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientViewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClientViews
     * const clientViews = await prisma.clientView.findMany()
     * 
     * // Get first 10 ClientViews
     * const clientViews = await prisma.clientView.findMany({ take: 10 })
     * 
     * // Only select the `phoneNumber`
     * const clientViewWithPhoneNumberOnly = await prisma.clientView.findMany({ select: { phoneNumber: true } })
     * 
     */
    findMany<T extends ClientViewFindManyArgs>(args?: SelectSubset<T, ClientViewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ClientView.
     * @param {ClientViewCreateArgs} args - Arguments to create a ClientView.
     * @example
     * // Create one ClientView
     * const ClientView = await prisma.clientView.create({
     *   data: {
     *     // ... data to create a ClientView
     *   }
     * })
     * 
     */
    create<T extends ClientViewCreateArgs>(args: SelectSubset<T, ClientViewCreateArgs<ExtArgs>>): Prisma__ClientViewClient<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ClientViews.
     * @param {ClientViewCreateManyArgs} args - Arguments to create many ClientViews.
     * @example
     * // Create many ClientViews
     * const clientView = await prisma.clientView.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientViewCreateManyArgs>(args?: SelectSubset<T, ClientViewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClientViews and returns the data saved in the database.
     * @param {ClientViewCreateManyAndReturnArgs} args - Arguments to create many ClientViews.
     * @example
     * // Create many ClientViews
     * const clientView = await prisma.clientView.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClientViews and only return the `phoneNumber`
     * const clientViewWithPhoneNumberOnly = await prisma.clientView.createManyAndReturn({
     *   select: { phoneNumber: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientViewCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientViewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ClientView.
     * @param {ClientViewDeleteArgs} args - Arguments to delete one ClientView.
     * @example
     * // Delete one ClientView
     * const ClientView = await prisma.clientView.delete({
     *   where: {
     *     // ... filter to delete one ClientView
     *   }
     * })
     * 
     */
    delete<T extends ClientViewDeleteArgs>(args: SelectSubset<T, ClientViewDeleteArgs<ExtArgs>>): Prisma__ClientViewClient<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ClientView.
     * @param {ClientViewUpdateArgs} args - Arguments to update one ClientView.
     * @example
     * // Update one ClientView
     * const clientView = await prisma.clientView.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientViewUpdateArgs>(args: SelectSubset<T, ClientViewUpdateArgs<ExtArgs>>): Prisma__ClientViewClient<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ClientViews.
     * @param {ClientViewDeleteManyArgs} args - Arguments to filter ClientViews to delete.
     * @example
     * // Delete a few ClientViews
     * const { count } = await prisma.clientView.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientViewDeleteManyArgs>(args?: SelectSubset<T, ClientViewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientViewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClientViews
     * const clientView = await prisma.clientView.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientViewUpdateManyArgs>(args: SelectSubset<T, ClientViewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientViews and returns the data updated in the database.
     * @param {ClientViewUpdateManyAndReturnArgs} args - Arguments to update many ClientViews.
     * @example
     * // Update many ClientViews
     * const clientView = await prisma.clientView.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ClientViews and only return the `phoneNumber`
     * const clientViewWithPhoneNumberOnly = await prisma.clientView.updateManyAndReturn({
     *   select: { phoneNumber: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientViewUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientViewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ClientView.
     * @param {ClientViewUpsertArgs} args - Arguments to update or create a ClientView.
     * @example
     * // Update or create a ClientView
     * const clientView = await prisma.clientView.upsert({
     *   create: {
     *     // ... data to create a ClientView
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClientView we want to update
     *   }
     * })
     */
    upsert<T extends ClientViewUpsertArgs>(args: SelectSubset<T, ClientViewUpsertArgs<ExtArgs>>): Prisma__ClientViewClient<$Result.GetResult<Prisma.$ClientViewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ClientViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientViewCountArgs} args - Arguments to filter ClientViews to count.
     * @example
     * // Count the number of ClientViews
     * const count = await prisma.clientView.count({
     *   where: {
     *     // ... the filter for the ClientViews we want to count
     *   }
     * })
    **/
    count<T extends ClientViewCountArgs>(
      args?: Subset<T, ClientViewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientViewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClientView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientViewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientViewAggregateArgs>(args: Subset<T, ClientViewAggregateArgs>): Prisma.PrismaPromise<GetClientViewAggregateType<T>>

    /**
     * Group by ClientView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientViewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientViewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientViewGroupByArgs['orderBy'] }
        : { orderBy?: ClientViewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientViewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientViewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClientView model
   */
  readonly fields: ClientViewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClientView.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientViewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClientView model
   */
  interface ClientViewFieldRefs {
    readonly phoneNumber: FieldRef<"ClientView", 'String'>
    readonly name: FieldRef<"ClientView", 'String'>
    readonly userName: FieldRef<"ClientView", 'String'>
    readonly labels: FieldRef<"ClientView", 'String'>
    readonly chatId: FieldRef<"ClientView", 'String'>
    readonly lastActivity: FieldRef<"ClientView", 'DateTime'>
    readonly threadId: FieldRef<"ClientView", 'String'>
    readonly threadTokenCount: FieldRef<"ClientView", 'Int'>
    readonly profileStatus: FieldRef<"ClientView", 'String'>
    readonly proximaAccion: FieldRef<"ClientView", 'String'>
    readonly fechaProximaAccion: FieldRef<"ClientView", 'DateTime'>
    readonly prioridad: FieldRef<"ClientView", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ClientView findUnique
   */
  export type ClientViewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * Filter, which ClientView to fetch.
     */
    where: ClientViewWhereUniqueInput
  }

  /**
   * ClientView findUniqueOrThrow
   */
  export type ClientViewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * Filter, which ClientView to fetch.
     */
    where: ClientViewWhereUniqueInput
  }

  /**
   * ClientView findFirst
   */
  export type ClientViewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * Filter, which ClientView to fetch.
     */
    where?: ClientViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientViews to fetch.
     */
    orderBy?: ClientViewOrderByWithRelationInput | ClientViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientViews.
     */
    cursor?: ClientViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientViews.
     */
    distinct?: ClientViewScalarFieldEnum | ClientViewScalarFieldEnum[]
  }

  /**
   * ClientView findFirstOrThrow
   */
  export type ClientViewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * Filter, which ClientView to fetch.
     */
    where?: ClientViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientViews to fetch.
     */
    orderBy?: ClientViewOrderByWithRelationInput | ClientViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientViews.
     */
    cursor?: ClientViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientViews.
     */
    distinct?: ClientViewScalarFieldEnum | ClientViewScalarFieldEnum[]
  }

  /**
   * ClientView findMany
   */
  export type ClientViewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * Filter, which ClientViews to fetch.
     */
    where?: ClientViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientViews to fetch.
     */
    orderBy?: ClientViewOrderByWithRelationInput | ClientViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClientViews.
     */
    cursor?: ClientViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientViews.
     */
    skip?: number
    distinct?: ClientViewScalarFieldEnum | ClientViewScalarFieldEnum[]
  }

  /**
   * ClientView create
   */
  export type ClientViewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * The data needed to create a ClientView.
     */
    data: XOR<ClientViewCreateInput, ClientViewUncheckedCreateInput>
  }

  /**
   * ClientView createMany
   */
  export type ClientViewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClientViews.
     */
    data: ClientViewCreateManyInput | ClientViewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClientView createManyAndReturn
   */
  export type ClientViewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * The data used to create many ClientViews.
     */
    data: ClientViewCreateManyInput | ClientViewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClientView update
   */
  export type ClientViewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * The data needed to update a ClientView.
     */
    data: XOR<ClientViewUpdateInput, ClientViewUncheckedUpdateInput>
    /**
     * Choose, which ClientView to update.
     */
    where: ClientViewWhereUniqueInput
  }

  /**
   * ClientView updateMany
   */
  export type ClientViewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClientViews.
     */
    data: XOR<ClientViewUpdateManyMutationInput, ClientViewUncheckedUpdateManyInput>
    /**
     * Filter which ClientViews to update
     */
    where?: ClientViewWhereInput
    /**
     * Limit how many ClientViews to update.
     */
    limit?: number
  }

  /**
   * ClientView updateManyAndReturn
   */
  export type ClientViewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * The data used to update ClientViews.
     */
    data: XOR<ClientViewUpdateManyMutationInput, ClientViewUncheckedUpdateManyInput>
    /**
     * Filter which ClientViews to update
     */
    where?: ClientViewWhereInput
    /**
     * Limit how many ClientViews to update.
     */
    limit?: number
  }

  /**
   * ClientView upsert
   */
  export type ClientViewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * The filter to search for the ClientView to update in case it exists.
     */
    where: ClientViewWhereUniqueInput
    /**
     * In case the ClientView found by the `where` argument doesn't exist, create a new ClientView with this data.
     */
    create: XOR<ClientViewCreateInput, ClientViewUncheckedCreateInput>
    /**
     * In case the ClientView was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientViewUpdateInput, ClientViewUncheckedUpdateInput>
  }

  /**
   * ClientView delete
   */
  export type ClientViewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
    /**
     * Filter which ClientView to delete.
     */
    where: ClientViewWhereUniqueInput
  }

  /**
   * ClientView deleteMany
   */
  export type ClientViewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientViews to delete
     */
    where?: ClientViewWhereInput
    /**
     * Limit how many ClientViews to delete.
     */
    limit?: number
  }

  /**
   * ClientView without action
   */
  export type ClientViewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientView
     */
    select?: ClientViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientView
     */
    omit?: ClientViewOmit<ExtArgs> | null
  }


  /**
   * Model hotel_apartments
   */

  export type AggregateHotel_apartments = {
    _count: Hotel_apartmentsCountAggregateOutputType | null
    _avg: Hotel_apartmentsAvgAggregateOutputType | null
    _sum: Hotel_apartmentsSumAggregateOutputType | null
    _min: Hotel_apartmentsMinAggregateOutputType | null
    _max: Hotel_apartmentsMaxAggregateOutputType | null
  }

  export type Hotel_apartmentsAvgAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    capacity: number | null
  }

  export type Hotel_apartmentsSumAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    capacity: number | null
  }

  export type Hotel_apartmentsMinAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    roomName: string | null
    capacity: number | null
  }

  export type Hotel_apartmentsMaxAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    roomName: string | null
    capacity: number | null
  }

  export type Hotel_apartmentsCountAggregateOutputType = {
    id: number
    propertyId: number
    roomId: number
    roomName: number
    extraCharge: number
    capacity: number
    _all: number
  }


  export type Hotel_apartmentsAvgAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    capacity?: true
  }

  export type Hotel_apartmentsSumAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    capacity?: true
  }

  export type Hotel_apartmentsMinAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    roomName?: true
    capacity?: true
  }

  export type Hotel_apartmentsMaxAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    roomName?: true
    capacity?: true
  }

  export type Hotel_apartmentsCountAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    roomName?: true
    extraCharge?: true
    capacity?: true
    _all?: true
  }

  export type Hotel_apartmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which hotel_apartments to aggregate.
     */
    where?: hotel_apartmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hotel_apartments to fetch.
     */
    orderBy?: hotel_apartmentsOrderByWithRelationInput | hotel_apartmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: hotel_apartmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hotel_apartments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hotel_apartments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned hotel_apartments
    **/
    _count?: true | Hotel_apartmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Hotel_apartmentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Hotel_apartmentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Hotel_apartmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Hotel_apartmentsMaxAggregateInputType
  }

  export type GetHotel_apartmentsAggregateType<T extends Hotel_apartmentsAggregateArgs> = {
        [P in keyof T & keyof AggregateHotel_apartments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHotel_apartments[P]>
      : GetScalarType<T[P], AggregateHotel_apartments[P]>
  }




  export type hotel_apartmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: hotel_apartmentsWhereInput
    orderBy?: hotel_apartmentsOrderByWithAggregationInput | hotel_apartmentsOrderByWithAggregationInput[]
    by: Hotel_apartmentsScalarFieldEnum[] | Hotel_apartmentsScalarFieldEnum
    having?: hotel_apartmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Hotel_apartmentsCountAggregateInputType | true
    _avg?: Hotel_apartmentsAvgAggregateInputType
    _sum?: Hotel_apartmentsSumAggregateInputType
    _min?: Hotel_apartmentsMinAggregateInputType
    _max?: Hotel_apartmentsMaxAggregateInputType
  }

  export type Hotel_apartmentsGroupByOutputType = {
    id: number
    propertyId: number
    roomId: number
    roomName: string
    extraCharge: JsonValue
    capacity: number
    _count: Hotel_apartmentsCountAggregateOutputType | null
    _avg: Hotel_apartmentsAvgAggregateOutputType | null
    _sum: Hotel_apartmentsSumAggregateOutputType | null
    _min: Hotel_apartmentsMinAggregateOutputType | null
    _max: Hotel_apartmentsMaxAggregateOutputType | null
  }

  type GetHotel_apartmentsGroupByPayload<T extends hotel_apartmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Hotel_apartmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Hotel_apartmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Hotel_apartmentsGroupByOutputType[P]>
            : GetScalarType<T[P], Hotel_apartmentsGroupByOutputType[P]>
        }
      >
    >


  export type hotel_apartmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }, ExtArgs["result"]["hotel_apartments"]>

  export type hotel_apartmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }, ExtArgs["result"]["hotel_apartments"]>

  export type hotel_apartmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }, ExtArgs["result"]["hotel_apartments"]>

  export type hotel_apartmentsSelectScalar = {
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }

  export type hotel_apartmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "propertyId" | "roomId" | "roomName" | "extraCharge" | "capacity", ExtArgs["result"]["hotel_apartments"]>

  export type $hotel_apartmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "hotel_apartments"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      propertyId: number
      roomId: number
      roomName: string
      extraCharge: Prisma.JsonValue
      capacity: number
    }, ExtArgs["result"]["hotel_apartments"]>
    composites: {}
  }

  type hotel_apartmentsGetPayload<S extends boolean | null | undefined | hotel_apartmentsDefaultArgs> = $Result.GetResult<Prisma.$hotel_apartmentsPayload, S>

  type hotel_apartmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<hotel_apartmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Hotel_apartmentsCountAggregateInputType | true
    }

  export interface hotel_apartmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['hotel_apartments'], meta: { name: 'hotel_apartments' } }
    /**
     * Find zero or one Hotel_apartments that matches the filter.
     * @param {hotel_apartmentsFindUniqueArgs} args - Arguments to find a Hotel_apartments
     * @example
     * // Get one Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends hotel_apartmentsFindUniqueArgs>(args: SelectSubset<T, hotel_apartmentsFindUniqueArgs<ExtArgs>>): Prisma__hotel_apartmentsClient<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Hotel_apartments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {hotel_apartmentsFindUniqueOrThrowArgs} args - Arguments to find a Hotel_apartments
     * @example
     * // Get one Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends hotel_apartmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, hotel_apartmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__hotel_apartmentsClient<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Hotel_apartments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hotel_apartmentsFindFirstArgs} args - Arguments to find a Hotel_apartments
     * @example
     * // Get one Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends hotel_apartmentsFindFirstArgs>(args?: SelectSubset<T, hotel_apartmentsFindFirstArgs<ExtArgs>>): Prisma__hotel_apartmentsClient<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Hotel_apartments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hotel_apartmentsFindFirstOrThrowArgs} args - Arguments to find a Hotel_apartments
     * @example
     * // Get one Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends hotel_apartmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, hotel_apartmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__hotel_apartmentsClient<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Hotel_apartments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hotel_apartmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.findMany()
     * 
     * // Get first 10 Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const hotel_apartmentsWithIdOnly = await prisma.hotel_apartments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends hotel_apartmentsFindManyArgs>(args?: SelectSubset<T, hotel_apartmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Hotel_apartments.
     * @param {hotel_apartmentsCreateArgs} args - Arguments to create a Hotel_apartments.
     * @example
     * // Create one Hotel_apartments
     * const Hotel_apartments = await prisma.hotel_apartments.create({
     *   data: {
     *     // ... data to create a Hotel_apartments
     *   }
     * })
     * 
     */
    create<T extends hotel_apartmentsCreateArgs>(args: SelectSubset<T, hotel_apartmentsCreateArgs<ExtArgs>>): Prisma__hotel_apartmentsClient<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Hotel_apartments.
     * @param {hotel_apartmentsCreateManyArgs} args - Arguments to create many Hotel_apartments.
     * @example
     * // Create many Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends hotel_apartmentsCreateManyArgs>(args?: SelectSubset<T, hotel_apartmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Hotel_apartments and returns the data saved in the database.
     * @param {hotel_apartmentsCreateManyAndReturnArgs} args - Arguments to create many Hotel_apartments.
     * @example
     * // Create many Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Hotel_apartments and only return the `id`
     * const hotel_apartmentsWithIdOnly = await prisma.hotel_apartments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends hotel_apartmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, hotel_apartmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Hotel_apartments.
     * @param {hotel_apartmentsDeleteArgs} args - Arguments to delete one Hotel_apartments.
     * @example
     * // Delete one Hotel_apartments
     * const Hotel_apartments = await prisma.hotel_apartments.delete({
     *   where: {
     *     // ... filter to delete one Hotel_apartments
     *   }
     * })
     * 
     */
    delete<T extends hotel_apartmentsDeleteArgs>(args: SelectSubset<T, hotel_apartmentsDeleteArgs<ExtArgs>>): Prisma__hotel_apartmentsClient<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Hotel_apartments.
     * @param {hotel_apartmentsUpdateArgs} args - Arguments to update one Hotel_apartments.
     * @example
     * // Update one Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends hotel_apartmentsUpdateArgs>(args: SelectSubset<T, hotel_apartmentsUpdateArgs<ExtArgs>>): Prisma__hotel_apartmentsClient<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Hotel_apartments.
     * @param {hotel_apartmentsDeleteManyArgs} args - Arguments to filter Hotel_apartments to delete.
     * @example
     * // Delete a few Hotel_apartments
     * const { count } = await prisma.hotel_apartments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends hotel_apartmentsDeleteManyArgs>(args?: SelectSubset<T, hotel_apartmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hotel_apartments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hotel_apartmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends hotel_apartmentsUpdateManyArgs>(args: SelectSubset<T, hotel_apartmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hotel_apartments and returns the data updated in the database.
     * @param {hotel_apartmentsUpdateManyAndReturnArgs} args - Arguments to update many Hotel_apartments.
     * @example
     * // Update many Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Hotel_apartments and only return the `id`
     * const hotel_apartmentsWithIdOnly = await prisma.hotel_apartments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends hotel_apartmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, hotel_apartmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Hotel_apartments.
     * @param {hotel_apartmentsUpsertArgs} args - Arguments to update or create a Hotel_apartments.
     * @example
     * // Update or create a Hotel_apartments
     * const hotel_apartments = await prisma.hotel_apartments.upsert({
     *   create: {
     *     // ... data to create a Hotel_apartments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Hotel_apartments we want to update
     *   }
     * })
     */
    upsert<T extends hotel_apartmentsUpsertArgs>(args: SelectSubset<T, hotel_apartmentsUpsertArgs<ExtArgs>>): Prisma__hotel_apartmentsClient<$Result.GetResult<Prisma.$hotel_apartmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Hotel_apartments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hotel_apartmentsCountArgs} args - Arguments to filter Hotel_apartments to count.
     * @example
     * // Count the number of Hotel_apartments
     * const count = await prisma.hotel_apartments.count({
     *   where: {
     *     // ... the filter for the Hotel_apartments we want to count
     *   }
     * })
    **/
    count<T extends hotel_apartmentsCountArgs>(
      args?: Subset<T, hotel_apartmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Hotel_apartmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Hotel_apartments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Hotel_apartmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Hotel_apartmentsAggregateArgs>(args: Subset<T, Hotel_apartmentsAggregateArgs>): Prisma.PrismaPromise<GetHotel_apartmentsAggregateType<T>>

    /**
     * Group by Hotel_apartments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {hotel_apartmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends hotel_apartmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: hotel_apartmentsGroupByArgs['orderBy'] }
        : { orderBy?: hotel_apartmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, hotel_apartmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHotel_apartmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the hotel_apartments model
   */
  readonly fields: hotel_apartmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for hotel_apartments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__hotel_apartmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the hotel_apartments model
   */
  interface hotel_apartmentsFieldRefs {
    readonly id: FieldRef<"hotel_apartments", 'Int'>
    readonly propertyId: FieldRef<"hotel_apartments", 'Int'>
    readonly roomId: FieldRef<"hotel_apartments", 'Int'>
    readonly roomName: FieldRef<"hotel_apartments", 'String'>
    readonly extraCharge: FieldRef<"hotel_apartments", 'Json'>
    readonly capacity: FieldRef<"hotel_apartments", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * hotel_apartments findUnique
   */
  export type hotel_apartmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * Filter, which hotel_apartments to fetch.
     */
    where: hotel_apartmentsWhereUniqueInput
  }

  /**
   * hotel_apartments findUniqueOrThrow
   */
  export type hotel_apartmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * Filter, which hotel_apartments to fetch.
     */
    where: hotel_apartmentsWhereUniqueInput
  }

  /**
   * hotel_apartments findFirst
   */
  export type hotel_apartmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * Filter, which hotel_apartments to fetch.
     */
    where?: hotel_apartmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hotel_apartments to fetch.
     */
    orderBy?: hotel_apartmentsOrderByWithRelationInput | hotel_apartmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for hotel_apartments.
     */
    cursor?: hotel_apartmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hotel_apartments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hotel_apartments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of hotel_apartments.
     */
    distinct?: Hotel_apartmentsScalarFieldEnum | Hotel_apartmentsScalarFieldEnum[]
  }

  /**
   * hotel_apartments findFirstOrThrow
   */
  export type hotel_apartmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * Filter, which hotel_apartments to fetch.
     */
    where?: hotel_apartmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hotel_apartments to fetch.
     */
    orderBy?: hotel_apartmentsOrderByWithRelationInput | hotel_apartmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for hotel_apartments.
     */
    cursor?: hotel_apartmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hotel_apartments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hotel_apartments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of hotel_apartments.
     */
    distinct?: Hotel_apartmentsScalarFieldEnum | Hotel_apartmentsScalarFieldEnum[]
  }

  /**
   * hotel_apartments findMany
   */
  export type hotel_apartmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * Filter, which hotel_apartments to fetch.
     */
    where?: hotel_apartmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of hotel_apartments to fetch.
     */
    orderBy?: hotel_apartmentsOrderByWithRelationInput | hotel_apartmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing hotel_apartments.
     */
    cursor?: hotel_apartmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` hotel_apartments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` hotel_apartments.
     */
    skip?: number
    distinct?: Hotel_apartmentsScalarFieldEnum | Hotel_apartmentsScalarFieldEnum[]
  }

  /**
   * hotel_apartments create
   */
  export type hotel_apartmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * The data needed to create a hotel_apartments.
     */
    data: XOR<hotel_apartmentsCreateInput, hotel_apartmentsUncheckedCreateInput>
  }

  /**
   * hotel_apartments createMany
   */
  export type hotel_apartmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many hotel_apartments.
     */
    data: hotel_apartmentsCreateManyInput | hotel_apartmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * hotel_apartments createManyAndReturn
   */
  export type hotel_apartmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * The data used to create many hotel_apartments.
     */
    data: hotel_apartmentsCreateManyInput | hotel_apartmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * hotel_apartments update
   */
  export type hotel_apartmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * The data needed to update a hotel_apartments.
     */
    data: XOR<hotel_apartmentsUpdateInput, hotel_apartmentsUncheckedUpdateInput>
    /**
     * Choose, which hotel_apartments to update.
     */
    where: hotel_apartmentsWhereUniqueInput
  }

  /**
   * hotel_apartments updateMany
   */
  export type hotel_apartmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update hotel_apartments.
     */
    data: XOR<hotel_apartmentsUpdateManyMutationInput, hotel_apartmentsUncheckedUpdateManyInput>
    /**
     * Filter which hotel_apartments to update
     */
    where?: hotel_apartmentsWhereInput
    /**
     * Limit how many hotel_apartments to update.
     */
    limit?: number
  }

  /**
   * hotel_apartments updateManyAndReturn
   */
  export type hotel_apartmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * The data used to update hotel_apartments.
     */
    data: XOR<hotel_apartmentsUpdateManyMutationInput, hotel_apartmentsUncheckedUpdateManyInput>
    /**
     * Filter which hotel_apartments to update
     */
    where?: hotel_apartmentsWhereInput
    /**
     * Limit how many hotel_apartments to update.
     */
    limit?: number
  }

  /**
   * hotel_apartments upsert
   */
  export type hotel_apartmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * The filter to search for the hotel_apartments to update in case it exists.
     */
    where: hotel_apartmentsWhereUniqueInput
    /**
     * In case the hotel_apartments found by the `where` argument doesn't exist, create a new hotel_apartments with this data.
     */
    create: XOR<hotel_apartmentsCreateInput, hotel_apartmentsUncheckedCreateInput>
    /**
     * In case the hotel_apartments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<hotel_apartmentsUpdateInput, hotel_apartmentsUncheckedUpdateInput>
  }

  /**
   * hotel_apartments delete
   */
  export type hotel_apartmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
    /**
     * Filter which hotel_apartments to delete.
     */
    where: hotel_apartmentsWhereUniqueInput
  }

  /**
   * hotel_apartments deleteMany
   */
  export type hotel_apartmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which hotel_apartments to delete
     */
    where?: hotel_apartmentsWhereInput
    /**
     * Limit how many hotel_apartments to delete.
     */
    limit?: number
  }

  /**
   * hotel_apartments without action
   */
  export type hotel_apartmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the hotel_apartments
     */
    select?: hotel_apartmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the hotel_apartments
     */
    omit?: hotel_apartmentsOmit<ExtArgs> | null
  }


  /**
   * Model Booking
   */

  export type AggregateBooking = {
    _count: BookingCountAggregateOutputType | null
    _avg: BookingAvgAggregateOutputType | null
    _sum: BookingSumAggregateOutputType | null
    _min: BookingMinAggregateOutputType | null
    _max: BookingMaxAggregateOutputType | null
  }

  export type BookingAvgAggregateOutputType = {
    id: number | null
    numNights: number | null
    totalPersons: number | null
  }

  export type BookingSumAggregateOutputType = {
    id: number | null
    numNights: number | null
    totalPersons: number | null
  }

  export type BookingMinAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    status: string | null
    internalNotes: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    numNights: number | null
    totalPersons: number | null
    totalCharges: string | null
    totalPayments: string | null
    balance: string | null
    basePrice: string | null
    channel: string | null
    email: string | null
    apiReference: string | null
    notes: string | null
    bookingDate: string | null
    modifiedDate: string | null
    lastUpdatedBD: Date | null
    BDStatus: string | null
    leadType: string | null
  }

  export type BookingMaxAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    status: string | null
    internalNotes: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    numNights: number | null
    totalPersons: number | null
    totalCharges: string | null
    totalPayments: string | null
    balance: string | null
    basePrice: string | null
    channel: string | null
    email: string | null
    apiReference: string | null
    notes: string | null
    bookingDate: string | null
    modifiedDate: string | null
    lastUpdatedBD: Date | null
    BDStatus: string | null
    leadType: string | null
  }

  export type BookingCountAggregateOutputType = {
    id: number
    bookingId: number
    phone: number
    guestName: number
    status: number
    internalNotes: number
    propertyName: number
    arrivalDate: number
    departureDate: number
    numNights: number
    totalPersons: number
    totalCharges: number
    totalPayments: number
    balance: number
    basePrice: number
    channel: number
    email: number
    apiReference: number
    charges: number
    payments: number
    messages: number
    infoItems: number
    notes: number
    bookingDate: number
    modifiedDate: number
    lastUpdatedBD: number
    raw: number
    BDStatus: number
    leadType: number
    _all: number
  }


  export type BookingAvgAggregateInputType = {
    id?: true
    numNights?: true
    totalPersons?: true
  }

  export type BookingSumAggregateInputType = {
    id?: true
    numNights?: true
    totalPersons?: true
  }

  export type BookingMinAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    status?: true
    internalNotes?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    totalCharges?: true
    totalPayments?: true
    balance?: true
    basePrice?: true
    channel?: true
    email?: true
    apiReference?: true
    notes?: true
    bookingDate?: true
    modifiedDate?: true
    lastUpdatedBD?: true
    BDStatus?: true
    leadType?: true
  }

  export type BookingMaxAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    status?: true
    internalNotes?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    totalCharges?: true
    totalPayments?: true
    balance?: true
    basePrice?: true
    channel?: true
    email?: true
    apiReference?: true
    notes?: true
    bookingDate?: true
    modifiedDate?: true
    lastUpdatedBD?: true
    BDStatus?: true
    leadType?: true
  }

  export type BookingCountAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    status?: true
    internalNotes?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    totalCharges?: true
    totalPayments?: true
    balance?: true
    basePrice?: true
    channel?: true
    email?: true
    apiReference?: true
    charges?: true
    payments?: true
    messages?: true
    infoItems?: true
    notes?: true
    bookingDate?: true
    modifiedDate?: true
    lastUpdatedBD?: true
    raw?: true
    BDStatus?: true
    leadType?: true
    _all?: true
  }

  export type BookingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Booking to aggregate.
     */
    where?: BookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bookings to fetch.
     */
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bookings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bookings
    **/
    _count?: true | BookingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BookingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BookingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BookingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BookingMaxAggregateInputType
  }

  export type GetBookingAggregateType<T extends BookingAggregateArgs> = {
        [P in keyof T & keyof AggregateBooking]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBooking[P]>
      : GetScalarType<T[P], AggregateBooking[P]>
  }




  export type BookingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BookingWhereInput
    orderBy?: BookingOrderByWithAggregationInput | BookingOrderByWithAggregationInput[]
    by: BookingScalarFieldEnum[] | BookingScalarFieldEnum
    having?: BookingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BookingCountAggregateInputType | true
    _avg?: BookingAvgAggregateInputType
    _sum?: BookingSumAggregateInputType
    _min?: BookingMinAggregateInputType
    _max?: BookingMaxAggregateInputType
  }

  export type BookingGroupByOutputType = {
    id: number
    bookingId: string
    phone: string | null
    guestName: string | null
    status: string | null
    internalNotes: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    numNights: number | null
    totalPersons: number | null
    totalCharges: string | null
    totalPayments: string | null
    balance: string | null
    basePrice: string | null
    channel: string | null
    email: string | null
    apiReference: string | null
    charges: JsonValue
    payments: JsonValue
    messages: JsonValue
    infoItems: JsonValue
    notes: string | null
    bookingDate: string | null
    modifiedDate: string | null
    lastUpdatedBD: Date
    raw: JsonValue | null
    BDStatus: string | null
    leadType: string | null
    _count: BookingCountAggregateOutputType | null
    _avg: BookingAvgAggregateOutputType | null
    _sum: BookingSumAggregateOutputType | null
    _min: BookingMinAggregateOutputType | null
    _max: BookingMaxAggregateOutputType | null
  }

  type GetBookingGroupByPayload<T extends BookingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BookingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BookingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BookingGroupByOutputType[P]>
            : GetScalarType<T[P], BookingGroupByOutputType[P]>
        }
      >
    >


  export type BookingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
    leadType?: boolean
  }, ExtArgs["result"]["booking"]>

  export type BookingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
    leadType?: boolean
  }, ExtArgs["result"]["booking"]>

  export type BookingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
    leadType?: boolean
  }, ExtArgs["result"]["booking"]>

  export type BookingSelectScalar = {
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
    leadType?: boolean
  }

  export type BookingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bookingId" | "phone" | "guestName" | "status" | "internalNotes" | "propertyName" | "arrivalDate" | "departureDate" | "numNights" | "totalPersons" | "totalCharges" | "totalPayments" | "balance" | "basePrice" | "channel" | "email" | "apiReference" | "charges" | "payments" | "messages" | "infoItems" | "notes" | "bookingDate" | "modifiedDate" | "lastUpdatedBD" | "raw" | "BDStatus" | "leadType", ExtArgs["result"]["booking"]>

  export type $BookingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Booking"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bookingId: string
      phone: string | null
      guestName: string | null
      status: string | null
      internalNotes: string | null
      propertyName: string | null
      arrivalDate: string | null
      departureDate: string | null
      numNights: number | null
      totalPersons: number | null
      totalCharges: string | null
      totalPayments: string | null
      balance: string | null
      basePrice: string | null
      channel: string | null
      email: string | null
      apiReference: string | null
      charges: Prisma.JsonValue
      payments: Prisma.JsonValue
      messages: Prisma.JsonValue
      infoItems: Prisma.JsonValue
      notes: string | null
      bookingDate: string | null
      modifiedDate: string | null
      lastUpdatedBD: Date
      raw: Prisma.JsonValue | null
      BDStatus: string | null
      leadType: string | null
    }, ExtArgs["result"]["booking"]>
    composites: {}
  }

  type BookingGetPayload<S extends boolean | null | undefined | BookingDefaultArgs> = $Result.GetResult<Prisma.$BookingPayload, S>

  type BookingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BookingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BookingCountAggregateInputType | true
    }

  export interface BookingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Booking'], meta: { name: 'Booking' } }
    /**
     * Find zero or one Booking that matches the filter.
     * @param {BookingFindUniqueArgs} args - Arguments to find a Booking
     * @example
     * // Get one Booking
     * const booking = await prisma.booking.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BookingFindUniqueArgs>(args: SelectSubset<T, BookingFindUniqueArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Booking that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BookingFindUniqueOrThrowArgs} args - Arguments to find a Booking
     * @example
     * // Get one Booking
     * const booking = await prisma.booking.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BookingFindUniqueOrThrowArgs>(args: SelectSubset<T, BookingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Booking that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingFindFirstArgs} args - Arguments to find a Booking
     * @example
     * // Get one Booking
     * const booking = await prisma.booking.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BookingFindFirstArgs>(args?: SelectSubset<T, BookingFindFirstArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Booking that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingFindFirstOrThrowArgs} args - Arguments to find a Booking
     * @example
     * // Get one Booking
     * const booking = await prisma.booking.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BookingFindFirstOrThrowArgs>(args?: SelectSubset<T, BookingFindFirstOrThrowArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bookings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bookings
     * const bookings = await prisma.booking.findMany()
     * 
     * // Get first 10 Bookings
     * const bookings = await prisma.booking.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bookingWithIdOnly = await prisma.booking.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BookingFindManyArgs>(args?: SelectSubset<T, BookingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Booking.
     * @param {BookingCreateArgs} args - Arguments to create a Booking.
     * @example
     * // Create one Booking
     * const Booking = await prisma.booking.create({
     *   data: {
     *     // ... data to create a Booking
     *   }
     * })
     * 
     */
    create<T extends BookingCreateArgs>(args: SelectSubset<T, BookingCreateArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bookings.
     * @param {BookingCreateManyArgs} args - Arguments to create many Bookings.
     * @example
     * // Create many Bookings
     * const booking = await prisma.booking.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BookingCreateManyArgs>(args?: SelectSubset<T, BookingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bookings and returns the data saved in the database.
     * @param {BookingCreateManyAndReturnArgs} args - Arguments to create many Bookings.
     * @example
     * // Create many Bookings
     * const booking = await prisma.booking.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bookings and only return the `id`
     * const bookingWithIdOnly = await prisma.booking.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BookingCreateManyAndReturnArgs>(args?: SelectSubset<T, BookingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Booking.
     * @param {BookingDeleteArgs} args - Arguments to delete one Booking.
     * @example
     * // Delete one Booking
     * const Booking = await prisma.booking.delete({
     *   where: {
     *     // ... filter to delete one Booking
     *   }
     * })
     * 
     */
    delete<T extends BookingDeleteArgs>(args: SelectSubset<T, BookingDeleteArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Booking.
     * @param {BookingUpdateArgs} args - Arguments to update one Booking.
     * @example
     * // Update one Booking
     * const booking = await prisma.booking.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BookingUpdateArgs>(args: SelectSubset<T, BookingUpdateArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bookings.
     * @param {BookingDeleteManyArgs} args - Arguments to filter Bookings to delete.
     * @example
     * // Delete a few Bookings
     * const { count } = await prisma.booking.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BookingDeleteManyArgs>(args?: SelectSubset<T, BookingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bookings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bookings
     * const booking = await prisma.booking.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BookingUpdateManyArgs>(args: SelectSubset<T, BookingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bookings and returns the data updated in the database.
     * @param {BookingUpdateManyAndReturnArgs} args - Arguments to update many Bookings.
     * @example
     * // Update many Bookings
     * const booking = await prisma.booking.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Bookings and only return the `id`
     * const bookingWithIdOnly = await prisma.booking.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BookingUpdateManyAndReturnArgs>(args: SelectSubset<T, BookingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Booking.
     * @param {BookingUpsertArgs} args - Arguments to update or create a Booking.
     * @example
     * // Update or create a Booking
     * const booking = await prisma.booking.upsert({
     *   create: {
     *     // ... data to create a Booking
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Booking we want to update
     *   }
     * })
     */
    upsert<T extends BookingUpsertArgs>(args: SelectSubset<T, BookingUpsertArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bookings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingCountArgs} args - Arguments to filter Bookings to count.
     * @example
     * // Count the number of Bookings
     * const count = await prisma.booking.count({
     *   where: {
     *     // ... the filter for the Bookings we want to count
     *   }
     * })
    **/
    count<T extends BookingCountArgs>(
      args?: Subset<T, BookingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BookingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Booking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BookingAggregateArgs>(args: Subset<T, BookingAggregateArgs>): Prisma.PrismaPromise<GetBookingAggregateType<T>>

    /**
     * Group by Booking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BookingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BookingGroupByArgs['orderBy'] }
        : { orderBy?: BookingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BookingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBookingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Booking model
   */
  readonly fields: BookingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Booking.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BookingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Booking model
   */
  interface BookingFieldRefs {
    readonly id: FieldRef<"Booking", 'Int'>
    readonly bookingId: FieldRef<"Booking", 'String'>
    readonly phone: FieldRef<"Booking", 'String'>
    readonly guestName: FieldRef<"Booking", 'String'>
    readonly status: FieldRef<"Booking", 'String'>
    readonly internalNotes: FieldRef<"Booking", 'String'>
    readonly propertyName: FieldRef<"Booking", 'String'>
    readonly arrivalDate: FieldRef<"Booking", 'String'>
    readonly departureDate: FieldRef<"Booking", 'String'>
    readonly numNights: FieldRef<"Booking", 'Int'>
    readonly totalPersons: FieldRef<"Booking", 'Int'>
    readonly totalCharges: FieldRef<"Booking", 'String'>
    readonly totalPayments: FieldRef<"Booking", 'String'>
    readonly balance: FieldRef<"Booking", 'String'>
    readonly basePrice: FieldRef<"Booking", 'String'>
    readonly channel: FieldRef<"Booking", 'String'>
    readonly email: FieldRef<"Booking", 'String'>
    readonly apiReference: FieldRef<"Booking", 'String'>
    readonly charges: FieldRef<"Booking", 'Json'>
    readonly payments: FieldRef<"Booking", 'Json'>
    readonly messages: FieldRef<"Booking", 'Json'>
    readonly infoItems: FieldRef<"Booking", 'Json'>
    readonly notes: FieldRef<"Booking", 'String'>
    readonly bookingDate: FieldRef<"Booking", 'String'>
    readonly modifiedDate: FieldRef<"Booking", 'String'>
    readonly lastUpdatedBD: FieldRef<"Booking", 'DateTime'>
    readonly raw: FieldRef<"Booking", 'Json'>
    readonly BDStatus: FieldRef<"Booking", 'String'>
    readonly leadType: FieldRef<"Booking", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Booking findUnique
   */
  export type BookingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Filter, which Booking to fetch.
     */
    where: BookingWhereUniqueInput
  }

  /**
   * Booking findUniqueOrThrow
   */
  export type BookingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Filter, which Booking to fetch.
     */
    where: BookingWhereUniqueInput
  }

  /**
   * Booking findFirst
   */
  export type BookingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Filter, which Booking to fetch.
     */
    where?: BookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bookings to fetch.
     */
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bookings.
     */
    cursor?: BookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bookings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bookings.
     */
    distinct?: BookingScalarFieldEnum | BookingScalarFieldEnum[]
  }

  /**
   * Booking findFirstOrThrow
   */
  export type BookingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Filter, which Booking to fetch.
     */
    where?: BookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bookings to fetch.
     */
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bookings.
     */
    cursor?: BookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bookings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bookings.
     */
    distinct?: BookingScalarFieldEnum | BookingScalarFieldEnum[]
  }

  /**
   * Booking findMany
   */
  export type BookingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Filter, which Bookings to fetch.
     */
    where?: BookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bookings to fetch.
     */
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bookings.
     */
    cursor?: BookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bookings.
     */
    skip?: number
    distinct?: BookingScalarFieldEnum | BookingScalarFieldEnum[]
  }

  /**
   * Booking create
   */
  export type BookingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * The data needed to create a Booking.
     */
    data: XOR<BookingCreateInput, BookingUncheckedCreateInput>
  }

  /**
   * Booking createMany
   */
  export type BookingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bookings.
     */
    data: BookingCreateManyInput | BookingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Booking createManyAndReturn
   */
  export type BookingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * The data used to create many Bookings.
     */
    data: BookingCreateManyInput | BookingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Booking update
   */
  export type BookingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * The data needed to update a Booking.
     */
    data: XOR<BookingUpdateInput, BookingUncheckedUpdateInput>
    /**
     * Choose, which Booking to update.
     */
    where: BookingWhereUniqueInput
  }

  /**
   * Booking updateMany
   */
  export type BookingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bookings.
     */
    data: XOR<BookingUpdateManyMutationInput, BookingUncheckedUpdateManyInput>
    /**
     * Filter which Bookings to update
     */
    where?: BookingWhereInput
    /**
     * Limit how many Bookings to update.
     */
    limit?: number
  }

  /**
   * Booking updateManyAndReturn
   */
  export type BookingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * The data used to update Bookings.
     */
    data: XOR<BookingUpdateManyMutationInput, BookingUncheckedUpdateManyInput>
    /**
     * Filter which Bookings to update
     */
    where?: BookingWhereInput
    /**
     * Limit how many Bookings to update.
     */
    limit?: number
  }

  /**
   * Booking upsert
   */
  export type BookingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * The filter to search for the Booking to update in case it exists.
     */
    where: BookingWhereUniqueInput
    /**
     * In case the Booking found by the `where` argument doesn't exist, create a new Booking with this data.
     */
    create: XOR<BookingCreateInput, BookingUncheckedCreateInput>
    /**
     * In case the Booking was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BookingUpdateInput, BookingUncheckedUpdateInput>
  }

  /**
   * Booking delete
   */
  export type BookingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Filter which Booking to delete.
     */
    where: BookingWhereUniqueInput
  }

  /**
   * Booking deleteMany
   */
  export type BookingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bookings to delete
     */
    where?: BookingWhereInput
    /**
     * Limit how many Bookings to delete.
     */
    limit?: number
  }

  /**
   * Booking without action
   */
  export type BookingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
  }


  /**
   * Model Leads
   */

  export type AggregateLeads = {
    _count: LeadsCountAggregateOutputType | null
    _avg: LeadsAvgAggregateOutputType | null
    _sum: LeadsSumAggregateOutputType | null
    _min: LeadsMinAggregateOutputType | null
    _max: LeadsMaxAggregateOutputType | null
  }

  export type LeadsAvgAggregateOutputType = {
    id: number | null
    totalPersons: number | null
    numNights: number | null
  }

  export type LeadsSumAggregateOutputType = {
    id: number | null
    totalPersons: number | null
    numNights: number | null
  }

  export type LeadsMinAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    totalPersons: number | null
    source: string | null
    channel: string | null
    priority: string | null
    notes: string | null
    createdAt: Date | null
    lastUpdatedLeads: Date | null
    numNights: number | null
    estimatedValue: string | null
    assignedTo: string | null
    lastContactAt: Date | null
    nextFollowUp: Date | null
    lastUpdated: Date | null
  }

  export type LeadsMaxAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    totalPersons: number | null
    source: string | null
    channel: string | null
    priority: string | null
    notes: string | null
    createdAt: Date | null
    lastUpdatedLeads: Date | null
    numNights: number | null
    estimatedValue: string | null
    assignedTo: string | null
    lastContactAt: Date | null
    nextFollowUp: Date | null
    lastUpdated: Date | null
  }

  export type LeadsCountAggregateOutputType = {
    id: number
    bookingId: number
    phone: number
    guestName: number
    propertyName: number
    arrivalDate: number
    departureDate: number
    totalPersons: number
    source: number
    channel: number
    priority: number
    notes: number
    createdAt: number
    lastUpdatedLeads: number
    numNights: number
    estimatedValue: number
    assignedTo: number
    lastContactAt: number
    nextFollowUp: number
    lastUpdated: number
    _all: number
  }


  export type LeadsAvgAggregateInputType = {
    id?: true
    totalPersons?: true
    numNights?: true
  }

  export type LeadsSumAggregateInputType = {
    id?: true
    totalPersons?: true
    numNights?: true
  }

  export type LeadsMinAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    totalPersons?: true
    source?: true
    channel?: true
    priority?: true
    notes?: true
    createdAt?: true
    lastUpdatedLeads?: true
    numNights?: true
    estimatedValue?: true
    assignedTo?: true
    lastContactAt?: true
    nextFollowUp?: true
    lastUpdated?: true
  }

  export type LeadsMaxAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    totalPersons?: true
    source?: true
    channel?: true
    priority?: true
    notes?: true
    createdAt?: true
    lastUpdatedLeads?: true
    numNights?: true
    estimatedValue?: true
    assignedTo?: true
    lastContactAt?: true
    nextFollowUp?: true
    lastUpdated?: true
  }

  export type LeadsCountAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    totalPersons?: true
    source?: true
    channel?: true
    priority?: true
    notes?: true
    createdAt?: true
    lastUpdatedLeads?: true
    numNights?: true
    estimatedValue?: true
    assignedTo?: true
    lastContactAt?: true
    nextFollowUp?: true
    lastUpdated?: true
    _all?: true
  }

  export type LeadsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Leads to aggregate.
     */
    where?: LeadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadsOrderByWithRelationInput | LeadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LeadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Leads
    **/
    _count?: true | LeadsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LeadsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LeadsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeadsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeadsMaxAggregateInputType
  }

  export type GetLeadsAggregateType<T extends LeadsAggregateArgs> = {
        [P in keyof T & keyof AggregateLeads]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeads[P]>
      : GetScalarType<T[P], AggregateLeads[P]>
  }




  export type LeadsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadsWhereInput
    orderBy?: LeadsOrderByWithAggregationInput | LeadsOrderByWithAggregationInput[]
    by: LeadsScalarFieldEnum[] | LeadsScalarFieldEnum
    having?: LeadsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeadsCountAggregateInputType | true
    _avg?: LeadsAvgAggregateInputType
    _sum?: LeadsSumAggregateInputType
    _min?: LeadsMinAggregateInputType
    _max?: LeadsMaxAggregateInputType
  }

  export type LeadsGroupByOutputType = {
    id: number
    bookingId: string | null
    phone: string
    guestName: string | null
    propertyName: string | null
    arrivalDate: string
    departureDate: string | null
    totalPersons: number | null
    source: string
    channel: string | null
    priority: string
    notes: string | null
    createdAt: Date
    lastUpdatedLeads: Date
    numNights: number | null
    estimatedValue: string | null
    assignedTo: string | null
    lastContactAt: Date | null
    nextFollowUp: Date | null
    lastUpdated: Date
    _count: LeadsCountAggregateOutputType | null
    _avg: LeadsAvgAggregateOutputType | null
    _sum: LeadsSumAggregateOutputType | null
    _min: LeadsMinAggregateOutputType | null
    _max: LeadsMaxAggregateOutputType | null
  }

  type GetLeadsGroupByPayload<T extends LeadsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeadsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeadsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeadsGroupByOutputType[P]>
            : GetScalarType<T[P], LeadsGroupByOutputType[P]>
        }
      >
    >


  export type LeadsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    totalPersons?: boolean
    source?: boolean
    channel?: boolean
    priority?: boolean
    notes?: boolean
    createdAt?: boolean
    lastUpdatedLeads?: boolean
    numNights?: boolean
    estimatedValue?: boolean
    assignedTo?: boolean
    lastContactAt?: boolean
    nextFollowUp?: boolean
    lastUpdated?: boolean
  }, ExtArgs["result"]["leads"]>

  export type LeadsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    totalPersons?: boolean
    source?: boolean
    channel?: boolean
    priority?: boolean
    notes?: boolean
    createdAt?: boolean
    lastUpdatedLeads?: boolean
    numNights?: boolean
    estimatedValue?: boolean
    assignedTo?: boolean
    lastContactAt?: boolean
    nextFollowUp?: boolean
    lastUpdated?: boolean
  }, ExtArgs["result"]["leads"]>

  export type LeadsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    totalPersons?: boolean
    source?: boolean
    channel?: boolean
    priority?: boolean
    notes?: boolean
    createdAt?: boolean
    lastUpdatedLeads?: boolean
    numNights?: boolean
    estimatedValue?: boolean
    assignedTo?: boolean
    lastContactAt?: boolean
    nextFollowUp?: boolean
    lastUpdated?: boolean
  }, ExtArgs["result"]["leads"]>

  export type LeadsSelectScalar = {
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    totalPersons?: boolean
    source?: boolean
    channel?: boolean
    priority?: boolean
    notes?: boolean
    createdAt?: boolean
    lastUpdatedLeads?: boolean
    numNights?: boolean
    estimatedValue?: boolean
    assignedTo?: boolean
    lastContactAt?: boolean
    nextFollowUp?: boolean
    lastUpdated?: boolean
  }

  export type LeadsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bookingId" | "phone" | "guestName" | "propertyName" | "arrivalDate" | "departureDate" | "totalPersons" | "source" | "channel" | "priority" | "notes" | "createdAt" | "lastUpdatedLeads" | "numNights" | "estimatedValue" | "assignedTo" | "lastContactAt" | "nextFollowUp" | "lastUpdated", ExtArgs["result"]["leads"]>

  export type $LeadsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Leads"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bookingId: string | null
      phone: string
      guestName: string | null
      propertyName: string | null
      arrivalDate: string
      departureDate: string | null
      totalPersons: number | null
      source: string
      channel: string | null
      priority: string
      notes: string | null
      createdAt: Date
      lastUpdatedLeads: Date
      numNights: number | null
      estimatedValue: string | null
      assignedTo: string | null
      lastContactAt: Date | null
      nextFollowUp: Date | null
      lastUpdated: Date
    }, ExtArgs["result"]["leads"]>
    composites: {}
  }

  type LeadsGetPayload<S extends boolean | null | undefined | LeadsDefaultArgs> = $Result.GetResult<Prisma.$LeadsPayload, S>

  type LeadsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LeadsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LeadsCountAggregateInputType | true
    }

  export interface LeadsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Leads'], meta: { name: 'Leads' } }
    /**
     * Find zero or one Leads that matches the filter.
     * @param {LeadsFindUniqueArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LeadsFindUniqueArgs>(args: SelectSubset<T, LeadsFindUniqueArgs<ExtArgs>>): Prisma__LeadsClient<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Leads that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LeadsFindUniqueOrThrowArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LeadsFindUniqueOrThrowArgs>(args: SelectSubset<T, LeadsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LeadsClient<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadsFindFirstArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LeadsFindFirstArgs>(args?: SelectSubset<T, LeadsFindFirstArgs<ExtArgs>>): Prisma__LeadsClient<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leads that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadsFindFirstOrThrowArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LeadsFindFirstOrThrowArgs>(args?: SelectSubset<T, LeadsFindFirstOrThrowArgs<ExtArgs>>): Prisma__LeadsClient<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Leads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leads
     * const leads = await prisma.leads.findMany()
     * 
     * // Get first 10 Leads
     * const leads = await prisma.leads.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leadsWithIdOnly = await prisma.leads.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LeadsFindManyArgs>(args?: SelectSubset<T, LeadsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Leads.
     * @param {LeadsCreateArgs} args - Arguments to create a Leads.
     * @example
     * // Create one Leads
     * const Leads = await prisma.leads.create({
     *   data: {
     *     // ... data to create a Leads
     *   }
     * })
     * 
     */
    create<T extends LeadsCreateArgs>(args: SelectSubset<T, LeadsCreateArgs<ExtArgs>>): Prisma__LeadsClient<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Leads.
     * @param {LeadsCreateManyArgs} args - Arguments to create many Leads.
     * @example
     * // Create many Leads
     * const leads = await prisma.leads.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LeadsCreateManyArgs>(args?: SelectSubset<T, LeadsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Leads and returns the data saved in the database.
     * @param {LeadsCreateManyAndReturnArgs} args - Arguments to create many Leads.
     * @example
     * // Create many Leads
     * const leads = await prisma.leads.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Leads and only return the `id`
     * const leadsWithIdOnly = await prisma.leads.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LeadsCreateManyAndReturnArgs>(args?: SelectSubset<T, LeadsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Leads.
     * @param {LeadsDeleteArgs} args - Arguments to delete one Leads.
     * @example
     * // Delete one Leads
     * const Leads = await prisma.leads.delete({
     *   where: {
     *     // ... filter to delete one Leads
     *   }
     * })
     * 
     */
    delete<T extends LeadsDeleteArgs>(args: SelectSubset<T, LeadsDeleteArgs<ExtArgs>>): Prisma__LeadsClient<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Leads.
     * @param {LeadsUpdateArgs} args - Arguments to update one Leads.
     * @example
     * // Update one Leads
     * const leads = await prisma.leads.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LeadsUpdateArgs>(args: SelectSubset<T, LeadsUpdateArgs<ExtArgs>>): Prisma__LeadsClient<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Leads.
     * @param {LeadsDeleteManyArgs} args - Arguments to filter Leads to delete.
     * @example
     * // Delete a few Leads
     * const { count } = await prisma.leads.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LeadsDeleteManyArgs>(args?: SelectSubset<T, LeadsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leads
     * const leads = await prisma.leads.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LeadsUpdateManyArgs>(args: SelectSubset<T, LeadsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leads and returns the data updated in the database.
     * @param {LeadsUpdateManyAndReturnArgs} args - Arguments to update many Leads.
     * @example
     * // Update many Leads
     * const leads = await prisma.leads.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Leads and only return the `id`
     * const leadsWithIdOnly = await prisma.leads.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LeadsUpdateManyAndReturnArgs>(args: SelectSubset<T, LeadsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Leads.
     * @param {LeadsUpsertArgs} args - Arguments to update or create a Leads.
     * @example
     * // Update or create a Leads
     * const leads = await prisma.leads.upsert({
     *   create: {
     *     // ... data to create a Leads
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Leads we want to update
     *   }
     * })
     */
    upsert<T extends LeadsUpsertArgs>(args: SelectSubset<T, LeadsUpsertArgs<ExtArgs>>): Prisma__LeadsClient<$Result.GetResult<Prisma.$LeadsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadsCountArgs} args - Arguments to filter Leads to count.
     * @example
     * // Count the number of Leads
     * const count = await prisma.leads.count({
     *   where: {
     *     // ... the filter for the Leads we want to count
     *   }
     * })
    **/
    count<T extends LeadsCountArgs>(
      args?: Subset<T, LeadsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeadsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeadsAggregateArgs>(args: Subset<T, LeadsAggregateArgs>): Prisma.PrismaPromise<GetLeadsAggregateType<T>>

    /**
     * Group by Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LeadsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LeadsGroupByArgs['orderBy'] }
        : { orderBy?: LeadsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LeadsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeadsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Leads model
   */
  readonly fields: LeadsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Leads.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LeadsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Leads model
   */
  interface LeadsFieldRefs {
    readonly id: FieldRef<"Leads", 'Int'>
    readonly bookingId: FieldRef<"Leads", 'String'>
    readonly phone: FieldRef<"Leads", 'String'>
    readonly guestName: FieldRef<"Leads", 'String'>
    readonly propertyName: FieldRef<"Leads", 'String'>
    readonly arrivalDate: FieldRef<"Leads", 'String'>
    readonly departureDate: FieldRef<"Leads", 'String'>
    readonly totalPersons: FieldRef<"Leads", 'Int'>
    readonly source: FieldRef<"Leads", 'String'>
    readonly channel: FieldRef<"Leads", 'String'>
    readonly priority: FieldRef<"Leads", 'String'>
    readonly notes: FieldRef<"Leads", 'String'>
    readonly createdAt: FieldRef<"Leads", 'DateTime'>
    readonly lastUpdatedLeads: FieldRef<"Leads", 'DateTime'>
    readonly numNights: FieldRef<"Leads", 'Int'>
    readonly estimatedValue: FieldRef<"Leads", 'String'>
    readonly assignedTo: FieldRef<"Leads", 'String'>
    readonly lastContactAt: FieldRef<"Leads", 'DateTime'>
    readonly nextFollowUp: FieldRef<"Leads", 'DateTime'>
    readonly lastUpdated: FieldRef<"Leads", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Leads findUnique
   */
  export type LeadsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * Filter, which Leads to fetch.
     */
    where: LeadsWhereUniqueInput
  }

  /**
   * Leads findUniqueOrThrow
   */
  export type LeadsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * Filter, which Leads to fetch.
     */
    where: LeadsWhereUniqueInput
  }

  /**
   * Leads findFirst
   */
  export type LeadsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * Filter, which Leads to fetch.
     */
    where?: LeadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadsOrderByWithRelationInput | LeadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leads.
     */
    cursor?: LeadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leads.
     */
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }

  /**
   * Leads findFirstOrThrow
   */
  export type LeadsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * Filter, which Leads to fetch.
     */
    where?: LeadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadsOrderByWithRelationInput | LeadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leads.
     */
    cursor?: LeadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leads.
     */
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }

  /**
   * Leads findMany
   */
  export type LeadsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * Filter, which Leads to fetch.
     */
    where?: LeadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadsOrderByWithRelationInput | LeadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Leads.
     */
    cursor?: LeadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }

  /**
   * Leads create
   */
  export type LeadsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * The data needed to create a Leads.
     */
    data: XOR<LeadsCreateInput, LeadsUncheckedCreateInput>
  }

  /**
   * Leads createMany
   */
  export type LeadsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Leads.
     */
    data: LeadsCreateManyInput | LeadsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Leads createManyAndReturn
   */
  export type LeadsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * The data used to create many Leads.
     */
    data: LeadsCreateManyInput | LeadsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Leads update
   */
  export type LeadsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * The data needed to update a Leads.
     */
    data: XOR<LeadsUpdateInput, LeadsUncheckedUpdateInput>
    /**
     * Choose, which Leads to update.
     */
    where: LeadsWhereUniqueInput
  }

  /**
   * Leads updateMany
   */
  export type LeadsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Leads.
     */
    data: XOR<LeadsUpdateManyMutationInput, LeadsUncheckedUpdateManyInput>
    /**
     * Filter which Leads to update
     */
    where?: LeadsWhereInput
    /**
     * Limit how many Leads to update.
     */
    limit?: number
  }

  /**
   * Leads updateManyAndReturn
   */
  export type LeadsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * The data used to update Leads.
     */
    data: XOR<LeadsUpdateManyMutationInput, LeadsUncheckedUpdateManyInput>
    /**
     * Filter which Leads to update
     */
    where?: LeadsWhereInput
    /**
     * Limit how many Leads to update.
     */
    limit?: number
  }

  /**
   * Leads upsert
   */
  export type LeadsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * The filter to search for the Leads to update in case it exists.
     */
    where: LeadsWhereUniqueInput
    /**
     * In case the Leads found by the `where` argument doesn't exist, create a new Leads with this data.
     */
    create: XOR<LeadsCreateInput, LeadsUncheckedCreateInput>
    /**
     * In case the Leads was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LeadsUpdateInput, LeadsUncheckedUpdateInput>
  }

  /**
   * Leads delete
   */
  export type LeadsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
    /**
     * Filter which Leads to delete.
     */
    where: LeadsWhereUniqueInput
  }

  /**
   * Leads deleteMany
   */
  export type LeadsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Leads to delete
     */
    where?: LeadsWhereInput
    /**
     * Limit how many Leads to delete.
     */
    limit?: number
  }

  /**
   * Leads without action
   */
  export type LeadsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Leads
     */
    select?: LeadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Leads
     */
    omit?: LeadsOmit<ExtArgs> | null
  }


  /**
   * Model IA_CMR_Clientes
   */

  export type AggregateIA_CMR_Clientes = {
    _count: IA_CMR_ClientesCountAggregateOutputType | null
    _avg: IA_CMR_ClientesAvgAggregateOutputType | null
    _sum: IA_CMR_ClientesSumAggregateOutputType | null
    _min: IA_CMR_ClientesMinAggregateOutputType | null
    _max: IA_CMR_ClientesMaxAggregateOutputType | null
  }

  export type IA_CMR_ClientesAvgAggregateOutputType = {
    prioridad: number | null
  }

  export type IA_CMR_ClientesSumAggregateOutputType = {
    prioridad: number | null
  }

  export type IA_CMR_ClientesMinAggregateOutputType = {
    phoneNumber: string | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
  }

  export type IA_CMR_ClientesMaxAggregateOutputType = {
    phoneNumber: string | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
  }

  export type IA_CMR_ClientesCountAggregateOutputType = {
    phoneNumber: number
    profileStatus: number
    proximaAccion: number
    fechaProximaAccion: number
    prioridad: number
    _all: number
  }


  export type IA_CMR_ClientesAvgAggregateInputType = {
    prioridad?: true
  }

  export type IA_CMR_ClientesSumAggregateInputType = {
    prioridad?: true
  }

  export type IA_CMR_ClientesMinAggregateInputType = {
    phoneNumber?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
  }

  export type IA_CMR_ClientesMaxAggregateInputType = {
    phoneNumber?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
  }

  export type IA_CMR_ClientesCountAggregateInputType = {
    phoneNumber?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
    _all?: true
  }

  export type IA_CMR_ClientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IA_CMR_Clientes to aggregate.
     */
    where?: IA_CMR_ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IA_CMR_Clientes to fetch.
     */
    orderBy?: IA_CMR_ClientesOrderByWithRelationInput | IA_CMR_ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IA_CMR_ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IA_CMR_Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IA_CMR_Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned IA_CMR_Clientes
    **/
    _count?: true | IA_CMR_ClientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IA_CMR_ClientesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IA_CMR_ClientesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IA_CMR_ClientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IA_CMR_ClientesMaxAggregateInputType
  }

  export type GetIA_CMR_ClientesAggregateType<T extends IA_CMR_ClientesAggregateArgs> = {
        [P in keyof T & keyof AggregateIA_CMR_Clientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIA_CMR_Clientes[P]>
      : GetScalarType<T[P], AggregateIA_CMR_Clientes[P]>
  }




  export type IA_CMR_ClientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IA_CMR_ClientesWhereInput
    orderBy?: IA_CMR_ClientesOrderByWithAggregationInput | IA_CMR_ClientesOrderByWithAggregationInput[]
    by: IA_CMR_ClientesScalarFieldEnum[] | IA_CMR_ClientesScalarFieldEnum
    having?: IA_CMR_ClientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IA_CMR_ClientesCountAggregateInputType | true
    _avg?: IA_CMR_ClientesAvgAggregateInputType
    _sum?: IA_CMR_ClientesSumAggregateInputType
    _min?: IA_CMR_ClientesMinAggregateInputType
    _max?: IA_CMR_ClientesMaxAggregateInputType
  }

  export type IA_CMR_ClientesGroupByOutputType = {
    phoneNumber: string
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
    _count: IA_CMR_ClientesCountAggregateOutputType | null
    _avg: IA_CMR_ClientesAvgAggregateOutputType | null
    _sum: IA_CMR_ClientesSumAggregateOutputType | null
    _min: IA_CMR_ClientesMinAggregateOutputType | null
    _max: IA_CMR_ClientesMaxAggregateOutputType | null
  }

  type GetIA_CMR_ClientesGroupByPayload<T extends IA_CMR_ClientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IA_CMR_ClientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IA_CMR_ClientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IA_CMR_ClientesGroupByOutputType[P]>
            : GetScalarType<T[P], IA_CMR_ClientesGroupByOutputType[P]>
        }
      >
    >


  export type IA_CMR_ClientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }, ExtArgs["result"]["iA_CMR_Clientes"]>

  export type IA_CMR_ClientesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }, ExtArgs["result"]["iA_CMR_Clientes"]>

  export type IA_CMR_ClientesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }, ExtArgs["result"]["iA_CMR_Clientes"]>

  export type IA_CMR_ClientesSelectScalar = {
    phoneNumber?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }

  export type IA_CMR_ClientesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"phoneNumber" | "profileStatus" | "proximaAccion" | "fechaProximaAccion" | "prioridad", ExtArgs["result"]["iA_CMR_Clientes"]>

  export type $IA_CMR_ClientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "IA_CMR_Clientes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      phoneNumber: string
      profileStatus: string | null
      proximaAccion: string | null
      fechaProximaAccion: Date | null
      prioridad: number | null
    }, ExtArgs["result"]["iA_CMR_Clientes"]>
    composites: {}
  }

  type IA_CMR_ClientesGetPayload<S extends boolean | null | undefined | IA_CMR_ClientesDefaultArgs> = $Result.GetResult<Prisma.$IA_CMR_ClientesPayload, S>

  type IA_CMR_ClientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<IA_CMR_ClientesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IA_CMR_ClientesCountAggregateInputType | true
    }

  export interface IA_CMR_ClientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['IA_CMR_Clientes'], meta: { name: 'IA_CMR_Clientes' } }
    /**
     * Find zero or one IA_CMR_Clientes that matches the filter.
     * @param {IA_CMR_ClientesFindUniqueArgs} args - Arguments to find a IA_CMR_Clientes
     * @example
     * // Get one IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends IA_CMR_ClientesFindUniqueArgs>(args: SelectSubset<T, IA_CMR_ClientesFindUniqueArgs<ExtArgs>>): Prisma__IA_CMR_ClientesClient<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one IA_CMR_Clientes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {IA_CMR_ClientesFindUniqueOrThrowArgs} args - Arguments to find a IA_CMR_Clientes
     * @example
     * // Get one IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends IA_CMR_ClientesFindUniqueOrThrowArgs>(args: SelectSubset<T, IA_CMR_ClientesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__IA_CMR_ClientesClient<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first IA_CMR_Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IA_CMR_ClientesFindFirstArgs} args - Arguments to find a IA_CMR_Clientes
     * @example
     * // Get one IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends IA_CMR_ClientesFindFirstArgs>(args?: SelectSubset<T, IA_CMR_ClientesFindFirstArgs<ExtArgs>>): Prisma__IA_CMR_ClientesClient<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first IA_CMR_Clientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IA_CMR_ClientesFindFirstOrThrowArgs} args - Arguments to find a IA_CMR_Clientes
     * @example
     * // Get one IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends IA_CMR_ClientesFindFirstOrThrowArgs>(args?: SelectSubset<T, IA_CMR_ClientesFindFirstOrThrowArgs<ExtArgs>>): Prisma__IA_CMR_ClientesClient<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more IA_CMR_Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IA_CMR_ClientesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.findMany()
     * 
     * // Get first 10 IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.findMany({ take: 10 })
     * 
     * // Only select the `phoneNumber`
     * const iA_CMR_ClientesWithPhoneNumberOnly = await prisma.iA_CMR_Clientes.findMany({ select: { phoneNumber: true } })
     * 
     */
    findMany<T extends IA_CMR_ClientesFindManyArgs>(args?: SelectSubset<T, IA_CMR_ClientesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a IA_CMR_Clientes.
     * @param {IA_CMR_ClientesCreateArgs} args - Arguments to create a IA_CMR_Clientes.
     * @example
     * // Create one IA_CMR_Clientes
     * const IA_CMR_Clientes = await prisma.iA_CMR_Clientes.create({
     *   data: {
     *     // ... data to create a IA_CMR_Clientes
     *   }
     * })
     * 
     */
    create<T extends IA_CMR_ClientesCreateArgs>(args: SelectSubset<T, IA_CMR_ClientesCreateArgs<ExtArgs>>): Prisma__IA_CMR_ClientesClient<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many IA_CMR_Clientes.
     * @param {IA_CMR_ClientesCreateManyArgs} args - Arguments to create many IA_CMR_Clientes.
     * @example
     * // Create many IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends IA_CMR_ClientesCreateManyArgs>(args?: SelectSubset<T, IA_CMR_ClientesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many IA_CMR_Clientes and returns the data saved in the database.
     * @param {IA_CMR_ClientesCreateManyAndReturnArgs} args - Arguments to create many IA_CMR_Clientes.
     * @example
     * // Create many IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many IA_CMR_Clientes and only return the `phoneNumber`
     * const iA_CMR_ClientesWithPhoneNumberOnly = await prisma.iA_CMR_Clientes.createManyAndReturn({
     *   select: { phoneNumber: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends IA_CMR_ClientesCreateManyAndReturnArgs>(args?: SelectSubset<T, IA_CMR_ClientesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a IA_CMR_Clientes.
     * @param {IA_CMR_ClientesDeleteArgs} args - Arguments to delete one IA_CMR_Clientes.
     * @example
     * // Delete one IA_CMR_Clientes
     * const IA_CMR_Clientes = await prisma.iA_CMR_Clientes.delete({
     *   where: {
     *     // ... filter to delete one IA_CMR_Clientes
     *   }
     * })
     * 
     */
    delete<T extends IA_CMR_ClientesDeleteArgs>(args: SelectSubset<T, IA_CMR_ClientesDeleteArgs<ExtArgs>>): Prisma__IA_CMR_ClientesClient<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one IA_CMR_Clientes.
     * @param {IA_CMR_ClientesUpdateArgs} args - Arguments to update one IA_CMR_Clientes.
     * @example
     * // Update one IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends IA_CMR_ClientesUpdateArgs>(args: SelectSubset<T, IA_CMR_ClientesUpdateArgs<ExtArgs>>): Prisma__IA_CMR_ClientesClient<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more IA_CMR_Clientes.
     * @param {IA_CMR_ClientesDeleteManyArgs} args - Arguments to filter IA_CMR_Clientes to delete.
     * @example
     * // Delete a few IA_CMR_Clientes
     * const { count } = await prisma.iA_CMR_Clientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends IA_CMR_ClientesDeleteManyArgs>(args?: SelectSubset<T, IA_CMR_ClientesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IA_CMR_Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IA_CMR_ClientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends IA_CMR_ClientesUpdateManyArgs>(args: SelectSubset<T, IA_CMR_ClientesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IA_CMR_Clientes and returns the data updated in the database.
     * @param {IA_CMR_ClientesUpdateManyAndReturnArgs} args - Arguments to update many IA_CMR_Clientes.
     * @example
     * // Update many IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more IA_CMR_Clientes and only return the `phoneNumber`
     * const iA_CMR_ClientesWithPhoneNumberOnly = await prisma.iA_CMR_Clientes.updateManyAndReturn({
     *   select: { phoneNumber: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends IA_CMR_ClientesUpdateManyAndReturnArgs>(args: SelectSubset<T, IA_CMR_ClientesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one IA_CMR_Clientes.
     * @param {IA_CMR_ClientesUpsertArgs} args - Arguments to update or create a IA_CMR_Clientes.
     * @example
     * // Update or create a IA_CMR_Clientes
     * const iA_CMR_Clientes = await prisma.iA_CMR_Clientes.upsert({
     *   create: {
     *     // ... data to create a IA_CMR_Clientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the IA_CMR_Clientes we want to update
     *   }
     * })
     */
    upsert<T extends IA_CMR_ClientesUpsertArgs>(args: SelectSubset<T, IA_CMR_ClientesUpsertArgs<ExtArgs>>): Prisma__IA_CMR_ClientesClient<$Result.GetResult<Prisma.$IA_CMR_ClientesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of IA_CMR_Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IA_CMR_ClientesCountArgs} args - Arguments to filter IA_CMR_Clientes to count.
     * @example
     * // Count the number of IA_CMR_Clientes
     * const count = await prisma.iA_CMR_Clientes.count({
     *   where: {
     *     // ... the filter for the IA_CMR_Clientes we want to count
     *   }
     * })
    **/
    count<T extends IA_CMR_ClientesCountArgs>(
      args?: Subset<T, IA_CMR_ClientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IA_CMR_ClientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a IA_CMR_Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IA_CMR_ClientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IA_CMR_ClientesAggregateArgs>(args: Subset<T, IA_CMR_ClientesAggregateArgs>): Prisma.PrismaPromise<GetIA_CMR_ClientesAggregateType<T>>

    /**
     * Group by IA_CMR_Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IA_CMR_ClientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IA_CMR_ClientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IA_CMR_ClientesGroupByArgs['orderBy'] }
        : { orderBy?: IA_CMR_ClientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IA_CMR_ClientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIA_CMR_ClientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the IA_CMR_Clientes model
   */
  readonly fields: IA_CMR_ClientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for IA_CMR_Clientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IA_CMR_ClientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the IA_CMR_Clientes model
   */
  interface IA_CMR_ClientesFieldRefs {
    readonly phoneNumber: FieldRef<"IA_CMR_Clientes", 'String'>
    readonly profileStatus: FieldRef<"IA_CMR_Clientes", 'String'>
    readonly proximaAccion: FieldRef<"IA_CMR_Clientes", 'String'>
    readonly fechaProximaAccion: FieldRef<"IA_CMR_Clientes", 'DateTime'>
    readonly prioridad: FieldRef<"IA_CMR_Clientes", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * IA_CMR_Clientes findUnique
   */
  export type IA_CMR_ClientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * Filter, which IA_CMR_Clientes to fetch.
     */
    where: IA_CMR_ClientesWhereUniqueInput
  }

  /**
   * IA_CMR_Clientes findUniqueOrThrow
   */
  export type IA_CMR_ClientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * Filter, which IA_CMR_Clientes to fetch.
     */
    where: IA_CMR_ClientesWhereUniqueInput
  }

  /**
   * IA_CMR_Clientes findFirst
   */
  export type IA_CMR_ClientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * Filter, which IA_CMR_Clientes to fetch.
     */
    where?: IA_CMR_ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IA_CMR_Clientes to fetch.
     */
    orderBy?: IA_CMR_ClientesOrderByWithRelationInput | IA_CMR_ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IA_CMR_Clientes.
     */
    cursor?: IA_CMR_ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IA_CMR_Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IA_CMR_Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IA_CMR_Clientes.
     */
    distinct?: IA_CMR_ClientesScalarFieldEnum | IA_CMR_ClientesScalarFieldEnum[]
  }

  /**
   * IA_CMR_Clientes findFirstOrThrow
   */
  export type IA_CMR_ClientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * Filter, which IA_CMR_Clientes to fetch.
     */
    where?: IA_CMR_ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IA_CMR_Clientes to fetch.
     */
    orderBy?: IA_CMR_ClientesOrderByWithRelationInput | IA_CMR_ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IA_CMR_Clientes.
     */
    cursor?: IA_CMR_ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IA_CMR_Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IA_CMR_Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IA_CMR_Clientes.
     */
    distinct?: IA_CMR_ClientesScalarFieldEnum | IA_CMR_ClientesScalarFieldEnum[]
  }

  /**
   * IA_CMR_Clientes findMany
   */
  export type IA_CMR_ClientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * Filter, which IA_CMR_Clientes to fetch.
     */
    where?: IA_CMR_ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IA_CMR_Clientes to fetch.
     */
    orderBy?: IA_CMR_ClientesOrderByWithRelationInput | IA_CMR_ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing IA_CMR_Clientes.
     */
    cursor?: IA_CMR_ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IA_CMR_Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IA_CMR_Clientes.
     */
    skip?: number
    distinct?: IA_CMR_ClientesScalarFieldEnum | IA_CMR_ClientesScalarFieldEnum[]
  }

  /**
   * IA_CMR_Clientes create
   */
  export type IA_CMR_ClientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * The data needed to create a IA_CMR_Clientes.
     */
    data: XOR<IA_CMR_ClientesCreateInput, IA_CMR_ClientesUncheckedCreateInput>
  }

  /**
   * IA_CMR_Clientes createMany
   */
  export type IA_CMR_ClientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many IA_CMR_Clientes.
     */
    data: IA_CMR_ClientesCreateManyInput | IA_CMR_ClientesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * IA_CMR_Clientes createManyAndReturn
   */
  export type IA_CMR_ClientesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * The data used to create many IA_CMR_Clientes.
     */
    data: IA_CMR_ClientesCreateManyInput | IA_CMR_ClientesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * IA_CMR_Clientes update
   */
  export type IA_CMR_ClientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * The data needed to update a IA_CMR_Clientes.
     */
    data: XOR<IA_CMR_ClientesUpdateInput, IA_CMR_ClientesUncheckedUpdateInput>
    /**
     * Choose, which IA_CMR_Clientes to update.
     */
    where: IA_CMR_ClientesWhereUniqueInput
  }

  /**
   * IA_CMR_Clientes updateMany
   */
  export type IA_CMR_ClientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update IA_CMR_Clientes.
     */
    data: XOR<IA_CMR_ClientesUpdateManyMutationInput, IA_CMR_ClientesUncheckedUpdateManyInput>
    /**
     * Filter which IA_CMR_Clientes to update
     */
    where?: IA_CMR_ClientesWhereInput
    /**
     * Limit how many IA_CMR_Clientes to update.
     */
    limit?: number
  }

  /**
   * IA_CMR_Clientes updateManyAndReturn
   */
  export type IA_CMR_ClientesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * The data used to update IA_CMR_Clientes.
     */
    data: XOR<IA_CMR_ClientesUpdateManyMutationInput, IA_CMR_ClientesUncheckedUpdateManyInput>
    /**
     * Filter which IA_CMR_Clientes to update
     */
    where?: IA_CMR_ClientesWhereInput
    /**
     * Limit how many IA_CMR_Clientes to update.
     */
    limit?: number
  }

  /**
   * IA_CMR_Clientes upsert
   */
  export type IA_CMR_ClientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * The filter to search for the IA_CMR_Clientes to update in case it exists.
     */
    where: IA_CMR_ClientesWhereUniqueInput
    /**
     * In case the IA_CMR_Clientes found by the `where` argument doesn't exist, create a new IA_CMR_Clientes with this data.
     */
    create: XOR<IA_CMR_ClientesCreateInput, IA_CMR_ClientesUncheckedCreateInput>
    /**
     * In case the IA_CMR_Clientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IA_CMR_ClientesUpdateInput, IA_CMR_ClientesUncheckedUpdateInput>
  }

  /**
   * IA_CMR_Clientes delete
   */
  export type IA_CMR_ClientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
    /**
     * Filter which IA_CMR_Clientes to delete.
     */
    where: IA_CMR_ClientesWhereUniqueInput
  }

  /**
   * IA_CMR_Clientes deleteMany
   */
  export type IA_CMR_ClientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IA_CMR_Clientes to delete
     */
    where?: IA_CMR_ClientesWhereInput
    /**
     * Limit how many IA_CMR_Clientes to delete.
     */
    limit?: number
  }

  /**
   * IA_CMR_Clientes without action
   */
  export type IA_CMR_ClientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IA_CMR_Clientes
     */
    select?: IA_CMR_ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IA_CMR_Clientes
     */
    omit?: IA_CMR_ClientesOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ClientViewScalarFieldEnum: {
    phoneNumber: 'phoneNumber',
    name: 'name',
    userName: 'userName',
    labels: 'labels',
    chatId: 'chatId',
    lastActivity: 'lastActivity',
    threadId: 'threadId',
    threadTokenCount: 'threadTokenCount',
    profileStatus: 'profileStatus',
    proximaAccion: 'proximaAccion',
    fechaProximaAccion: 'fechaProximaAccion',
    prioridad: 'prioridad'
  };

  export type ClientViewScalarFieldEnum = (typeof ClientViewScalarFieldEnum)[keyof typeof ClientViewScalarFieldEnum]


  export const Hotel_apartmentsScalarFieldEnum: {
    id: 'id',
    propertyId: 'propertyId',
    roomId: 'roomId',
    roomName: 'roomName',
    extraCharge: 'extraCharge',
    capacity: 'capacity'
  };

  export type Hotel_apartmentsScalarFieldEnum = (typeof Hotel_apartmentsScalarFieldEnum)[keyof typeof Hotel_apartmentsScalarFieldEnum]


  export const BookingScalarFieldEnum: {
    id: 'id',
    bookingId: 'bookingId',
    phone: 'phone',
    guestName: 'guestName',
    status: 'status',
    internalNotes: 'internalNotes',
    propertyName: 'propertyName',
    arrivalDate: 'arrivalDate',
    departureDate: 'departureDate',
    numNights: 'numNights',
    totalPersons: 'totalPersons',
    totalCharges: 'totalCharges',
    totalPayments: 'totalPayments',
    balance: 'balance',
    basePrice: 'basePrice',
    channel: 'channel',
    email: 'email',
    apiReference: 'apiReference',
    charges: 'charges',
    payments: 'payments',
    messages: 'messages',
    infoItems: 'infoItems',
    notes: 'notes',
    bookingDate: 'bookingDate',
    modifiedDate: 'modifiedDate',
    lastUpdatedBD: 'lastUpdatedBD',
    raw: 'raw',
    BDStatus: 'BDStatus',
    leadType: 'leadType'
  };

  export type BookingScalarFieldEnum = (typeof BookingScalarFieldEnum)[keyof typeof BookingScalarFieldEnum]


  export const LeadsScalarFieldEnum: {
    id: 'id',
    bookingId: 'bookingId',
    phone: 'phone',
    guestName: 'guestName',
    propertyName: 'propertyName',
    arrivalDate: 'arrivalDate',
    departureDate: 'departureDate',
    totalPersons: 'totalPersons',
    source: 'source',
    channel: 'channel',
    priority: 'priority',
    notes: 'notes',
    createdAt: 'createdAt',
    lastUpdatedLeads: 'lastUpdatedLeads',
    numNights: 'numNights',
    estimatedValue: 'estimatedValue',
    assignedTo: 'assignedTo',
    lastContactAt: 'lastContactAt',
    nextFollowUp: 'nextFollowUp',
    lastUpdated: 'lastUpdated'
  };

  export type LeadsScalarFieldEnum = (typeof LeadsScalarFieldEnum)[keyof typeof LeadsScalarFieldEnum]


  export const IA_CMR_ClientesScalarFieldEnum: {
    phoneNumber: 'phoneNumber',
    profileStatus: 'profileStatus',
    proximaAccion: 'proximaAccion',
    fechaProximaAccion: 'fechaProximaAccion',
    prioridad: 'prioridad'
  };

  export type IA_CMR_ClientesScalarFieldEnum = (typeof IA_CMR_ClientesScalarFieldEnum)[keyof typeof IA_CMR_ClientesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type ClientViewWhereInput = {
    AND?: ClientViewWhereInput | ClientViewWhereInput[]
    OR?: ClientViewWhereInput[]
    NOT?: ClientViewWhereInput | ClientViewWhereInput[]
    phoneNumber?: StringFilter<"ClientView"> | string
    name?: StringNullableFilter<"ClientView"> | string | null
    userName?: StringNullableFilter<"ClientView"> | string | null
    labels?: StringNullableFilter<"ClientView"> | string | null
    chatId?: StringNullableFilter<"ClientView"> | string | null
    lastActivity?: DateTimeFilter<"ClientView"> | Date | string
    threadId?: StringNullableFilter<"ClientView"> | string | null
    threadTokenCount?: IntNullableFilter<"ClientView"> | number | null
    profileStatus?: StringNullableFilter<"ClientView"> | string | null
    proximaAccion?: StringNullableFilter<"ClientView"> | string | null
    fechaProximaAccion?: DateTimeNullableFilter<"ClientView"> | Date | string | null
    prioridad?: IntNullableFilter<"ClientView"> | number | null
  }

  export type ClientViewOrderByWithRelationInput = {
    phoneNumber?: SortOrder
    name?: SortOrderInput | SortOrder
    userName?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    chatId?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrderInput | SortOrder
    threadTokenCount?: SortOrderInput | SortOrder
    profileStatus?: SortOrderInput | SortOrder
    proximaAccion?: SortOrderInput | SortOrder
    fechaProximaAccion?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
  }

  export type ClientViewWhereUniqueInput = Prisma.AtLeast<{
    phoneNumber?: string
    chatId?: string
    AND?: ClientViewWhereInput | ClientViewWhereInput[]
    OR?: ClientViewWhereInput[]
    NOT?: ClientViewWhereInput | ClientViewWhereInput[]
    name?: StringNullableFilter<"ClientView"> | string | null
    userName?: StringNullableFilter<"ClientView"> | string | null
    labels?: StringNullableFilter<"ClientView"> | string | null
    lastActivity?: DateTimeFilter<"ClientView"> | Date | string
    threadId?: StringNullableFilter<"ClientView"> | string | null
    threadTokenCount?: IntNullableFilter<"ClientView"> | number | null
    profileStatus?: StringNullableFilter<"ClientView"> | string | null
    proximaAccion?: StringNullableFilter<"ClientView"> | string | null
    fechaProximaAccion?: DateTimeNullableFilter<"ClientView"> | Date | string | null
    prioridad?: IntNullableFilter<"ClientView"> | number | null
  }, "phoneNumber" | "chatId">

  export type ClientViewOrderByWithAggregationInput = {
    phoneNumber?: SortOrder
    name?: SortOrderInput | SortOrder
    userName?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    chatId?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrderInput | SortOrder
    threadTokenCount?: SortOrderInput | SortOrder
    profileStatus?: SortOrderInput | SortOrder
    proximaAccion?: SortOrderInput | SortOrder
    fechaProximaAccion?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
    _count?: ClientViewCountOrderByAggregateInput
    _avg?: ClientViewAvgOrderByAggregateInput
    _max?: ClientViewMaxOrderByAggregateInput
    _min?: ClientViewMinOrderByAggregateInput
    _sum?: ClientViewSumOrderByAggregateInput
  }

  export type ClientViewScalarWhereWithAggregatesInput = {
    AND?: ClientViewScalarWhereWithAggregatesInput | ClientViewScalarWhereWithAggregatesInput[]
    OR?: ClientViewScalarWhereWithAggregatesInput[]
    NOT?: ClientViewScalarWhereWithAggregatesInput | ClientViewScalarWhereWithAggregatesInput[]
    phoneNumber?: StringWithAggregatesFilter<"ClientView"> | string
    name?: StringNullableWithAggregatesFilter<"ClientView"> | string | null
    userName?: StringNullableWithAggregatesFilter<"ClientView"> | string | null
    labels?: StringNullableWithAggregatesFilter<"ClientView"> | string | null
    chatId?: StringNullableWithAggregatesFilter<"ClientView"> | string | null
    lastActivity?: DateTimeWithAggregatesFilter<"ClientView"> | Date | string
    threadId?: StringNullableWithAggregatesFilter<"ClientView"> | string | null
    threadTokenCount?: IntNullableWithAggregatesFilter<"ClientView"> | number | null
    profileStatus?: StringNullableWithAggregatesFilter<"ClientView"> | string | null
    proximaAccion?: StringNullableWithAggregatesFilter<"ClientView"> | string | null
    fechaProximaAccion?: DateTimeNullableWithAggregatesFilter<"ClientView"> | Date | string | null
    prioridad?: IntNullableWithAggregatesFilter<"ClientView"> | number | null
  }

  export type hotel_apartmentsWhereInput = {
    AND?: hotel_apartmentsWhereInput | hotel_apartmentsWhereInput[]
    OR?: hotel_apartmentsWhereInput[]
    NOT?: hotel_apartmentsWhereInput | hotel_apartmentsWhereInput[]
    id?: IntFilter<"hotel_apartments"> | number
    propertyId?: IntFilter<"hotel_apartments"> | number
    roomId?: IntFilter<"hotel_apartments"> | number
    roomName?: StringFilter<"hotel_apartments"> | string
    extraCharge?: JsonFilter<"hotel_apartments">
    capacity?: IntFilter<"hotel_apartments"> | number
  }

  export type hotel_apartmentsOrderByWithRelationInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    extraCharge?: SortOrder
    capacity?: SortOrder
  }

  export type hotel_apartmentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    roomId?: number
    AND?: hotel_apartmentsWhereInput | hotel_apartmentsWhereInput[]
    OR?: hotel_apartmentsWhereInput[]
    NOT?: hotel_apartmentsWhereInput | hotel_apartmentsWhereInput[]
    propertyId?: IntFilter<"hotel_apartments"> | number
    roomName?: StringFilter<"hotel_apartments"> | string
    extraCharge?: JsonFilter<"hotel_apartments">
    capacity?: IntFilter<"hotel_apartments"> | number
  }, "id" | "roomId">

  export type hotel_apartmentsOrderByWithAggregationInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    extraCharge?: SortOrder
    capacity?: SortOrder
    _count?: hotel_apartmentsCountOrderByAggregateInput
    _avg?: hotel_apartmentsAvgOrderByAggregateInput
    _max?: hotel_apartmentsMaxOrderByAggregateInput
    _min?: hotel_apartmentsMinOrderByAggregateInput
    _sum?: hotel_apartmentsSumOrderByAggregateInput
  }

  export type hotel_apartmentsScalarWhereWithAggregatesInput = {
    AND?: hotel_apartmentsScalarWhereWithAggregatesInput | hotel_apartmentsScalarWhereWithAggregatesInput[]
    OR?: hotel_apartmentsScalarWhereWithAggregatesInput[]
    NOT?: hotel_apartmentsScalarWhereWithAggregatesInput | hotel_apartmentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"hotel_apartments"> | number
    propertyId?: IntWithAggregatesFilter<"hotel_apartments"> | number
    roomId?: IntWithAggregatesFilter<"hotel_apartments"> | number
    roomName?: StringWithAggregatesFilter<"hotel_apartments"> | string
    extraCharge?: JsonWithAggregatesFilter<"hotel_apartments">
    capacity?: IntWithAggregatesFilter<"hotel_apartments"> | number
  }

  export type BookingWhereInput = {
    AND?: BookingWhereInput | BookingWhereInput[]
    OR?: BookingWhereInput[]
    NOT?: BookingWhereInput | BookingWhereInput[]
    id?: IntFilter<"Booking"> | number
    bookingId?: StringFilter<"Booking"> | string
    phone?: StringNullableFilter<"Booking"> | string | null
    guestName?: StringNullableFilter<"Booking"> | string | null
    status?: StringNullableFilter<"Booking"> | string | null
    internalNotes?: StringNullableFilter<"Booking"> | string | null
    propertyName?: StringNullableFilter<"Booking"> | string | null
    arrivalDate?: StringNullableFilter<"Booking"> | string | null
    departureDate?: StringNullableFilter<"Booking"> | string | null
    numNights?: IntNullableFilter<"Booking"> | number | null
    totalPersons?: IntNullableFilter<"Booking"> | number | null
    totalCharges?: StringNullableFilter<"Booking"> | string | null
    totalPayments?: StringNullableFilter<"Booking"> | string | null
    balance?: StringNullableFilter<"Booking"> | string | null
    basePrice?: StringNullableFilter<"Booking"> | string | null
    channel?: StringNullableFilter<"Booking"> | string | null
    email?: StringNullableFilter<"Booking"> | string | null
    apiReference?: StringNullableFilter<"Booking"> | string | null
    charges?: JsonFilter<"Booking">
    payments?: JsonFilter<"Booking">
    messages?: JsonFilter<"Booking">
    infoItems?: JsonFilter<"Booking">
    notes?: StringNullableFilter<"Booking"> | string | null
    bookingDate?: StringNullableFilter<"Booking"> | string | null
    modifiedDate?: StringNullableFilter<"Booking"> | string | null
    lastUpdatedBD?: DateTimeFilter<"Booking"> | Date | string
    raw?: JsonNullableFilter<"Booking">
    BDStatus?: StringNullableFilter<"Booking"> | string | null
    leadType?: StringNullableFilter<"Booking"> | string | null
  }

  export type BookingOrderByWithRelationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrderInput | SortOrder
    guestName?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    numNights?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    totalCharges?: SortOrderInput | SortOrder
    totalPayments?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    basePrice?: SortOrderInput | SortOrder
    channel?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    apiReference?: SortOrderInput | SortOrder
    charges?: SortOrder
    payments?: SortOrder
    messages?: SortOrder
    infoItems?: SortOrder
    notes?: SortOrderInput | SortOrder
    bookingDate?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
    lastUpdatedBD?: SortOrder
    raw?: SortOrderInput | SortOrder
    BDStatus?: SortOrderInput | SortOrder
    leadType?: SortOrderInput | SortOrder
  }

  export type BookingWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    bookingId?: string
    AND?: BookingWhereInput | BookingWhereInput[]
    OR?: BookingWhereInput[]
    NOT?: BookingWhereInput | BookingWhereInput[]
    phone?: StringNullableFilter<"Booking"> | string | null
    guestName?: StringNullableFilter<"Booking"> | string | null
    status?: StringNullableFilter<"Booking"> | string | null
    internalNotes?: StringNullableFilter<"Booking"> | string | null
    propertyName?: StringNullableFilter<"Booking"> | string | null
    arrivalDate?: StringNullableFilter<"Booking"> | string | null
    departureDate?: StringNullableFilter<"Booking"> | string | null
    numNights?: IntNullableFilter<"Booking"> | number | null
    totalPersons?: IntNullableFilter<"Booking"> | number | null
    totalCharges?: StringNullableFilter<"Booking"> | string | null
    totalPayments?: StringNullableFilter<"Booking"> | string | null
    balance?: StringNullableFilter<"Booking"> | string | null
    basePrice?: StringNullableFilter<"Booking"> | string | null
    channel?: StringNullableFilter<"Booking"> | string | null
    email?: StringNullableFilter<"Booking"> | string | null
    apiReference?: StringNullableFilter<"Booking"> | string | null
    charges?: JsonFilter<"Booking">
    payments?: JsonFilter<"Booking">
    messages?: JsonFilter<"Booking">
    infoItems?: JsonFilter<"Booking">
    notes?: StringNullableFilter<"Booking"> | string | null
    bookingDate?: StringNullableFilter<"Booking"> | string | null
    modifiedDate?: StringNullableFilter<"Booking"> | string | null
    lastUpdatedBD?: DateTimeFilter<"Booking"> | Date | string
    raw?: JsonNullableFilter<"Booking">
    BDStatus?: StringNullableFilter<"Booking"> | string | null
    leadType?: StringNullableFilter<"Booking"> | string | null
  }, "id" | "bookingId">

  export type BookingOrderByWithAggregationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrderInput | SortOrder
    guestName?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    numNights?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    totalCharges?: SortOrderInput | SortOrder
    totalPayments?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    basePrice?: SortOrderInput | SortOrder
    channel?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    apiReference?: SortOrderInput | SortOrder
    charges?: SortOrder
    payments?: SortOrder
    messages?: SortOrder
    infoItems?: SortOrder
    notes?: SortOrderInput | SortOrder
    bookingDate?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
    lastUpdatedBD?: SortOrder
    raw?: SortOrderInput | SortOrder
    BDStatus?: SortOrderInput | SortOrder
    leadType?: SortOrderInput | SortOrder
    _count?: BookingCountOrderByAggregateInput
    _avg?: BookingAvgOrderByAggregateInput
    _max?: BookingMaxOrderByAggregateInput
    _min?: BookingMinOrderByAggregateInput
    _sum?: BookingSumOrderByAggregateInput
  }

  export type BookingScalarWhereWithAggregatesInput = {
    AND?: BookingScalarWhereWithAggregatesInput | BookingScalarWhereWithAggregatesInput[]
    OR?: BookingScalarWhereWithAggregatesInput[]
    NOT?: BookingScalarWhereWithAggregatesInput | BookingScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Booking"> | number
    bookingId?: StringWithAggregatesFilter<"Booking"> | string
    phone?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    guestName?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    status?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    internalNotes?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    propertyName?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    arrivalDate?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    departureDate?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    numNights?: IntNullableWithAggregatesFilter<"Booking"> | number | null
    totalPersons?: IntNullableWithAggregatesFilter<"Booking"> | number | null
    totalCharges?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    totalPayments?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    balance?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    basePrice?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    channel?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    email?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    apiReference?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    charges?: JsonWithAggregatesFilter<"Booking">
    payments?: JsonWithAggregatesFilter<"Booking">
    messages?: JsonWithAggregatesFilter<"Booking">
    infoItems?: JsonWithAggregatesFilter<"Booking">
    notes?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    bookingDate?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    modifiedDate?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    lastUpdatedBD?: DateTimeWithAggregatesFilter<"Booking"> | Date | string
    raw?: JsonNullableWithAggregatesFilter<"Booking">
    BDStatus?: StringNullableWithAggregatesFilter<"Booking"> | string | null
    leadType?: StringNullableWithAggregatesFilter<"Booking"> | string | null
  }

  export type LeadsWhereInput = {
    AND?: LeadsWhereInput | LeadsWhereInput[]
    OR?: LeadsWhereInput[]
    NOT?: LeadsWhereInput | LeadsWhereInput[]
    id?: IntFilter<"Leads"> | number
    bookingId?: StringNullableFilter<"Leads"> | string | null
    phone?: StringFilter<"Leads"> | string
    guestName?: StringNullableFilter<"Leads"> | string | null
    propertyName?: StringNullableFilter<"Leads"> | string | null
    arrivalDate?: StringFilter<"Leads"> | string
    departureDate?: StringNullableFilter<"Leads"> | string | null
    totalPersons?: IntNullableFilter<"Leads"> | number | null
    source?: StringFilter<"Leads"> | string
    channel?: StringNullableFilter<"Leads"> | string | null
    priority?: StringFilter<"Leads"> | string
    notes?: StringNullableFilter<"Leads"> | string | null
    createdAt?: DateTimeFilter<"Leads"> | Date | string
    lastUpdatedLeads?: DateTimeFilter<"Leads"> | Date | string
    numNights?: IntNullableFilter<"Leads"> | number | null
    estimatedValue?: StringNullableFilter<"Leads"> | string | null
    assignedTo?: StringNullableFilter<"Leads"> | string | null
    lastContactAt?: DateTimeNullableFilter<"Leads"> | Date | string | null
    nextFollowUp?: DateTimeNullableFilter<"Leads"> | Date | string | null
    lastUpdated?: DateTimeFilter<"Leads"> | Date | string
  }

  export type LeadsOrderByWithRelationInput = {
    id?: SortOrder
    bookingId?: SortOrderInput | SortOrder
    phone?: SortOrder
    guestName?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    source?: SortOrder
    channel?: SortOrderInput | SortOrder
    priority?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrderInput | SortOrder
    estimatedValue?: SortOrderInput | SortOrder
    assignedTo?: SortOrderInput | SortOrder
    lastContactAt?: SortOrderInput | SortOrder
    nextFollowUp?: SortOrderInput | SortOrder
    lastUpdated?: SortOrder
  }

  export type LeadsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    bookingId?: string
    AND?: LeadsWhereInput | LeadsWhereInput[]
    OR?: LeadsWhereInput[]
    NOT?: LeadsWhereInput | LeadsWhereInput[]
    phone?: StringFilter<"Leads"> | string
    guestName?: StringNullableFilter<"Leads"> | string | null
    propertyName?: StringNullableFilter<"Leads"> | string | null
    arrivalDate?: StringFilter<"Leads"> | string
    departureDate?: StringNullableFilter<"Leads"> | string | null
    totalPersons?: IntNullableFilter<"Leads"> | number | null
    source?: StringFilter<"Leads"> | string
    channel?: StringNullableFilter<"Leads"> | string | null
    priority?: StringFilter<"Leads"> | string
    notes?: StringNullableFilter<"Leads"> | string | null
    createdAt?: DateTimeFilter<"Leads"> | Date | string
    lastUpdatedLeads?: DateTimeFilter<"Leads"> | Date | string
    numNights?: IntNullableFilter<"Leads"> | number | null
    estimatedValue?: StringNullableFilter<"Leads"> | string | null
    assignedTo?: StringNullableFilter<"Leads"> | string | null
    lastContactAt?: DateTimeNullableFilter<"Leads"> | Date | string | null
    nextFollowUp?: DateTimeNullableFilter<"Leads"> | Date | string | null
    lastUpdated?: DateTimeFilter<"Leads"> | Date | string
  }, "id" | "bookingId">

  export type LeadsOrderByWithAggregationInput = {
    id?: SortOrder
    bookingId?: SortOrderInput | SortOrder
    phone?: SortOrder
    guestName?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    source?: SortOrder
    channel?: SortOrderInput | SortOrder
    priority?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrderInput | SortOrder
    estimatedValue?: SortOrderInput | SortOrder
    assignedTo?: SortOrderInput | SortOrder
    lastContactAt?: SortOrderInput | SortOrder
    nextFollowUp?: SortOrderInput | SortOrder
    lastUpdated?: SortOrder
    _count?: LeadsCountOrderByAggregateInput
    _avg?: LeadsAvgOrderByAggregateInput
    _max?: LeadsMaxOrderByAggregateInput
    _min?: LeadsMinOrderByAggregateInput
    _sum?: LeadsSumOrderByAggregateInput
  }

  export type LeadsScalarWhereWithAggregatesInput = {
    AND?: LeadsScalarWhereWithAggregatesInput | LeadsScalarWhereWithAggregatesInput[]
    OR?: LeadsScalarWhereWithAggregatesInput[]
    NOT?: LeadsScalarWhereWithAggregatesInput | LeadsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Leads"> | number
    bookingId?: StringNullableWithAggregatesFilter<"Leads"> | string | null
    phone?: StringWithAggregatesFilter<"Leads"> | string
    guestName?: StringNullableWithAggregatesFilter<"Leads"> | string | null
    propertyName?: StringNullableWithAggregatesFilter<"Leads"> | string | null
    arrivalDate?: StringWithAggregatesFilter<"Leads"> | string
    departureDate?: StringNullableWithAggregatesFilter<"Leads"> | string | null
    totalPersons?: IntNullableWithAggregatesFilter<"Leads"> | number | null
    source?: StringWithAggregatesFilter<"Leads"> | string
    channel?: StringNullableWithAggregatesFilter<"Leads"> | string | null
    priority?: StringWithAggregatesFilter<"Leads"> | string
    notes?: StringNullableWithAggregatesFilter<"Leads"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Leads"> | Date | string
    lastUpdatedLeads?: DateTimeWithAggregatesFilter<"Leads"> | Date | string
    numNights?: IntNullableWithAggregatesFilter<"Leads"> | number | null
    estimatedValue?: StringNullableWithAggregatesFilter<"Leads"> | string | null
    assignedTo?: StringNullableWithAggregatesFilter<"Leads"> | string | null
    lastContactAt?: DateTimeNullableWithAggregatesFilter<"Leads"> | Date | string | null
    nextFollowUp?: DateTimeNullableWithAggregatesFilter<"Leads"> | Date | string | null
    lastUpdated?: DateTimeWithAggregatesFilter<"Leads"> | Date | string
  }

  export type IA_CMR_ClientesWhereInput = {
    AND?: IA_CMR_ClientesWhereInput | IA_CMR_ClientesWhereInput[]
    OR?: IA_CMR_ClientesWhereInput[]
    NOT?: IA_CMR_ClientesWhereInput | IA_CMR_ClientesWhereInput[]
    phoneNumber?: StringFilter<"IA_CMR_Clientes"> | string
    profileStatus?: StringNullableFilter<"IA_CMR_Clientes"> | string | null
    proximaAccion?: StringNullableFilter<"IA_CMR_Clientes"> | string | null
    fechaProximaAccion?: DateTimeNullableFilter<"IA_CMR_Clientes"> | Date | string | null
    prioridad?: IntNullableFilter<"IA_CMR_Clientes"> | number | null
  }

  export type IA_CMR_ClientesOrderByWithRelationInput = {
    phoneNumber?: SortOrder
    profileStatus?: SortOrderInput | SortOrder
    proximaAccion?: SortOrderInput | SortOrder
    fechaProximaAccion?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
  }

  export type IA_CMR_ClientesWhereUniqueInput = Prisma.AtLeast<{
    phoneNumber?: string
    AND?: IA_CMR_ClientesWhereInput | IA_CMR_ClientesWhereInput[]
    OR?: IA_CMR_ClientesWhereInput[]
    NOT?: IA_CMR_ClientesWhereInput | IA_CMR_ClientesWhereInput[]
    profileStatus?: StringNullableFilter<"IA_CMR_Clientes"> | string | null
    proximaAccion?: StringNullableFilter<"IA_CMR_Clientes"> | string | null
    fechaProximaAccion?: DateTimeNullableFilter<"IA_CMR_Clientes"> | Date | string | null
    prioridad?: IntNullableFilter<"IA_CMR_Clientes"> | number | null
  }, "phoneNumber">

  export type IA_CMR_ClientesOrderByWithAggregationInput = {
    phoneNumber?: SortOrder
    profileStatus?: SortOrderInput | SortOrder
    proximaAccion?: SortOrderInput | SortOrder
    fechaProximaAccion?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
    _count?: IA_CMR_ClientesCountOrderByAggregateInput
    _avg?: IA_CMR_ClientesAvgOrderByAggregateInput
    _max?: IA_CMR_ClientesMaxOrderByAggregateInput
    _min?: IA_CMR_ClientesMinOrderByAggregateInput
    _sum?: IA_CMR_ClientesSumOrderByAggregateInput
  }

  export type IA_CMR_ClientesScalarWhereWithAggregatesInput = {
    AND?: IA_CMR_ClientesScalarWhereWithAggregatesInput | IA_CMR_ClientesScalarWhereWithAggregatesInput[]
    OR?: IA_CMR_ClientesScalarWhereWithAggregatesInput[]
    NOT?: IA_CMR_ClientesScalarWhereWithAggregatesInput | IA_CMR_ClientesScalarWhereWithAggregatesInput[]
    phoneNumber?: StringWithAggregatesFilter<"IA_CMR_Clientes"> | string
    profileStatus?: StringNullableWithAggregatesFilter<"IA_CMR_Clientes"> | string | null
    proximaAccion?: StringNullableWithAggregatesFilter<"IA_CMR_Clientes"> | string | null
    fechaProximaAccion?: DateTimeNullableWithAggregatesFilter<"IA_CMR_Clientes"> | Date | string | null
    prioridad?: IntNullableWithAggregatesFilter<"IA_CMR_Clientes"> | number | null
  }

  export type ClientViewCreateInput = {
    phoneNumber: string
    name?: string | null
    userName?: string | null
    labels?: string | null
    chatId?: string | null
    lastActivity?: Date | string
    threadId?: string | null
    threadTokenCount?: number | null
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
  }

  export type ClientViewUncheckedCreateInput = {
    phoneNumber: string
    name?: string | null
    userName?: string | null
    labels?: string | null
    chatId?: string | null
    lastActivity?: Date | string
    threadId?: string | null
    threadTokenCount?: number | null
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
  }

  export type ClientViewUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ClientViewUncheckedUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ClientViewCreateManyInput = {
    phoneNumber: string
    name?: string | null
    userName?: string | null
    labels?: string | null
    chatId?: string | null
    lastActivity?: Date | string
    threadId?: string | null
    threadTokenCount?: number | null
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
  }

  export type ClientViewUpdateManyMutationInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ClientViewUncheckedUpdateManyInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type hotel_apartmentsCreateInput = {
    propertyId: number
    roomId: number
    roomName: string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: number
  }

  export type hotel_apartmentsUncheckedCreateInput = {
    id?: number
    propertyId: number
    roomId: number
    roomName: string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: number
  }

  export type hotel_apartmentsUpdateInput = {
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type hotel_apartmentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type hotel_apartmentsCreateManyInput = {
    id?: number
    propertyId: number
    roomId: number
    roomName: string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: number
  }

  export type hotel_apartmentsUpdateManyMutationInput = {
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type hotel_apartmentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type BookingCreateInput = {
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
    leadType?: string | null
  }

  export type BookingUncheckedCreateInput = {
    id?: number
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
    leadType?: string | null
  }

  export type BookingUpdateInput = {
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
    leadType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BookingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
    leadType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BookingCreateManyInput = {
    id?: number
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
    leadType?: string | null
  }

  export type BookingUpdateManyMutationInput = {
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
    leadType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BookingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
    leadType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadsCreateInput = {
    bookingId?: string | null
    phone: string
    guestName?: string | null
    propertyName?: string | null
    arrivalDate: string
    departureDate?: string | null
    totalPersons?: number | null
    source: string
    channel?: string | null
    priority?: string
    notes?: string | null
    createdAt?: Date | string
    lastUpdatedLeads?: Date | string
    numNights?: number | null
    estimatedValue?: string | null
    assignedTo?: string | null
    lastContactAt?: Date | string | null
    nextFollowUp?: Date | string | null
    lastUpdated?: Date | string
  }

  export type LeadsUncheckedCreateInput = {
    id?: number
    bookingId?: string | null
    phone: string
    guestName?: string | null
    propertyName?: string | null
    arrivalDate: string
    departureDate?: string | null
    totalPersons?: number | null
    source: string
    channel?: string | null
    priority?: string
    notes?: string | null
    createdAt?: Date | string
    lastUpdatedLeads?: Date | string
    numNights?: number | null
    estimatedValue?: string | null
    assignedTo?: string | null
    lastContactAt?: Date | string | null
    nextFollowUp?: Date | string | null
    lastUpdated?: Date | string
  }

  export type LeadsUpdateInput = {
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedValue?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    lastContactAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextFollowUp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeadsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedValue?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    lastContactAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextFollowUp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeadsCreateManyInput = {
    id?: number
    bookingId?: string | null
    phone: string
    guestName?: string | null
    propertyName?: string | null
    arrivalDate: string
    departureDate?: string | null
    totalPersons?: number | null
    source: string
    channel?: string | null
    priority?: string
    notes?: string | null
    createdAt?: Date | string
    lastUpdatedLeads?: Date | string
    numNights?: number | null
    estimatedValue?: string | null
    assignedTo?: string | null
    lastContactAt?: Date | string | null
    nextFollowUp?: Date | string | null
    lastUpdated?: Date | string
  }

  export type LeadsUpdateManyMutationInput = {
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedValue?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    lastContactAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextFollowUp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeadsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    estimatedValue?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    lastContactAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextFollowUp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IA_CMR_ClientesCreateInput = {
    phoneNumber: string
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
  }

  export type IA_CMR_ClientesUncheckedCreateInput = {
    phoneNumber: string
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
  }

  export type IA_CMR_ClientesUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IA_CMR_ClientesUncheckedUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IA_CMR_ClientesCreateManyInput = {
    phoneNumber: string
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
  }

  export type IA_CMR_ClientesUpdateManyMutationInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IA_CMR_ClientesUncheckedUpdateManyInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ClientViewCountOrderByAggregateInput = {
    phoneNumber?: SortOrder
    name?: SortOrder
    userName?: SortOrder
    labels?: SortOrder
    chatId?: SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrder
    threadTokenCount?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
  }

  export type ClientViewAvgOrderByAggregateInput = {
    threadTokenCount?: SortOrder
    prioridad?: SortOrder
  }

  export type ClientViewMaxOrderByAggregateInput = {
    phoneNumber?: SortOrder
    name?: SortOrder
    userName?: SortOrder
    labels?: SortOrder
    chatId?: SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrder
    threadTokenCount?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
  }

  export type ClientViewMinOrderByAggregateInput = {
    phoneNumber?: SortOrder
    name?: SortOrder
    userName?: SortOrder
    labels?: SortOrder
    chatId?: SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrder
    threadTokenCount?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
  }

  export type ClientViewSumOrderByAggregateInput = {
    threadTokenCount?: SortOrder
    prioridad?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type hotel_apartmentsCountOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    extraCharge?: SortOrder
    capacity?: SortOrder
  }

  export type hotel_apartmentsAvgOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    capacity?: SortOrder
  }

  export type hotel_apartmentsMaxOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    capacity?: SortOrder
  }

  export type hotel_apartmentsMinOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    capacity?: SortOrder
  }

  export type hotel_apartmentsSumOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    capacity?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type BookingCountOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    status?: SortOrder
    internalNotes?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    totalCharges?: SortOrder
    totalPayments?: SortOrder
    balance?: SortOrder
    basePrice?: SortOrder
    channel?: SortOrder
    email?: SortOrder
    apiReference?: SortOrder
    charges?: SortOrder
    payments?: SortOrder
    messages?: SortOrder
    infoItems?: SortOrder
    notes?: SortOrder
    bookingDate?: SortOrder
    modifiedDate?: SortOrder
    lastUpdatedBD?: SortOrder
    raw?: SortOrder
    BDStatus?: SortOrder
    leadType?: SortOrder
  }

  export type BookingAvgOrderByAggregateInput = {
    id?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
  }

  export type BookingMaxOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    status?: SortOrder
    internalNotes?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    totalCharges?: SortOrder
    totalPayments?: SortOrder
    balance?: SortOrder
    basePrice?: SortOrder
    channel?: SortOrder
    email?: SortOrder
    apiReference?: SortOrder
    notes?: SortOrder
    bookingDate?: SortOrder
    modifiedDate?: SortOrder
    lastUpdatedBD?: SortOrder
    BDStatus?: SortOrder
    leadType?: SortOrder
  }

  export type BookingMinOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    status?: SortOrder
    internalNotes?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    totalCharges?: SortOrder
    totalPayments?: SortOrder
    balance?: SortOrder
    basePrice?: SortOrder
    channel?: SortOrder
    email?: SortOrder
    apiReference?: SortOrder
    notes?: SortOrder
    bookingDate?: SortOrder
    modifiedDate?: SortOrder
    lastUpdatedBD?: SortOrder
    BDStatus?: SortOrder
    leadType?: SortOrder
  }

  export type BookingSumOrderByAggregateInput = {
    id?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type LeadsCountOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    totalPersons?: SortOrder
    source?: SortOrder
    channel?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrder
    estimatedValue?: SortOrder
    assignedTo?: SortOrder
    lastContactAt?: SortOrder
    nextFollowUp?: SortOrder
    lastUpdated?: SortOrder
  }

  export type LeadsAvgOrderByAggregateInput = {
    id?: SortOrder
    totalPersons?: SortOrder
    numNights?: SortOrder
  }

  export type LeadsMaxOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    totalPersons?: SortOrder
    source?: SortOrder
    channel?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrder
    estimatedValue?: SortOrder
    assignedTo?: SortOrder
    lastContactAt?: SortOrder
    nextFollowUp?: SortOrder
    lastUpdated?: SortOrder
  }

  export type LeadsMinOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    totalPersons?: SortOrder
    source?: SortOrder
    channel?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrder
    estimatedValue?: SortOrder
    assignedTo?: SortOrder
    lastContactAt?: SortOrder
    nextFollowUp?: SortOrder
    lastUpdated?: SortOrder
  }

  export type LeadsSumOrderByAggregateInput = {
    id?: SortOrder
    totalPersons?: SortOrder
    numNights?: SortOrder
  }

  export type IA_CMR_ClientesCountOrderByAggregateInput = {
    phoneNumber?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
  }

  export type IA_CMR_ClientesAvgOrderByAggregateInput = {
    prioridad?: SortOrder
  }

  export type IA_CMR_ClientesMaxOrderByAggregateInput = {
    phoneNumber?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
  }

  export type IA_CMR_ClientesMinOrderByAggregateInput = {
    phoneNumber?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
  }

  export type IA_CMR_ClientesSumOrderByAggregateInput = {
    prioridad?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}