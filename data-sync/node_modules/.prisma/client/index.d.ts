
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Chats
 * 
 */
export type Chats = $Result.DefaultSelection<Prisma.$ChatsPayload>
/**
 * Model Propiedades
 * 
 */
export type Propiedades = $Result.DefaultSelection<Prisma.$PropiedadesPayload>
/**
 * Model Reservas
 * 
 */
export type Reservas = $Result.DefaultSelection<Prisma.$ReservasPayload>
/**
 * Model Oportunidades
 * 
 */
export type Oportunidades = $Result.DefaultSelection<Prisma.$OportunidadesPayload>
/**
 * Model CRM
 * 
 */
export type CRM = $Result.DefaultSelection<Prisma.$CRMPayload>
/**
 * Model Clientes
 * 
 */
export type Clientes = $Result.DefaultSelection<Prisma.$ClientesPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Chats
 * const chats = await prisma.chats.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Chats
   * const chats = await prisma.chats.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.chats`: Exposes CRUD operations for the **Chats** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chats
    * const chats = await prisma.chats.findMany()
    * ```
    */
  get chats(): Prisma.ChatsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propiedades`: Exposes CRUD operations for the **Propiedades** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Propiedades
    * const propiedades = await prisma.propiedades.findMany()
    * ```
    */
  get propiedades(): Prisma.PropiedadesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservas`: Exposes CRUD operations for the **Reservas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservas
    * const reservas = await prisma.reservas.findMany()
    * ```
    */
  get reservas(): Prisma.ReservasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.oportunidades`: Exposes CRUD operations for the **Oportunidades** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Oportunidades
    * const oportunidades = await prisma.oportunidades.findMany()
    * ```
    */
  get oportunidades(): Prisma.OportunidadesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cRM`: Exposes CRUD operations for the **CRM** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CRMS
    * const cRMS = await prisma.cRM.findMany()
    * ```
    */
  get cRM(): Prisma.CRMDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clientes`: Exposes CRUD operations for the **Clientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.clientes.findMany()
    * ```
    */
  get clientes(): Prisma.ClientesDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.15.0
   * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Chats: 'Chats',
    Propiedades: 'Propiedades',
    Reservas: 'Reservas',
    Oportunidades: 'Oportunidades',
    CRM: 'CRM',
    Clientes: 'Clientes'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "chats" | "propiedades" | "reservas" | "oportunidades" | "cRM" | "clientes"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Chats: {
        payload: Prisma.$ChatsPayload<ExtArgs>
        fields: Prisma.ChatsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChatsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChatsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload>
          }
          findFirst: {
            args: Prisma.ChatsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChatsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload>
          }
          findMany: {
            args: Prisma.ChatsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload>[]
          }
          create: {
            args: Prisma.ChatsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload>
          }
          createMany: {
            args: Prisma.ChatsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChatsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload>[]
          }
          delete: {
            args: Prisma.ChatsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload>
          }
          update: {
            args: Prisma.ChatsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload>
          }
          deleteMany: {
            args: Prisma.ChatsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChatsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ChatsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload>[]
          }
          upsert: {
            args: Prisma.ChatsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatsPayload>
          }
          aggregate: {
            args: Prisma.ChatsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChats>
          }
          groupBy: {
            args: Prisma.ChatsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChatsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChatsCountArgs<ExtArgs>
            result: $Utils.Optional<ChatsCountAggregateOutputType> | number
          }
        }
      }
      Propiedades: {
        payload: Prisma.$PropiedadesPayload<ExtArgs>
        fields: Prisma.PropiedadesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropiedadesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropiedadesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload>
          }
          findFirst: {
            args: Prisma.PropiedadesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropiedadesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload>
          }
          findMany: {
            args: Prisma.PropiedadesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload>[]
          }
          create: {
            args: Prisma.PropiedadesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload>
          }
          createMany: {
            args: Prisma.PropiedadesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropiedadesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload>[]
          }
          delete: {
            args: Prisma.PropiedadesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload>
          }
          update: {
            args: Prisma.PropiedadesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload>
          }
          deleteMany: {
            args: Prisma.PropiedadesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropiedadesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropiedadesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload>[]
          }
          upsert: {
            args: Prisma.PropiedadesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropiedadesPayload>
          }
          aggregate: {
            args: Prisma.PropiedadesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropiedades>
          }
          groupBy: {
            args: Prisma.PropiedadesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropiedadesGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropiedadesCountArgs<ExtArgs>
            result: $Utils.Optional<PropiedadesCountAggregateOutputType> | number
          }
        }
      }
      Reservas: {
        payload: Prisma.$ReservasPayload<ExtArgs>
        fields: Prisma.ReservasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          findFirst: {
            args: Prisma.ReservasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          findMany: {
            args: Prisma.ReservasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>[]
          }
          create: {
            args: Prisma.ReservasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          createMany: {
            args: Prisma.ReservasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>[]
          }
          delete: {
            args: Prisma.ReservasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          update: {
            args: Prisma.ReservasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          deleteMany: {
            args: Prisma.ReservasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>[]
          }
          upsert: {
            args: Prisma.ReservasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          aggregate: {
            args: Prisma.ReservasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservas>
          }
          groupBy: {
            args: Prisma.ReservasGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservasGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservasCountArgs<ExtArgs>
            result: $Utils.Optional<ReservasCountAggregateOutputType> | number
          }
        }
      }
      Oportunidades: {
        payload: Prisma.$OportunidadesPayload<ExtArgs>
        fields: Prisma.OportunidadesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OportunidadesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OportunidadesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload>
          }
          findFirst: {
            args: Prisma.OportunidadesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OportunidadesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload>
          }
          findMany: {
            args: Prisma.OportunidadesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload>[]
          }
          create: {
            args: Prisma.OportunidadesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload>
          }
          createMany: {
            args: Prisma.OportunidadesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OportunidadesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload>[]
          }
          delete: {
            args: Prisma.OportunidadesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload>
          }
          update: {
            args: Prisma.OportunidadesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload>
          }
          deleteMany: {
            args: Prisma.OportunidadesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OportunidadesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OportunidadesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload>[]
          }
          upsert: {
            args: Prisma.OportunidadesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OportunidadesPayload>
          }
          aggregate: {
            args: Prisma.OportunidadesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOportunidades>
          }
          groupBy: {
            args: Prisma.OportunidadesGroupByArgs<ExtArgs>
            result: $Utils.Optional<OportunidadesGroupByOutputType>[]
          }
          count: {
            args: Prisma.OportunidadesCountArgs<ExtArgs>
            result: $Utils.Optional<OportunidadesCountAggregateOutputType> | number
          }
        }
      }
      CRM: {
        payload: Prisma.$CRMPayload<ExtArgs>
        fields: Prisma.CRMFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CRMFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CRMFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload>
          }
          findFirst: {
            args: Prisma.CRMFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CRMFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload>
          }
          findMany: {
            args: Prisma.CRMFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload>[]
          }
          create: {
            args: Prisma.CRMCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload>
          }
          createMany: {
            args: Prisma.CRMCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CRMCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload>[]
          }
          delete: {
            args: Prisma.CRMDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload>
          }
          update: {
            args: Prisma.CRMUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload>
          }
          deleteMany: {
            args: Prisma.CRMDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CRMUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CRMUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload>[]
          }
          upsert: {
            args: Prisma.CRMUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CRMPayload>
          }
          aggregate: {
            args: Prisma.CRMAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCRM>
          }
          groupBy: {
            args: Prisma.CRMGroupByArgs<ExtArgs>
            result: $Utils.Optional<CRMGroupByOutputType>[]
          }
          count: {
            args: Prisma.CRMCountArgs<ExtArgs>
            result: $Utils.Optional<CRMCountAggregateOutputType> | number
          }
        }
      }
      Clientes: {
        payload: Prisma.$ClientesPayload<ExtArgs>
        fields: Prisma.ClientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          findFirst: {
            args: Prisma.ClientesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          findMany: {
            args: Prisma.ClientesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>[]
          }
          create: {
            args: Prisma.ClientesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          createMany: {
            args: Prisma.ClientesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>[]
          }
          delete: {
            args: Prisma.ClientesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          update: {
            args: Prisma.ClientesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          deleteMany: {
            args: Prisma.ClientesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>[]
          }
          upsert: {
            args: Prisma.ClientesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          aggregate: {
            args: Prisma.ClientesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientes>
          }
          groupBy: {
            args: Prisma.ClientesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientesCountArgs<ExtArgs>
            result: $Utils.Optional<ClientesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    chats?: ChatsOmit
    propiedades?: PropiedadesOmit
    reservas?: ReservasOmit
    oportunidades?: OportunidadesOmit
    cRM?: CRMOmit
    clientes?: ClientesOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model Chats
   */

  export type AggregateChats = {
    _count: ChatsCountAggregateOutputType | null
    _avg: ChatsAvgAggregateOutputType | null
    _sum: ChatsSumAggregateOutputType | null
    _min: ChatsMinAggregateOutputType | null
    _max: ChatsMaxAggregateOutputType | null
  }

  export type ChatsAvgAggregateOutputType = {
    threadTokenCount: number | null
  }

  export type ChatsSumAggregateOutputType = {
    threadTokenCount: number | null
  }

  export type ChatsMinAggregateOutputType = {
    phoneNumber: string | null
    name: string | null
    userName: string | null
    labels: string | null
    chatId: string | null
    lastActivity: Date | null
    threadId: string | null
    threadTokenCount: number | null
  }

  export type ChatsMaxAggregateOutputType = {
    phoneNumber: string | null
    name: string | null
    userName: string | null
    labels: string | null
    chatId: string | null
    lastActivity: Date | null
    threadId: string | null
    threadTokenCount: number | null
  }

  export type ChatsCountAggregateOutputType = {
    phoneNumber: number
    name: number
    userName: number
    labels: number
    chatId: number
    lastActivity: number
    threadId: number
    threadTokenCount: number
    _all: number
  }


  export type ChatsAvgAggregateInputType = {
    threadTokenCount?: true
  }

  export type ChatsSumAggregateInputType = {
    threadTokenCount?: true
  }

  export type ChatsMinAggregateInputType = {
    phoneNumber?: true
    name?: true
    userName?: true
    labels?: true
    chatId?: true
    lastActivity?: true
    threadId?: true
    threadTokenCount?: true
  }

  export type ChatsMaxAggregateInputType = {
    phoneNumber?: true
    name?: true
    userName?: true
    labels?: true
    chatId?: true
    lastActivity?: true
    threadId?: true
    threadTokenCount?: true
  }

  export type ChatsCountAggregateInputType = {
    phoneNumber?: true
    name?: true
    userName?: true
    labels?: true
    chatId?: true
    lastActivity?: true
    threadId?: true
    threadTokenCount?: true
    _all?: true
  }

  export type ChatsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Chats to aggregate.
     */
    where?: ChatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Chats to fetch.
     */
    orderBy?: ChatsOrderByWithRelationInput | ChatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Chats
    **/
    _count?: true | ChatsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChatsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChatsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChatsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChatsMaxAggregateInputType
  }

  export type GetChatsAggregateType<T extends ChatsAggregateArgs> = {
        [P in keyof T & keyof AggregateChats]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChats[P]>
      : GetScalarType<T[P], AggregateChats[P]>
  }




  export type ChatsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatsWhereInput
    orderBy?: ChatsOrderByWithAggregationInput | ChatsOrderByWithAggregationInput[]
    by: ChatsScalarFieldEnum[] | ChatsScalarFieldEnum
    having?: ChatsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChatsCountAggregateInputType | true
    _avg?: ChatsAvgAggregateInputType
    _sum?: ChatsSumAggregateInputType
    _min?: ChatsMinAggregateInputType
    _max?: ChatsMaxAggregateInputType
  }

  export type ChatsGroupByOutputType = {
    phoneNumber: string
    name: string | null
    userName: string | null
    labels: string | null
    chatId: string | null
    lastActivity: Date
    threadId: string | null
    threadTokenCount: number | null
    _count: ChatsCountAggregateOutputType | null
    _avg: ChatsAvgAggregateOutputType | null
    _sum: ChatsSumAggregateOutputType | null
    _min: ChatsMinAggregateOutputType | null
    _max: ChatsMaxAggregateOutputType | null
  }

  type GetChatsGroupByPayload<T extends ChatsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChatsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChatsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChatsGroupByOutputType[P]>
            : GetScalarType<T[P], ChatsGroupByOutputType[P]>
        }
      >
    >


  export type ChatsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
  }, ExtArgs["result"]["chats"]>

  export type ChatsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
  }, ExtArgs["result"]["chats"]>

  export type ChatsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
  }, ExtArgs["result"]["chats"]>

  export type ChatsSelectScalar = {
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
  }

  export type ChatsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"phoneNumber" | "name" | "userName" | "labels" | "chatId" | "lastActivity" | "threadId" | "threadTokenCount", ExtArgs["result"]["chats"]>

  export type $ChatsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Chats"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      phoneNumber: string
      name: string | null
      userName: string | null
      labels: string | null
      chatId: string | null
      lastActivity: Date
      threadId: string | null
      threadTokenCount: number | null
    }, ExtArgs["result"]["chats"]>
    composites: {}
  }

  type ChatsGetPayload<S extends boolean | null | undefined | ChatsDefaultArgs> = $Result.GetResult<Prisma.$ChatsPayload, S>

  type ChatsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChatsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChatsCountAggregateInputType | true
    }

  export interface ChatsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Chats'], meta: { name: 'Chats' } }
    /**
     * Find zero or one Chats that matches the filter.
     * @param {ChatsFindUniqueArgs} args - Arguments to find a Chats
     * @example
     * // Get one Chats
     * const chats = await prisma.chats.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChatsFindUniqueArgs>(args: SelectSubset<T, ChatsFindUniqueArgs<ExtArgs>>): Prisma__ChatsClient<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chats that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChatsFindUniqueOrThrowArgs} args - Arguments to find a Chats
     * @example
     * // Get one Chats
     * const chats = await prisma.chats.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChatsFindUniqueOrThrowArgs>(args: SelectSubset<T, ChatsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChatsClient<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatsFindFirstArgs} args - Arguments to find a Chats
     * @example
     * // Get one Chats
     * const chats = await prisma.chats.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChatsFindFirstArgs>(args?: SelectSubset<T, ChatsFindFirstArgs<ExtArgs>>): Prisma__ChatsClient<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chats that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatsFindFirstOrThrowArgs} args - Arguments to find a Chats
     * @example
     * // Get one Chats
     * const chats = await prisma.chats.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChatsFindFirstOrThrowArgs>(args?: SelectSubset<T, ChatsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChatsClient<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chats
     * const chats = await prisma.chats.findMany()
     * 
     * // Get first 10 Chats
     * const chats = await prisma.chats.findMany({ take: 10 })
     * 
     * // Only select the `phoneNumber`
     * const chatsWithPhoneNumberOnly = await prisma.chats.findMany({ select: { phoneNumber: true } })
     * 
     */
    findMany<T extends ChatsFindManyArgs>(args?: SelectSubset<T, ChatsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chats.
     * @param {ChatsCreateArgs} args - Arguments to create a Chats.
     * @example
     * // Create one Chats
     * const Chats = await prisma.chats.create({
     *   data: {
     *     // ... data to create a Chats
     *   }
     * })
     * 
     */
    create<T extends ChatsCreateArgs>(args: SelectSubset<T, ChatsCreateArgs<ExtArgs>>): Prisma__ChatsClient<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chats.
     * @param {ChatsCreateManyArgs} args - Arguments to create many Chats.
     * @example
     * // Create many Chats
     * const chats = await prisma.chats.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChatsCreateManyArgs>(args?: SelectSubset<T, ChatsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Chats and returns the data saved in the database.
     * @param {ChatsCreateManyAndReturnArgs} args - Arguments to create many Chats.
     * @example
     * // Create many Chats
     * const chats = await prisma.chats.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Chats and only return the `phoneNumber`
     * const chatsWithPhoneNumberOnly = await prisma.chats.createManyAndReturn({
     *   select: { phoneNumber: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChatsCreateManyAndReturnArgs>(args?: SelectSubset<T, ChatsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Chats.
     * @param {ChatsDeleteArgs} args - Arguments to delete one Chats.
     * @example
     * // Delete one Chats
     * const Chats = await prisma.chats.delete({
     *   where: {
     *     // ... filter to delete one Chats
     *   }
     * })
     * 
     */
    delete<T extends ChatsDeleteArgs>(args: SelectSubset<T, ChatsDeleteArgs<ExtArgs>>): Prisma__ChatsClient<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chats.
     * @param {ChatsUpdateArgs} args - Arguments to update one Chats.
     * @example
     * // Update one Chats
     * const chats = await prisma.chats.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChatsUpdateArgs>(args: SelectSubset<T, ChatsUpdateArgs<ExtArgs>>): Prisma__ChatsClient<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chats.
     * @param {ChatsDeleteManyArgs} args - Arguments to filter Chats to delete.
     * @example
     * // Delete a few Chats
     * const { count } = await prisma.chats.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChatsDeleteManyArgs>(args?: SelectSubset<T, ChatsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chats
     * const chats = await prisma.chats.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChatsUpdateManyArgs>(args: SelectSubset<T, ChatsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chats and returns the data updated in the database.
     * @param {ChatsUpdateManyAndReturnArgs} args - Arguments to update many Chats.
     * @example
     * // Update many Chats
     * const chats = await prisma.chats.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Chats and only return the `phoneNumber`
     * const chatsWithPhoneNumberOnly = await prisma.chats.updateManyAndReturn({
     *   select: { phoneNumber: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ChatsUpdateManyAndReturnArgs>(args: SelectSubset<T, ChatsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Chats.
     * @param {ChatsUpsertArgs} args - Arguments to update or create a Chats.
     * @example
     * // Update or create a Chats
     * const chats = await prisma.chats.upsert({
     *   create: {
     *     // ... data to create a Chats
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chats we want to update
     *   }
     * })
     */
    upsert<T extends ChatsUpsertArgs>(args: SelectSubset<T, ChatsUpsertArgs<ExtArgs>>): Prisma__ChatsClient<$Result.GetResult<Prisma.$ChatsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatsCountArgs} args - Arguments to filter Chats to count.
     * @example
     * // Count the number of Chats
     * const count = await prisma.chats.count({
     *   where: {
     *     // ... the filter for the Chats we want to count
     *   }
     * })
    **/
    count<T extends ChatsCountArgs>(
      args?: Subset<T, ChatsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChatsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChatsAggregateArgs>(args: Subset<T, ChatsAggregateArgs>): Prisma.PrismaPromise<GetChatsAggregateType<T>>

    /**
     * Group by Chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChatsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChatsGroupByArgs['orderBy'] }
        : { orderBy?: ChatsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChatsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChatsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Chats model
   */
  readonly fields: ChatsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Chats.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChatsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Chats model
   */
  interface ChatsFieldRefs {
    readonly phoneNumber: FieldRef<"Chats", 'String'>
    readonly name: FieldRef<"Chats", 'String'>
    readonly userName: FieldRef<"Chats", 'String'>
    readonly labels: FieldRef<"Chats", 'String'>
    readonly chatId: FieldRef<"Chats", 'String'>
    readonly lastActivity: FieldRef<"Chats", 'DateTime'>
    readonly threadId: FieldRef<"Chats", 'String'>
    readonly threadTokenCount: FieldRef<"Chats", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Chats findUnique
   */
  export type ChatsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * Filter, which Chats to fetch.
     */
    where: ChatsWhereUniqueInput
  }

  /**
   * Chats findUniqueOrThrow
   */
  export type ChatsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * Filter, which Chats to fetch.
     */
    where: ChatsWhereUniqueInput
  }

  /**
   * Chats findFirst
   */
  export type ChatsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * Filter, which Chats to fetch.
     */
    where?: ChatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Chats to fetch.
     */
    orderBy?: ChatsOrderByWithRelationInput | ChatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Chats.
     */
    cursor?: ChatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Chats.
     */
    distinct?: ChatsScalarFieldEnum | ChatsScalarFieldEnum[]
  }

  /**
   * Chats findFirstOrThrow
   */
  export type ChatsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * Filter, which Chats to fetch.
     */
    where?: ChatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Chats to fetch.
     */
    orderBy?: ChatsOrderByWithRelationInput | ChatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Chats.
     */
    cursor?: ChatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Chats.
     */
    distinct?: ChatsScalarFieldEnum | ChatsScalarFieldEnum[]
  }

  /**
   * Chats findMany
   */
  export type ChatsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * Filter, which Chats to fetch.
     */
    where?: ChatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Chats to fetch.
     */
    orderBy?: ChatsOrderByWithRelationInput | ChatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Chats.
     */
    cursor?: ChatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Chats.
     */
    skip?: number
    distinct?: ChatsScalarFieldEnum | ChatsScalarFieldEnum[]
  }

  /**
   * Chats create
   */
  export type ChatsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * The data needed to create a Chats.
     */
    data: XOR<ChatsCreateInput, ChatsUncheckedCreateInput>
  }

  /**
   * Chats createMany
   */
  export type ChatsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Chats.
     */
    data: ChatsCreateManyInput | ChatsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Chats createManyAndReturn
   */
  export type ChatsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * The data used to create many Chats.
     */
    data: ChatsCreateManyInput | ChatsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Chats update
   */
  export type ChatsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * The data needed to update a Chats.
     */
    data: XOR<ChatsUpdateInput, ChatsUncheckedUpdateInput>
    /**
     * Choose, which Chats to update.
     */
    where: ChatsWhereUniqueInput
  }

  /**
   * Chats updateMany
   */
  export type ChatsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Chats.
     */
    data: XOR<ChatsUpdateManyMutationInput, ChatsUncheckedUpdateManyInput>
    /**
     * Filter which Chats to update
     */
    where?: ChatsWhereInput
    /**
     * Limit how many Chats to update.
     */
    limit?: number
  }

  /**
   * Chats updateManyAndReturn
   */
  export type ChatsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * The data used to update Chats.
     */
    data: XOR<ChatsUpdateManyMutationInput, ChatsUncheckedUpdateManyInput>
    /**
     * Filter which Chats to update
     */
    where?: ChatsWhereInput
    /**
     * Limit how many Chats to update.
     */
    limit?: number
  }

  /**
   * Chats upsert
   */
  export type ChatsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * The filter to search for the Chats to update in case it exists.
     */
    where: ChatsWhereUniqueInput
    /**
     * In case the Chats found by the `where` argument doesn't exist, create a new Chats with this data.
     */
    create: XOR<ChatsCreateInput, ChatsUncheckedCreateInput>
    /**
     * In case the Chats was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChatsUpdateInput, ChatsUncheckedUpdateInput>
  }

  /**
   * Chats delete
   */
  export type ChatsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
    /**
     * Filter which Chats to delete.
     */
    where: ChatsWhereUniqueInput
  }

  /**
   * Chats deleteMany
   */
  export type ChatsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Chats to delete
     */
    where?: ChatsWhereInput
    /**
     * Limit how many Chats to delete.
     */
    limit?: number
  }

  /**
   * Chats without action
   */
  export type ChatsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chats
     */
    select?: ChatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Chats
     */
    omit?: ChatsOmit<ExtArgs> | null
  }


  /**
   * Model Propiedades
   */

  export type AggregatePropiedades = {
    _count: PropiedadesCountAggregateOutputType | null
    _avg: PropiedadesAvgAggregateOutputType | null
    _sum: PropiedadesSumAggregateOutputType | null
    _min: PropiedadesMinAggregateOutputType | null
    _max: PropiedadesMaxAggregateOutputType | null
  }

  export type PropiedadesAvgAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    capacity: number | null
  }

  export type PropiedadesSumAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    capacity: number | null
  }

  export type PropiedadesMinAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    roomName: string | null
    capacity: number | null
  }

  export type PropiedadesMaxAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    roomName: string | null
    capacity: number | null
  }

  export type PropiedadesCountAggregateOutputType = {
    id: number
    propertyId: number
    roomId: number
    roomName: number
    extraCharge: number
    capacity: number
    _all: number
  }


  export type PropiedadesAvgAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    capacity?: true
  }

  export type PropiedadesSumAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    capacity?: true
  }

  export type PropiedadesMinAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    roomName?: true
    capacity?: true
  }

  export type PropiedadesMaxAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    roomName?: true
    capacity?: true
  }

  export type PropiedadesCountAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    roomName?: true
    extraCharge?: true
    capacity?: true
    _all?: true
  }

  export type PropiedadesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Propiedades to aggregate.
     */
    where?: PropiedadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Propiedades to fetch.
     */
    orderBy?: PropiedadesOrderByWithRelationInput | PropiedadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropiedadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Propiedades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Propiedades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Propiedades
    **/
    _count?: true | PropiedadesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropiedadesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropiedadesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropiedadesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropiedadesMaxAggregateInputType
  }

  export type GetPropiedadesAggregateType<T extends PropiedadesAggregateArgs> = {
        [P in keyof T & keyof AggregatePropiedades]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropiedades[P]>
      : GetScalarType<T[P], AggregatePropiedades[P]>
  }




  export type PropiedadesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropiedadesWhereInput
    orderBy?: PropiedadesOrderByWithAggregationInput | PropiedadesOrderByWithAggregationInput[]
    by: PropiedadesScalarFieldEnum[] | PropiedadesScalarFieldEnum
    having?: PropiedadesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropiedadesCountAggregateInputType | true
    _avg?: PropiedadesAvgAggregateInputType
    _sum?: PropiedadesSumAggregateInputType
    _min?: PropiedadesMinAggregateInputType
    _max?: PropiedadesMaxAggregateInputType
  }

  export type PropiedadesGroupByOutputType = {
    id: number
    propertyId: number
    roomId: number
    roomName: string
    extraCharge: JsonValue
    capacity: number
    _count: PropiedadesCountAggregateOutputType | null
    _avg: PropiedadesAvgAggregateOutputType | null
    _sum: PropiedadesSumAggregateOutputType | null
    _min: PropiedadesMinAggregateOutputType | null
    _max: PropiedadesMaxAggregateOutputType | null
  }

  type GetPropiedadesGroupByPayload<T extends PropiedadesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropiedadesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropiedadesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropiedadesGroupByOutputType[P]>
            : GetScalarType<T[P], PropiedadesGroupByOutputType[P]>
        }
      >
    >


  export type PropiedadesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }, ExtArgs["result"]["propiedades"]>

  export type PropiedadesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }, ExtArgs["result"]["propiedades"]>

  export type PropiedadesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }, ExtArgs["result"]["propiedades"]>

  export type PropiedadesSelectScalar = {
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }

  export type PropiedadesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "propertyId" | "roomId" | "roomName" | "extraCharge" | "capacity", ExtArgs["result"]["propiedades"]>

  export type $PropiedadesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Propiedades"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      propertyId: number
      roomId: number
      roomName: string
      extraCharge: Prisma.JsonValue
      capacity: number
    }, ExtArgs["result"]["propiedades"]>
    composites: {}
  }

  type PropiedadesGetPayload<S extends boolean | null | undefined | PropiedadesDefaultArgs> = $Result.GetResult<Prisma.$PropiedadesPayload, S>

  type PropiedadesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropiedadesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropiedadesCountAggregateInputType | true
    }

  export interface PropiedadesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Propiedades'], meta: { name: 'Propiedades' } }
    /**
     * Find zero or one Propiedades that matches the filter.
     * @param {PropiedadesFindUniqueArgs} args - Arguments to find a Propiedades
     * @example
     * // Get one Propiedades
     * const propiedades = await prisma.propiedades.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropiedadesFindUniqueArgs>(args: SelectSubset<T, PropiedadesFindUniqueArgs<ExtArgs>>): Prisma__PropiedadesClient<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Propiedades that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropiedadesFindUniqueOrThrowArgs} args - Arguments to find a Propiedades
     * @example
     * // Get one Propiedades
     * const propiedades = await prisma.propiedades.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropiedadesFindUniqueOrThrowArgs>(args: SelectSubset<T, PropiedadesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropiedadesClient<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Propiedades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropiedadesFindFirstArgs} args - Arguments to find a Propiedades
     * @example
     * // Get one Propiedades
     * const propiedades = await prisma.propiedades.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropiedadesFindFirstArgs>(args?: SelectSubset<T, PropiedadesFindFirstArgs<ExtArgs>>): Prisma__PropiedadesClient<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Propiedades that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropiedadesFindFirstOrThrowArgs} args - Arguments to find a Propiedades
     * @example
     * // Get one Propiedades
     * const propiedades = await prisma.propiedades.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropiedadesFindFirstOrThrowArgs>(args?: SelectSubset<T, PropiedadesFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropiedadesClient<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Propiedades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropiedadesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Propiedades
     * const propiedades = await prisma.propiedades.findMany()
     * 
     * // Get first 10 Propiedades
     * const propiedades = await prisma.propiedades.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propiedadesWithIdOnly = await prisma.propiedades.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropiedadesFindManyArgs>(args?: SelectSubset<T, PropiedadesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Propiedades.
     * @param {PropiedadesCreateArgs} args - Arguments to create a Propiedades.
     * @example
     * // Create one Propiedades
     * const Propiedades = await prisma.propiedades.create({
     *   data: {
     *     // ... data to create a Propiedades
     *   }
     * })
     * 
     */
    create<T extends PropiedadesCreateArgs>(args: SelectSubset<T, PropiedadesCreateArgs<ExtArgs>>): Prisma__PropiedadesClient<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Propiedades.
     * @param {PropiedadesCreateManyArgs} args - Arguments to create many Propiedades.
     * @example
     * // Create many Propiedades
     * const propiedades = await prisma.propiedades.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropiedadesCreateManyArgs>(args?: SelectSubset<T, PropiedadesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Propiedades and returns the data saved in the database.
     * @param {PropiedadesCreateManyAndReturnArgs} args - Arguments to create many Propiedades.
     * @example
     * // Create many Propiedades
     * const propiedades = await prisma.propiedades.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Propiedades and only return the `id`
     * const propiedadesWithIdOnly = await prisma.propiedades.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropiedadesCreateManyAndReturnArgs>(args?: SelectSubset<T, PropiedadesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Propiedades.
     * @param {PropiedadesDeleteArgs} args - Arguments to delete one Propiedades.
     * @example
     * // Delete one Propiedades
     * const Propiedades = await prisma.propiedades.delete({
     *   where: {
     *     // ... filter to delete one Propiedades
     *   }
     * })
     * 
     */
    delete<T extends PropiedadesDeleteArgs>(args: SelectSubset<T, PropiedadesDeleteArgs<ExtArgs>>): Prisma__PropiedadesClient<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Propiedades.
     * @param {PropiedadesUpdateArgs} args - Arguments to update one Propiedades.
     * @example
     * // Update one Propiedades
     * const propiedades = await prisma.propiedades.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropiedadesUpdateArgs>(args: SelectSubset<T, PropiedadesUpdateArgs<ExtArgs>>): Prisma__PropiedadesClient<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Propiedades.
     * @param {PropiedadesDeleteManyArgs} args - Arguments to filter Propiedades to delete.
     * @example
     * // Delete a few Propiedades
     * const { count } = await prisma.propiedades.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropiedadesDeleteManyArgs>(args?: SelectSubset<T, PropiedadesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Propiedades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropiedadesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Propiedades
     * const propiedades = await prisma.propiedades.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropiedadesUpdateManyArgs>(args: SelectSubset<T, PropiedadesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Propiedades and returns the data updated in the database.
     * @param {PropiedadesUpdateManyAndReturnArgs} args - Arguments to update many Propiedades.
     * @example
     * // Update many Propiedades
     * const propiedades = await prisma.propiedades.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Propiedades and only return the `id`
     * const propiedadesWithIdOnly = await prisma.propiedades.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropiedadesUpdateManyAndReturnArgs>(args: SelectSubset<T, PropiedadesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Propiedades.
     * @param {PropiedadesUpsertArgs} args - Arguments to update or create a Propiedades.
     * @example
     * // Update or create a Propiedades
     * const propiedades = await prisma.propiedades.upsert({
     *   create: {
     *     // ... data to create a Propiedades
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Propiedades we want to update
     *   }
     * })
     */
    upsert<T extends PropiedadesUpsertArgs>(args: SelectSubset<T, PropiedadesUpsertArgs<ExtArgs>>): Prisma__PropiedadesClient<$Result.GetResult<Prisma.$PropiedadesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Propiedades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropiedadesCountArgs} args - Arguments to filter Propiedades to count.
     * @example
     * // Count the number of Propiedades
     * const count = await prisma.propiedades.count({
     *   where: {
     *     // ... the filter for the Propiedades we want to count
     *   }
     * })
    **/
    count<T extends PropiedadesCountArgs>(
      args?: Subset<T, PropiedadesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropiedadesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Propiedades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropiedadesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropiedadesAggregateArgs>(args: Subset<T, PropiedadesAggregateArgs>): Prisma.PrismaPromise<GetPropiedadesAggregateType<T>>

    /**
     * Group by Propiedades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropiedadesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropiedadesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropiedadesGroupByArgs['orderBy'] }
        : { orderBy?: PropiedadesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropiedadesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropiedadesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Propiedades model
   */
  readonly fields: PropiedadesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Propiedades.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropiedadesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Propiedades model
   */
  interface PropiedadesFieldRefs {
    readonly id: FieldRef<"Propiedades", 'Int'>
    readonly propertyId: FieldRef<"Propiedades", 'Int'>
    readonly roomId: FieldRef<"Propiedades", 'Int'>
    readonly roomName: FieldRef<"Propiedades", 'String'>
    readonly extraCharge: FieldRef<"Propiedades", 'Json'>
    readonly capacity: FieldRef<"Propiedades", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Propiedades findUnique
   */
  export type PropiedadesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * Filter, which Propiedades to fetch.
     */
    where: PropiedadesWhereUniqueInput
  }

  /**
   * Propiedades findUniqueOrThrow
   */
  export type PropiedadesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * Filter, which Propiedades to fetch.
     */
    where: PropiedadesWhereUniqueInput
  }

  /**
   * Propiedades findFirst
   */
  export type PropiedadesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * Filter, which Propiedades to fetch.
     */
    where?: PropiedadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Propiedades to fetch.
     */
    orderBy?: PropiedadesOrderByWithRelationInput | PropiedadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Propiedades.
     */
    cursor?: PropiedadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Propiedades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Propiedades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Propiedades.
     */
    distinct?: PropiedadesScalarFieldEnum | PropiedadesScalarFieldEnum[]
  }

  /**
   * Propiedades findFirstOrThrow
   */
  export type PropiedadesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * Filter, which Propiedades to fetch.
     */
    where?: PropiedadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Propiedades to fetch.
     */
    orderBy?: PropiedadesOrderByWithRelationInput | PropiedadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Propiedades.
     */
    cursor?: PropiedadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Propiedades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Propiedades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Propiedades.
     */
    distinct?: PropiedadesScalarFieldEnum | PropiedadesScalarFieldEnum[]
  }

  /**
   * Propiedades findMany
   */
  export type PropiedadesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * Filter, which Propiedades to fetch.
     */
    where?: PropiedadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Propiedades to fetch.
     */
    orderBy?: PropiedadesOrderByWithRelationInput | PropiedadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Propiedades.
     */
    cursor?: PropiedadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Propiedades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Propiedades.
     */
    skip?: number
    distinct?: PropiedadesScalarFieldEnum | PropiedadesScalarFieldEnum[]
  }

  /**
   * Propiedades create
   */
  export type PropiedadesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * The data needed to create a Propiedades.
     */
    data: XOR<PropiedadesCreateInput, PropiedadesUncheckedCreateInput>
  }

  /**
   * Propiedades createMany
   */
  export type PropiedadesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Propiedades.
     */
    data: PropiedadesCreateManyInput | PropiedadesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Propiedades createManyAndReturn
   */
  export type PropiedadesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * The data used to create many Propiedades.
     */
    data: PropiedadesCreateManyInput | PropiedadesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Propiedades update
   */
  export type PropiedadesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * The data needed to update a Propiedades.
     */
    data: XOR<PropiedadesUpdateInput, PropiedadesUncheckedUpdateInput>
    /**
     * Choose, which Propiedades to update.
     */
    where: PropiedadesWhereUniqueInput
  }

  /**
   * Propiedades updateMany
   */
  export type PropiedadesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Propiedades.
     */
    data: XOR<PropiedadesUpdateManyMutationInput, PropiedadesUncheckedUpdateManyInput>
    /**
     * Filter which Propiedades to update
     */
    where?: PropiedadesWhereInput
    /**
     * Limit how many Propiedades to update.
     */
    limit?: number
  }

  /**
   * Propiedades updateManyAndReturn
   */
  export type PropiedadesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * The data used to update Propiedades.
     */
    data: XOR<PropiedadesUpdateManyMutationInput, PropiedadesUncheckedUpdateManyInput>
    /**
     * Filter which Propiedades to update
     */
    where?: PropiedadesWhereInput
    /**
     * Limit how many Propiedades to update.
     */
    limit?: number
  }

  /**
   * Propiedades upsert
   */
  export type PropiedadesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * The filter to search for the Propiedades to update in case it exists.
     */
    where: PropiedadesWhereUniqueInput
    /**
     * In case the Propiedades found by the `where` argument doesn't exist, create a new Propiedades with this data.
     */
    create: XOR<PropiedadesCreateInput, PropiedadesUncheckedCreateInput>
    /**
     * In case the Propiedades was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropiedadesUpdateInput, PropiedadesUncheckedUpdateInput>
  }

  /**
   * Propiedades delete
   */
  export type PropiedadesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
    /**
     * Filter which Propiedades to delete.
     */
    where: PropiedadesWhereUniqueInput
  }

  /**
   * Propiedades deleteMany
   */
  export type PropiedadesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Propiedades to delete
     */
    where?: PropiedadesWhereInput
    /**
     * Limit how many Propiedades to delete.
     */
    limit?: number
  }

  /**
   * Propiedades without action
   */
  export type PropiedadesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Propiedades
     */
    select?: PropiedadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Propiedades
     */
    omit?: PropiedadesOmit<ExtArgs> | null
  }


  /**
   * Model Reservas
   */

  export type AggregateReservas = {
    _count: ReservasCountAggregateOutputType | null
    _avg: ReservasAvgAggregateOutputType | null
    _sum: ReservasSumAggregateOutputType | null
    _min: ReservasMinAggregateOutputType | null
    _max: ReservasMaxAggregateOutputType | null
  }

  export type ReservasAvgAggregateOutputType = {
    id: number | null
    numNights: number | null
    totalPersons: number | null
  }

  export type ReservasSumAggregateOutputType = {
    id: number | null
    numNights: number | null
    totalPersons: number | null
  }

  export type ReservasMinAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    status: string | null
    internalNotes: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    numNights: number | null
    totalPersons: number | null
    totalCharges: string | null
    totalPayments: string | null
    balance: string | null
    basePrice: string | null
    channel: string | null
    email: string | null
    apiReference: string | null
    notes: string | null
    bookingDate: string | null
    modifiedDate: string | null
    lastUpdatedBD: Date | null
    BDStatus: string | null
  }

  export type ReservasMaxAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    status: string | null
    internalNotes: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    numNights: number | null
    totalPersons: number | null
    totalCharges: string | null
    totalPayments: string | null
    balance: string | null
    basePrice: string | null
    channel: string | null
    email: string | null
    apiReference: string | null
    notes: string | null
    bookingDate: string | null
    modifiedDate: string | null
    lastUpdatedBD: Date | null
    BDStatus: string | null
  }

  export type ReservasCountAggregateOutputType = {
    id: number
    bookingId: number
    phone: number
    guestName: number
    status: number
    internalNotes: number
    propertyName: number
    arrivalDate: number
    departureDate: number
    numNights: number
    totalPersons: number
    totalCharges: number
    totalPayments: number
    balance: number
    basePrice: number
    channel: number
    email: number
    apiReference: number
    charges: number
    payments: number
    messages: number
    infoItems: number
    notes: number
    bookingDate: number
    modifiedDate: number
    lastUpdatedBD: number
    raw: number
    BDStatus: number
    _all: number
  }


  export type ReservasAvgAggregateInputType = {
    id?: true
    numNights?: true
    totalPersons?: true
  }

  export type ReservasSumAggregateInputType = {
    id?: true
    numNights?: true
    totalPersons?: true
  }

  export type ReservasMinAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    status?: true
    internalNotes?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    totalCharges?: true
    totalPayments?: true
    balance?: true
    basePrice?: true
    channel?: true
    email?: true
    apiReference?: true
    notes?: true
    bookingDate?: true
    modifiedDate?: true
    lastUpdatedBD?: true
    BDStatus?: true
  }

  export type ReservasMaxAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    status?: true
    internalNotes?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    totalCharges?: true
    totalPayments?: true
    balance?: true
    basePrice?: true
    channel?: true
    email?: true
    apiReference?: true
    notes?: true
    bookingDate?: true
    modifiedDate?: true
    lastUpdatedBD?: true
    BDStatus?: true
  }

  export type ReservasCountAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    status?: true
    internalNotes?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    totalCharges?: true
    totalPayments?: true
    balance?: true
    basePrice?: true
    channel?: true
    email?: true
    apiReference?: true
    charges?: true
    payments?: true
    messages?: true
    infoItems?: true
    notes?: true
    bookingDate?: true
    modifiedDate?: true
    lastUpdatedBD?: true
    raw?: true
    BDStatus?: true
    _all?: true
  }

  export type ReservasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to aggregate.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservas
    **/
    _count?: true | ReservasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservasMaxAggregateInputType
  }

  export type GetReservasAggregateType<T extends ReservasAggregateArgs> = {
        [P in keyof T & keyof AggregateReservas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservas[P]>
      : GetScalarType<T[P], AggregateReservas[P]>
  }




  export type ReservasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservasWhereInput
    orderBy?: ReservasOrderByWithAggregationInput | ReservasOrderByWithAggregationInput[]
    by: ReservasScalarFieldEnum[] | ReservasScalarFieldEnum
    having?: ReservasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservasCountAggregateInputType | true
    _avg?: ReservasAvgAggregateInputType
    _sum?: ReservasSumAggregateInputType
    _min?: ReservasMinAggregateInputType
    _max?: ReservasMaxAggregateInputType
  }

  export type ReservasGroupByOutputType = {
    id: number
    bookingId: string
    phone: string | null
    guestName: string | null
    status: string | null
    internalNotes: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    numNights: number | null
    totalPersons: number | null
    totalCharges: string | null
    totalPayments: string | null
    balance: string | null
    basePrice: string | null
    channel: string | null
    email: string | null
    apiReference: string | null
    charges: JsonValue
    payments: JsonValue
    messages: JsonValue
    infoItems: JsonValue
    notes: string | null
    bookingDate: string | null
    modifiedDate: string | null
    lastUpdatedBD: Date
    raw: JsonValue | null
    BDStatus: string | null
    _count: ReservasCountAggregateOutputType | null
    _avg: ReservasAvgAggregateOutputType | null
    _sum: ReservasSumAggregateOutputType | null
    _min: ReservasMinAggregateOutputType | null
    _max: ReservasMaxAggregateOutputType | null
  }

  type GetReservasGroupByPayload<T extends ReservasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservasGroupByOutputType[P]>
            : GetScalarType<T[P], ReservasGroupByOutputType[P]>
        }
      >
    >


  export type ReservasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
  }, ExtArgs["result"]["reservas"]>

  export type ReservasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
  }, ExtArgs["result"]["reservas"]>

  export type ReservasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
  }, ExtArgs["result"]["reservas"]>

  export type ReservasSelectScalar = {
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
  }

  export type ReservasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bookingId" | "phone" | "guestName" | "status" | "internalNotes" | "propertyName" | "arrivalDate" | "departureDate" | "numNights" | "totalPersons" | "totalCharges" | "totalPayments" | "balance" | "basePrice" | "channel" | "email" | "apiReference" | "charges" | "payments" | "messages" | "infoItems" | "notes" | "bookingDate" | "modifiedDate" | "lastUpdatedBD" | "raw" | "BDStatus", ExtArgs["result"]["reservas"]>

  export type $ReservasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reservas"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bookingId: string
      phone: string | null
      guestName: string | null
      status: string | null
      internalNotes: string | null
      propertyName: string | null
      arrivalDate: string | null
      departureDate: string | null
      numNights: number | null
      totalPersons: number | null
      totalCharges: string | null
      totalPayments: string | null
      balance: string | null
      basePrice: string | null
      channel: string | null
      email: string | null
      apiReference: string | null
      charges: Prisma.JsonValue
      payments: Prisma.JsonValue
      messages: Prisma.JsonValue
      infoItems: Prisma.JsonValue
      notes: string | null
      bookingDate: string | null
      modifiedDate: string | null
      lastUpdatedBD: Date
      raw: Prisma.JsonValue | null
      BDStatus: string | null
    }, ExtArgs["result"]["reservas"]>
    composites: {}
  }

  type ReservasGetPayload<S extends boolean | null | undefined | ReservasDefaultArgs> = $Result.GetResult<Prisma.$ReservasPayload, S>

  type ReservasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservasCountAggregateInputType | true
    }

  export interface ReservasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reservas'], meta: { name: 'Reservas' } }
    /**
     * Find zero or one Reservas that matches the filter.
     * @param {ReservasFindUniqueArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservasFindUniqueArgs>(args: SelectSubset<T, ReservasFindUniqueArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reservas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservasFindUniqueOrThrowArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservasFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindFirstArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservasFindFirstArgs>(args?: SelectSubset<T, ReservasFindFirstArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindFirstOrThrowArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservasFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservasFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservas
     * const reservas = await prisma.reservas.findMany()
     * 
     * // Get first 10 Reservas
     * const reservas = await prisma.reservas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservasWithIdOnly = await prisma.reservas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservasFindManyArgs>(args?: SelectSubset<T, ReservasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reservas.
     * @param {ReservasCreateArgs} args - Arguments to create a Reservas.
     * @example
     * // Create one Reservas
     * const Reservas = await prisma.reservas.create({
     *   data: {
     *     // ... data to create a Reservas
     *   }
     * })
     * 
     */
    create<T extends ReservasCreateArgs>(args: SelectSubset<T, ReservasCreateArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservas.
     * @param {ReservasCreateManyArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reservas = await prisma.reservas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservasCreateManyArgs>(args?: SelectSubset<T, ReservasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservas and returns the data saved in the database.
     * @param {ReservasCreateManyAndReturnArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reservas = await prisma.reservas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservas and only return the `id`
     * const reservasWithIdOnly = await prisma.reservas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservasCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reservas.
     * @param {ReservasDeleteArgs} args - Arguments to delete one Reservas.
     * @example
     * // Delete one Reservas
     * const Reservas = await prisma.reservas.delete({
     *   where: {
     *     // ... filter to delete one Reservas
     *   }
     * })
     * 
     */
    delete<T extends ReservasDeleteArgs>(args: SelectSubset<T, ReservasDeleteArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reservas.
     * @param {ReservasUpdateArgs} args - Arguments to update one Reservas.
     * @example
     * // Update one Reservas
     * const reservas = await prisma.reservas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservasUpdateArgs>(args: SelectSubset<T, ReservasUpdateArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservas.
     * @param {ReservasDeleteManyArgs} args - Arguments to filter Reservas to delete.
     * @example
     * // Delete a few Reservas
     * const { count } = await prisma.reservas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservasDeleteManyArgs>(args?: SelectSubset<T, ReservasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservas
     * const reservas = await prisma.reservas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservasUpdateManyArgs>(args: SelectSubset<T, ReservasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas and returns the data updated in the database.
     * @param {ReservasUpdateManyAndReturnArgs} args - Arguments to update many Reservas.
     * @example
     * // Update many Reservas
     * const reservas = await prisma.reservas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reservas and only return the `id`
     * const reservasWithIdOnly = await prisma.reservas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservasUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reservas.
     * @param {ReservasUpsertArgs} args - Arguments to update or create a Reservas.
     * @example
     * // Update or create a Reservas
     * const reservas = await prisma.reservas.upsert({
     *   create: {
     *     // ... data to create a Reservas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservas we want to update
     *   }
     * })
     */
    upsert<T extends ReservasUpsertArgs>(args: SelectSubset<T, ReservasUpsertArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasCountArgs} args - Arguments to filter Reservas to count.
     * @example
     * // Count the number of Reservas
     * const count = await prisma.reservas.count({
     *   where: {
     *     // ... the filter for the Reservas we want to count
     *   }
     * })
    **/
    count<T extends ReservasCountArgs>(
      args?: Subset<T, ReservasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservasAggregateArgs>(args: Subset<T, ReservasAggregateArgs>): Prisma.PrismaPromise<GetReservasAggregateType<T>>

    /**
     * Group by Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservasGroupByArgs['orderBy'] }
        : { orderBy?: ReservasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reservas model
   */
  readonly fields: ReservasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reservas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reservas model
   */
  interface ReservasFieldRefs {
    readonly id: FieldRef<"Reservas", 'Int'>
    readonly bookingId: FieldRef<"Reservas", 'String'>
    readonly phone: FieldRef<"Reservas", 'String'>
    readonly guestName: FieldRef<"Reservas", 'String'>
    readonly status: FieldRef<"Reservas", 'String'>
    readonly internalNotes: FieldRef<"Reservas", 'String'>
    readonly propertyName: FieldRef<"Reservas", 'String'>
    readonly arrivalDate: FieldRef<"Reservas", 'String'>
    readonly departureDate: FieldRef<"Reservas", 'String'>
    readonly numNights: FieldRef<"Reservas", 'Int'>
    readonly totalPersons: FieldRef<"Reservas", 'Int'>
    readonly totalCharges: FieldRef<"Reservas", 'String'>
    readonly totalPayments: FieldRef<"Reservas", 'String'>
    readonly balance: FieldRef<"Reservas", 'String'>
    readonly basePrice: FieldRef<"Reservas", 'String'>
    readonly channel: FieldRef<"Reservas", 'String'>
    readonly email: FieldRef<"Reservas", 'String'>
    readonly apiReference: FieldRef<"Reservas", 'String'>
    readonly charges: FieldRef<"Reservas", 'Json'>
    readonly payments: FieldRef<"Reservas", 'Json'>
    readonly messages: FieldRef<"Reservas", 'Json'>
    readonly infoItems: FieldRef<"Reservas", 'Json'>
    readonly notes: FieldRef<"Reservas", 'String'>
    readonly bookingDate: FieldRef<"Reservas", 'String'>
    readonly modifiedDate: FieldRef<"Reservas", 'String'>
    readonly lastUpdatedBD: FieldRef<"Reservas", 'DateTime'>
    readonly raw: FieldRef<"Reservas", 'Json'>
    readonly BDStatus: FieldRef<"Reservas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Reservas findUnique
   */
  export type ReservasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas findUniqueOrThrow
   */
  export type ReservasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas findFirst
   */
  export type ReservasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Reservas findFirstOrThrow
   */
  export type ReservasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Reservas findMany
   */
  export type ReservasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Reservas create
   */
  export type ReservasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * The data needed to create a Reservas.
     */
    data: XOR<ReservasCreateInput, ReservasUncheckedCreateInput>
  }

  /**
   * Reservas createMany
   */
  export type ReservasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservas.
     */
    data: ReservasCreateManyInput | ReservasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reservas createManyAndReturn
   */
  export type ReservasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * The data used to create many Reservas.
     */
    data: ReservasCreateManyInput | ReservasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reservas update
   */
  export type ReservasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * The data needed to update a Reservas.
     */
    data: XOR<ReservasUpdateInput, ReservasUncheckedUpdateInput>
    /**
     * Choose, which Reservas to update.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas updateMany
   */
  export type ReservasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservasWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
  }

  /**
   * Reservas updateManyAndReturn
   */
  export type ReservasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservasWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
  }

  /**
   * Reservas upsert
   */
  export type ReservasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * The filter to search for the Reservas to update in case it exists.
     */
    where: ReservasWhereUniqueInput
    /**
     * In case the Reservas found by the `where` argument doesn't exist, create a new Reservas with this data.
     */
    create: XOR<ReservasCreateInput, ReservasUncheckedCreateInput>
    /**
     * In case the Reservas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservasUpdateInput, ReservasUncheckedUpdateInput>
  }

  /**
   * Reservas delete
   */
  export type ReservasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Filter which Reservas to delete.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas deleteMany
   */
  export type ReservasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to delete
     */
    where?: ReservasWhereInput
    /**
     * Limit how many Reservas to delete.
     */
    limit?: number
  }

  /**
   * Reservas without action
   */
  export type ReservasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
  }


  /**
   * Model Oportunidades
   */

  export type AggregateOportunidades = {
    _count: OportunidadesCountAggregateOutputType | null
    _avg: OportunidadesAvgAggregateOutputType | null
    _sum: OportunidadesSumAggregateOutputType | null
    _min: OportunidadesMinAggregateOutputType | null
    _max: OportunidadesMaxAggregateOutputType | null
  }

  export type OportunidadesAvgAggregateOutputType = {
    id: number | null
    numNights: number | null
    totalPersons: number | null
  }

  export type OportunidadesSumAggregateOutputType = {
    id: number | null
    numNights: number | null
    totalPersons: number | null
  }

  export type OportunidadesMinAggregateOutputType = {
    id: number | null
    bookingId: string | null
    guestName: string | null
    phone: string | null
    propertyName: string | null
    arrivalDate: Date | null
    departureDate: Date | null
    numNights: number | null
    totalPersons: number | null
    channel: string | null
    createdAt: Date | null
  }

  export type OportunidadesMaxAggregateOutputType = {
    id: number | null
    bookingId: string | null
    guestName: string | null
    phone: string | null
    propertyName: string | null
    arrivalDate: Date | null
    departureDate: Date | null
    numNights: number | null
    totalPersons: number | null
    channel: string | null
    createdAt: Date | null
  }

  export type OportunidadesCountAggregateOutputType = {
    id: number
    bookingId: number
    guestName: number
    phone: number
    propertyName: number
    arrivalDate: number
    departureDate: number
    numNights: number
    totalPersons: number
    channel: number
    createdAt: number
    _all: number
  }


  export type OportunidadesAvgAggregateInputType = {
    id?: true
    numNights?: true
    totalPersons?: true
  }

  export type OportunidadesSumAggregateInputType = {
    id?: true
    numNights?: true
    totalPersons?: true
  }

  export type OportunidadesMinAggregateInputType = {
    id?: true
    bookingId?: true
    guestName?: true
    phone?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    channel?: true
    createdAt?: true
  }

  export type OportunidadesMaxAggregateInputType = {
    id?: true
    bookingId?: true
    guestName?: true
    phone?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    channel?: true
    createdAt?: true
  }

  export type OportunidadesCountAggregateInputType = {
    id?: true
    bookingId?: true
    guestName?: true
    phone?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    channel?: true
    createdAt?: true
    _all?: true
  }

  export type OportunidadesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Oportunidades to aggregate.
     */
    where?: OportunidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Oportunidades to fetch.
     */
    orderBy?: OportunidadesOrderByWithRelationInput | OportunidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OportunidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Oportunidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Oportunidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Oportunidades
    **/
    _count?: true | OportunidadesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OportunidadesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OportunidadesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OportunidadesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OportunidadesMaxAggregateInputType
  }

  export type GetOportunidadesAggregateType<T extends OportunidadesAggregateArgs> = {
        [P in keyof T & keyof AggregateOportunidades]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOportunidades[P]>
      : GetScalarType<T[P], AggregateOportunidades[P]>
  }




  export type OportunidadesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OportunidadesWhereInput
    orderBy?: OportunidadesOrderByWithAggregationInput | OportunidadesOrderByWithAggregationInput[]
    by: OportunidadesScalarFieldEnum[] | OportunidadesScalarFieldEnum
    having?: OportunidadesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OportunidadesCountAggregateInputType | true
    _avg?: OportunidadesAvgAggregateInputType
    _sum?: OportunidadesSumAggregateInputType
    _min?: OportunidadesMinAggregateInputType
    _max?: OportunidadesMaxAggregateInputType
  }

  export type OportunidadesGroupByOutputType = {
    id: number
    bookingId: string
    guestName: string
    phone: string
    propertyName: string
    arrivalDate: Date
    departureDate: Date
    numNights: number
    totalPersons: number
    channel: string
    createdAt: Date
    _count: OportunidadesCountAggregateOutputType | null
    _avg: OportunidadesAvgAggregateOutputType | null
    _sum: OportunidadesSumAggregateOutputType | null
    _min: OportunidadesMinAggregateOutputType | null
    _max: OportunidadesMaxAggregateOutputType | null
  }

  type GetOportunidadesGroupByPayload<T extends OportunidadesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OportunidadesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OportunidadesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OportunidadesGroupByOutputType[P]>
            : GetScalarType<T[P], OportunidadesGroupByOutputType[P]>
        }
      >
    >


  export type OportunidadesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    guestName?: boolean
    phone?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    channel?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["oportunidades"]>

  export type OportunidadesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    guestName?: boolean
    phone?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    channel?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["oportunidades"]>

  export type OportunidadesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    guestName?: boolean
    phone?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    channel?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["oportunidades"]>

  export type OportunidadesSelectScalar = {
    id?: boolean
    bookingId?: boolean
    guestName?: boolean
    phone?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    channel?: boolean
    createdAt?: boolean
  }

  export type OportunidadesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bookingId" | "guestName" | "phone" | "propertyName" | "arrivalDate" | "departureDate" | "numNights" | "totalPersons" | "channel" | "createdAt", ExtArgs["result"]["oportunidades"]>

  export type $OportunidadesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Oportunidades"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bookingId: string
      guestName: string
      phone: string
      propertyName: string
      arrivalDate: Date
      departureDate: Date
      numNights: number
      totalPersons: number
      channel: string
      createdAt: Date
    }, ExtArgs["result"]["oportunidades"]>
    composites: {}
  }

  type OportunidadesGetPayload<S extends boolean | null | undefined | OportunidadesDefaultArgs> = $Result.GetResult<Prisma.$OportunidadesPayload, S>

  type OportunidadesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OportunidadesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OportunidadesCountAggregateInputType | true
    }

  export interface OportunidadesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Oportunidades'], meta: { name: 'Oportunidades' } }
    /**
     * Find zero or one Oportunidades that matches the filter.
     * @param {OportunidadesFindUniqueArgs} args - Arguments to find a Oportunidades
     * @example
     * // Get one Oportunidades
     * const oportunidades = await prisma.oportunidades.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OportunidadesFindUniqueArgs>(args: SelectSubset<T, OportunidadesFindUniqueArgs<ExtArgs>>): Prisma__OportunidadesClient<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Oportunidades that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OportunidadesFindUniqueOrThrowArgs} args - Arguments to find a Oportunidades
     * @example
     * // Get one Oportunidades
     * const oportunidades = await prisma.oportunidades.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OportunidadesFindUniqueOrThrowArgs>(args: SelectSubset<T, OportunidadesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OportunidadesClient<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oportunidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OportunidadesFindFirstArgs} args - Arguments to find a Oportunidades
     * @example
     * // Get one Oportunidades
     * const oportunidades = await prisma.oportunidades.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OportunidadesFindFirstArgs>(args?: SelectSubset<T, OportunidadesFindFirstArgs<ExtArgs>>): Prisma__OportunidadesClient<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oportunidades that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OportunidadesFindFirstOrThrowArgs} args - Arguments to find a Oportunidades
     * @example
     * // Get one Oportunidades
     * const oportunidades = await prisma.oportunidades.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OportunidadesFindFirstOrThrowArgs>(args?: SelectSubset<T, OportunidadesFindFirstOrThrowArgs<ExtArgs>>): Prisma__OportunidadesClient<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Oportunidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OportunidadesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Oportunidades
     * const oportunidades = await prisma.oportunidades.findMany()
     * 
     * // Get first 10 Oportunidades
     * const oportunidades = await prisma.oportunidades.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oportunidadesWithIdOnly = await prisma.oportunidades.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OportunidadesFindManyArgs>(args?: SelectSubset<T, OportunidadesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Oportunidades.
     * @param {OportunidadesCreateArgs} args - Arguments to create a Oportunidades.
     * @example
     * // Create one Oportunidades
     * const Oportunidades = await prisma.oportunidades.create({
     *   data: {
     *     // ... data to create a Oportunidades
     *   }
     * })
     * 
     */
    create<T extends OportunidadesCreateArgs>(args: SelectSubset<T, OportunidadesCreateArgs<ExtArgs>>): Prisma__OportunidadesClient<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Oportunidades.
     * @param {OportunidadesCreateManyArgs} args - Arguments to create many Oportunidades.
     * @example
     * // Create many Oportunidades
     * const oportunidades = await prisma.oportunidades.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OportunidadesCreateManyArgs>(args?: SelectSubset<T, OportunidadesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Oportunidades and returns the data saved in the database.
     * @param {OportunidadesCreateManyAndReturnArgs} args - Arguments to create many Oportunidades.
     * @example
     * // Create many Oportunidades
     * const oportunidades = await prisma.oportunidades.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Oportunidades and only return the `id`
     * const oportunidadesWithIdOnly = await prisma.oportunidades.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OportunidadesCreateManyAndReturnArgs>(args?: SelectSubset<T, OportunidadesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Oportunidades.
     * @param {OportunidadesDeleteArgs} args - Arguments to delete one Oportunidades.
     * @example
     * // Delete one Oportunidades
     * const Oportunidades = await prisma.oportunidades.delete({
     *   where: {
     *     // ... filter to delete one Oportunidades
     *   }
     * })
     * 
     */
    delete<T extends OportunidadesDeleteArgs>(args: SelectSubset<T, OportunidadesDeleteArgs<ExtArgs>>): Prisma__OportunidadesClient<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Oportunidades.
     * @param {OportunidadesUpdateArgs} args - Arguments to update one Oportunidades.
     * @example
     * // Update one Oportunidades
     * const oportunidades = await prisma.oportunidades.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OportunidadesUpdateArgs>(args: SelectSubset<T, OportunidadesUpdateArgs<ExtArgs>>): Prisma__OportunidadesClient<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Oportunidades.
     * @param {OportunidadesDeleteManyArgs} args - Arguments to filter Oportunidades to delete.
     * @example
     * // Delete a few Oportunidades
     * const { count } = await prisma.oportunidades.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OportunidadesDeleteManyArgs>(args?: SelectSubset<T, OportunidadesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oportunidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OportunidadesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Oportunidades
     * const oportunidades = await prisma.oportunidades.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OportunidadesUpdateManyArgs>(args: SelectSubset<T, OportunidadesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oportunidades and returns the data updated in the database.
     * @param {OportunidadesUpdateManyAndReturnArgs} args - Arguments to update many Oportunidades.
     * @example
     * // Update many Oportunidades
     * const oportunidades = await prisma.oportunidades.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Oportunidades and only return the `id`
     * const oportunidadesWithIdOnly = await prisma.oportunidades.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OportunidadesUpdateManyAndReturnArgs>(args: SelectSubset<T, OportunidadesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Oportunidades.
     * @param {OportunidadesUpsertArgs} args - Arguments to update or create a Oportunidades.
     * @example
     * // Update or create a Oportunidades
     * const oportunidades = await prisma.oportunidades.upsert({
     *   create: {
     *     // ... data to create a Oportunidades
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Oportunidades we want to update
     *   }
     * })
     */
    upsert<T extends OportunidadesUpsertArgs>(args: SelectSubset<T, OportunidadesUpsertArgs<ExtArgs>>): Prisma__OportunidadesClient<$Result.GetResult<Prisma.$OportunidadesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Oportunidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OportunidadesCountArgs} args - Arguments to filter Oportunidades to count.
     * @example
     * // Count the number of Oportunidades
     * const count = await prisma.oportunidades.count({
     *   where: {
     *     // ... the filter for the Oportunidades we want to count
     *   }
     * })
    **/
    count<T extends OportunidadesCountArgs>(
      args?: Subset<T, OportunidadesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OportunidadesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Oportunidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OportunidadesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OportunidadesAggregateArgs>(args: Subset<T, OportunidadesAggregateArgs>): Prisma.PrismaPromise<GetOportunidadesAggregateType<T>>

    /**
     * Group by Oportunidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OportunidadesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OportunidadesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OportunidadesGroupByArgs['orderBy'] }
        : { orderBy?: OportunidadesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OportunidadesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOportunidadesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Oportunidades model
   */
  readonly fields: OportunidadesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Oportunidades.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OportunidadesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Oportunidades model
   */
  interface OportunidadesFieldRefs {
    readonly id: FieldRef<"Oportunidades", 'Int'>
    readonly bookingId: FieldRef<"Oportunidades", 'String'>
    readonly guestName: FieldRef<"Oportunidades", 'String'>
    readonly phone: FieldRef<"Oportunidades", 'String'>
    readonly propertyName: FieldRef<"Oportunidades", 'String'>
    readonly arrivalDate: FieldRef<"Oportunidades", 'DateTime'>
    readonly departureDate: FieldRef<"Oportunidades", 'DateTime'>
    readonly numNights: FieldRef<"Oportunidades", 'Int'>
    readonly totalPersons: FieldRef<"Oportunidades", 'Int'>
    readonly channel: FieldRef<"Oportunidades", 'String'>
    readonly createdAt: FieldRef<"Oportunidades", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Oportunidades findUnique
   */
  export type OportunidadesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * Filter, which Oportunidades to fetch.
     */
    where: OportunidadesWhereUniqueInput
  }

  /**
   * Oportunidades findUniqueOrThrow
   */
  export type OportunidadesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * Filter, which Oportunidades to fetch.
     */
    where: OportunidadesWhereUniqueInput
  }

  /**
   * Oportunidades findFirst
   */
  export type OportunidadesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * Filter, which Oportunidades to fetch.
     */
    where?: OportunidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Oportunidades to fetch.
     */
    orderBy?: OportunidadesOrderByWithRelationInput | OportunidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Oportunidades.
     */
    cursor?: OportunidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Oportunidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Oportunidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Oportunidades.
     */
    distinct?: OportunidadesScalarFieldEnum | OportunidadesScalarFieldEnum[]
  }

  /**
   * Oportunidades findFirstOrThrow
   */
  export type OportunidadesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * Filter, which Oportunidades to fetch.
     */
    where?: OportunidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Oportunidades to fetch.
     */
    orderBy?: OportunidadesOrderByWithRelationInput | OportunidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Oportunidades.
     */
    cursor?: OportunidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Oportunidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Oportunidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Oportunidades.
     */
    distinct?: OportunidadesScalarFieldEnum | OportunidadesScalarFieldEnum[]
  }

  /**
   * Oportunidades findMany
   */
  export type OportunidadesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * Filter, which Oportunidades to fetch.
     */
    where?: OportunidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Oportunidades to fetch.
     */
    orderBy?: OportunidadesOrderByWithRelationInput | OportunidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Oportunidades.
     */
    cursor?: OportunidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Oportunidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Oportunidades.
     */
    skip?: number
    distinct?: OportunidadesScalarFieldEnum | OportunidadesScalarFieldEnum[]
  }

  /**
   * Oportunidades create
   */
  export type OportunidadesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * The data needed to create a Oportunidades.
     */
    data: XOR<OportunidadesCreateInput, OportunidadesUncheckedCreateInput>
  }

  /**
   * Oportunidades createMany
   */
  export type OportunidadesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Oportunidades.
     */
    data: OportunidadesCreateManyInput | OportunidadesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Oportunidades createManyAndReturn
   */
  export type OportunidadesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * The data used to create many Oportunidades.
     */
    data: OportunidadesCreateManyInput | OportunidadesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Oportunidades update
   */
  export type OportunidadesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * The data needed to update a Oportunidades.
     */
    data: XOR<OportunidadesUpdateInput, OportunidadesUncheckedUpdateInput>
    /**
     * Choose, which Oportunidades to update.
     */
    where: OportunidadesWhereUniqueInput
  }

  /**
   * Oportunidades updateMany
   */
  export type OportunidadesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Oportunidades.
     */
    data: XOR<OportunidadesUpdateManyMutationInput, OportunidadesUncheckedUpdateManyInput>
    /**
     * Filter which Oportunidades to update
     */
    where?: OportunidadesWhereInput
    /**
     * Limit how many Oportunidades to update.
     */
    limit?: number
  }

  /**
   * Oportunidades updateManyAndReturn
   */
  export type OportunidadesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * The data used to update Oportunidades.
     */
    data: XOR<OportunidadesUpdateManyMutationInput, OportunidadesUncheckedUpdateManyInput>
    /**
     * Filter which Oportunidades to update
     */
    where?: OportunidadesWhereInput
    /**
     * Limit how many Oportunidades to update.
     */
    limit?: number
  }

  /**
   * Oportunidades upsert
   */
  export type OportunidadesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * The filter to search for the Oportunidades to update in case it exists.
     */
    where: OportunidadesWhereUniqueInput
    /**
     * In case the Oportunidades found by the `where` argument doesn't exist, create a new Oportunidades with this data.
     */
    create: XOR<OportunidadesCreateInput, OportunidadesUncheckedCreateInput>
    /**
     * In case the Oportunidades was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OportunidadesUpdateInput, OportunidadesUncheckedUpdateInput>
  }

  /**
   * Oportunidades delete
   */
  export type OportunidadesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
    /**
     * Filter which Oportunidades to delete.
     */
    where: OportunidadesWhereUniqueInput
  }

  /**
   * Oportunidades deleteMany
   */
  export type OportunidadesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Oportunidades to delete
     */
    where?: OportunidadesWhereInput
    /**
     * Limit how many Oportunidades to delete.
     */
    limit?: number
  }

  /**
   * Oportunidades without action
   */
  export type OportunidadesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Oportunidades
     */
    select?: OportunidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Oportunidades
     */
    omit?: OportunidadesOmit<ExtArgs> | null
  }


  /**
   * Model CRM
   */

  export type AggregateCRM = {
    _count: CRMCountAggregateOutputType | null
    _avg: CRMAvgAggregateOutputType | null
    _sum: CRMSumAggregateOutputType | null
    _min: CRMMinAggregateOutputType | null
    _max: CRMMaxAggregateOutputType | null
  }

  export type CRMAvgAggregateOutputType = {
    id: number | null
    prioridad: number | null
    totalBookings: number | null
    totalValue: number | null
  }

  export type CRMSumAggregateOutputType = {
    id: number | null
    prioridad: number | null
    totalBookings: number | null
    totalValue: number | null
  }

  export type CRMMinAggregateOutputType = {
    id: number | null
    phoneNumber: string | null
    clientName: string | null
    email: string | null
    bookingId: string | null
    currentStatus: string | null
    source: string | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
    propertyName: string | null
    arrivalDate: Date | null
    departureDate: Date | null
    lastInteraction: Date | null
    threadId: string | null
    wspLabels: string | null
    totalBookings: number | null
    totalValue: number | null
    automationEnabled: boolean | null
    internalNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CRMMaxAggregateOutputType = {
    id: number | null
    phoneNumber: string | null
    clientName: string | null
    email: string | null
    bookingId: string | null
    currentStatus: string | null
    source: string | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
    propertyName: string | null
    arrivalDate: Date | null
    departureDate: Date | null
    lastInteraction: Date | null
    threadId: string | null
    wspLabels: string | null
    totalBookings: number | null
    totalValue: number | null
    automationEnabled: boolean | null
    internalNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CRMCountAggregateOutputType = {
    id: number
    phoneNumber: number
    clientName: number
    email: number
    bookingId: number
    currentStatus: number
    source: number
    profileStatus: number
    proximaAccion: number
    fechaProximaAccion: number
    prioridad: number
    propertyName: number
    arrivalDate: number
    departureDate: number
    lastInteraction: number
    threadId: number
    wspLabels: number
    totalBookings: number
    totalValue: number
    automationEnabled: number
    internalNotes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CRMAvgAggregateInputType = {
    id?: true
    prioridad?: true
    totalBookings?: true
    totalValue?: true
  }

  export type CRMSumAggregateInputType = {
    id?: true
    prioridad?: true
    totalBookings?: true
    totalValue?: true
  }

  export type CRMMinAggregateInputType = {
    id?: true
    phoneNumber?: true
    clientName?: true
    email?: true
    bookingId?: true
    currentStatus?: true
    source?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    lastInteraction?: true
    threadId?: true
    wspLabels?: true
    totalBookings?: true
    totalValue?: true
    automationEnabled?: true
    internalNotes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CRMMaxAggregateInputType = {
    id?: true
    phoneNumber?: true
    clientName?: true
    email?: true
    bookingId?: true
    currentStatus?: true
    source?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    lastInteraction?: true
    threadId?: true
    wspLabels?: true
    totalBookings?: true
    totalValue?: true
    automationEnabled?: true
    internalNotes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CRMCountAggregateInputType = {
    id?: true
    phoneNumber?: true
    clientName?: true
    email?: true
    bookingId?: true
    currentStatus?: true
    source?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    lastInteraction?: true
    threadId?: true
    wspLabels?: true
    totalBookings?: true
    totalValue?: true
    automationEnabled?: true
    internalNotes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CRMAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CRM to aggregate.
     */
    where?: CRMWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CRMS to fetch.
     */
    orderBy?: CRMOrderByWithRelationInput | CRMOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CRMWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CRMS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CRMS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CRMS
    **/
    _count?: true | CRMCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CRMAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CRMSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CRMMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CRMMaxAggregateInputType
  }

  export type GetCRMAggregateType<T extends CRMAggregateArgs> = {
        [P in keyof T & keyof AggregateCRM]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCRM[P]>
      : GetScalarType<T[P], AggregateCRM[P]>
  }




  export type CRMGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CRMWhereInput
    orderBy?: CRMOrderByWithAggregationInput | CRMOrderByWithAggregationInput[]
    by: CRMScalarFieldEnum[] | CRMScalarFieldEnum
    having?: CRMScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CRMCountAggregateInputType | true
    _avg?: CRMAvgAggregateInputType
    _sum?: CRMSumAggregateInputType
    _min?: CRMMinAggregateInputType
    _max?: CRMMaxAggregateInputType
  }

  export type CRMGroupByOutputType = {
    id: number
    phoneNumber: string
    clientName: string | null
    email: string | null
    bookingId: string | null
    currentStatus: string | null
    source: string | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
    propertyName: string | null
    arrivalDate: Date | null
    departureDate: Date | null
    lastInteraction: Date | null
    threadId: string | null
    wspLabels: string | null
    totalBookings: number
    totalValue: number | null
    automationEnabled: boolean
    internalNotes: string | null
    createdAt: Date
    updatedAt: Date
    _count: CRMCountAggregateOutputType | null
    _avg: CRMAvgAggregateOutputType | null
    _sum: CRMSumAggregateOutputType | null
    _min: CRMMinAggregateOutputType | null
    _max: CRMMaxAggregateOutputType | null
  }

  type GetCRMGroupByPayload<T extends CRMGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CRMGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CRMGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CRMGroupByOutputType[P]>
            : GetScalarType<T[P], CRMGroupByOutputType[P]>
        }
      >
    >


  export type CRMSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phoneNumber?: boolean
    clientName?: boolean
    email?: boolean
    bookingId?: boolean
    currentStatus?: boolean
    source?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    lastInteraction?: boolean
    threadId?: boolean
    wspLabels?: boolean
    totalBookings?: boolean
    totalValue?: boolean
    automationEnabled?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["cRM"]>

  export type CRMSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phoneNumber?: boolean
    clientName?: boolean
    email?: boolean
    bookingId?: boolean
    currentStatus?: boolean
    source?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    lastInteraction?: boolean
    threadId?: boolean
    wspLabels?: boolean
    totalBookings?: boolean
    totalValue?: boolean
    automationEnabled?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["cRM"]>

  export type CRMSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phoneNumber?: boolean
    clientName?: boolean
    email?: boolean
    bookingId?: boolean
    currentStatus?: boolean
    source?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    lastInteraction?: boolean
    threadId?: boolean
    wspLabels?: boolean
    totalBookings?: boolean
    totalValue?: boolean
    automationEnabled?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["cRM"]>

  export type CRMSelectScalar = {
    id?: boolean
    phoneNumber?: boolean
    clientName?: boolean
    email?: boolean
    bookingId?: boolean
    currentStatus?: boolean
    source?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    lastInteraction?: boolean
    threadId?: boolean
    wspLabels?: boolean
    totalBookings?: boolean
    totalValue?: boolean
    automationEnabled?: boolean
    internalNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CRMOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "phoneNumber" | "clientName" | "email" | "bookingId" | "currentStatus" | "source" | "profileStatus" | "proximaAccion" | "fechaProximaAccion" | "prioridad" | "propertyName" | "arrivalDate" | "departureDate" | "lastInteraction" | "threadId" | "wspLabels" | "totalBookings" | "totalValue" | "automationEnabled" | "internalNotes" | "createdAt" | "updatedAt", ExtArgs["result"]["cRM"]>

  export type $CRMPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CRM"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      phoneNumber: string
      clientName: string | null
      email: string | null
      bookingId: string | null
      currentStatus: string | null
      source: string | null
      profileStatus: string | null
      proximaAccion: string | null
      fechaProximaAccion: Date | null
      prioridad: number | null
      propertyName: string | null
      arrivalDate: Date | null
      departureDate: Date | null
      lastInteraction: Date | null
      threadId: string | null
      wspLabels: string | null
      totalBookings: number
      totalValue: number | null
      automationEnabled: boolean
      internalNotes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cRM"]>
    composites: {}
  }

  type CRMGetPayload<S extends boolean | null | undefined | CRMDefaultArgs> = $Result.GetResult<Prisma.$CRMPayload, S>

  type CRMCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CRMFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CRMCountAggregateInputType | true
    }

  export interface CRMDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CRM'], meta: { name: 'CRM' } }
    /**
     * Find zero or one CRM that matches the filter.
     * @param {CRMFindUniqueArgs} args - Arguments to find a CRM
     * @example
     * // Get one CRM
     * const cRM = await prisma.cRM.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CRMFindUniqueArgs>(args: SelectSubset<T, CRMFindUniqueArgs<ExtArgs>>): Prisma__CRMClient<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CRM that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CRMFindUniqueOrThrowArgs} args - Arguments to find a CRM
     * @example
     * // Get one CRM
     * const cRM = await prisma.cRM.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CRMFindUniqueOrThrowArgs>(args: SelectSubset<T, CRMFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CRMClient<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CRM that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CRMFindFirstArgs} args - Arguments to find a CRM
     * @example
     * // Get one CRM
     * const cRM = await prisma.cRM.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CRMFindFirstArgs>(args?: SelectSubset<T, CRMFindFirstArgs<ExtArgs>>): Prisma__CRMClient<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CRM that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CRMFindFirstOrThrowArgs} args - Arguments to find a CRM
     * @example
     * // Get one CRM
     * const cRM = await prisma.cRM.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CRMFindFirstOrThrowArgs>(args?: SelectSubset<T, CRMFindFirstOrThrowArgs<ExtArgs>>): Prisma__CRMClient<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CRMS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CRMFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CRMS
     * const cRMS = await prisma.cRM.findMany()
     * 
     * // Get first 10 CRMS
     * const cRMS = await prisma.cRM.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cRMWithIdOnly = await prisma.cRM.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CRMFindManyArgs>(args?: SelectSubset<T, CRMFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CRM.
     * @param {CRMCreateArgs} args - Arguments to create a CRM.
     * @example
     * // Create one CRM
     * const CRM = await prisma.cRM.create({
     *   data: {
     *     // ... data to create a CRM
     *   }
     * })
     * 
     */
    create<T extends CRMCreateArgs>(args: SelectSubset<T, CRMCreateArgs<ExtArgs>>): Prisma__CRMClient<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CRMS.
     * @param {CRMCreateManyArgs} args - Arguments to create many CRMS.
     * @example
     * // Create many CRMS
     * const cRM = await prisma.cRM.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CRMCreateManyArgs>(args?: SelectSubset<T, CRMCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CRMS and returns the data saved in the database.
     * @param {CRMCreateManyAndReturnArgs} args - Arguments to create many CRMS.
     * @example
     * // Create many CRMS
     * const cRM = await prisma.cRM.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CRMS and only return the `id`
     * const cRMWithIdOnly = await prisma.cRM.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CRMCreateManyAndReturnArgs>(args?: SelectSubset<T, CRMCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CRM.
     * @param {CRMDeleteArgs} args - Arguments to delete one CRM.
     * @example
     * // Delete one CRM
     * const CRM = await prisma.cRM.delete({
     *   where: {
     *     // ... filter to delete one CRM
     *   }
     * })
     * 
     */
    delete<T extends CRMDeleteArgs>(args: SelectSubset<T, CRMDeleteArgs<ExtArgs>>): Prisma__CRMClient<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CRM.
     * @param {CRMUpdateArgs} args - Arguments to update one CRM.
     * @example
     * // Update one CRM
     * const cRM = await prisma.cRM.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CRMUpdateArgs>(args: SelectSubset<T, CRMUpdateArgs<ExtArgs>>): Prisma__CRMClient<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CRMS.
     * @param {CRMDeleteManyArgs} args - Arguments to filter CRMS to delete.
     * @example
     * // Delete a few CRMS
     * const { count } = await prisma.cRM.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CRMDeleteManyArgs>(args?: SelectSubset<T, CRMDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CRMS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CRMUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CRMS
     * const cRM = await prisma.cRM.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CRMUpdateManyArgs>(args: SelectSubset<T, CRMUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CRMS and returns the data updated in the database.
     * @param {CRMUpdateManyAndReturnArgs} args - Arguments to update many CRMS.
     * @example
     * // Update many CRMS
     * const cRM = await prisma.cRM.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CRMS and only return the `id`
     * const cRMWithIdOnly = await prisma.cRM.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CRMUpdateManyAndReturnArgs>(args: SelectSubset<T, CRMUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CRM.
     * @param {CRMUpsertArgs} args - Arguments to update or create a CRM.
     * @example
     * // Update or create a CRM
     * const cRM = await prisma.cRM.upsert({
     *   create: {
     *     // ... data to create a CRM
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CRM we want to update
     *   }
     * })
     */
    upsert<T extends CRMUpsertArgs>(args: SelectSubset<T, CRMUpsertArgs<ExtArgs>>): Prisma__CRMClient<$Result.GetResult<Prisma.$CRMPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CRMS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CRMCountArgs} args - Arguments to filter CRMS to count.
     * @example
     * // Count the number of CRMS
     * const count = await prisma.cRM.count({
     *   where: {
     *     // ... the filter for the CRMS we want to count
     *   }
     * })
    **/
    count<T extends CRMCountArgs>(
      args?: Subset<T, CRMCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CRMCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CRM.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CRMAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CRMAggregateArgs>(args: Subset<T, CRMAggregateArgs>): Prisma.PrismaPromise<GetCRMAggregateType<T>>

    /**
     * Group by CRM.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CRMGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CRMGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CRMGroupByArgs['orderBy'] }
        : { orderBy?: CRMGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CRMGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCRMGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CRM model
   */
  readonly fields: CRMFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CRM.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CRMClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CRM model
   */
  interface CRMFieldRefs {
    readonly id: FieldRef<"CRM", 'Int'>
    readonly phoneNumber: FieldRef<"CRM", 'String'>
    readonly clientName: FieldRef<"CRM", 'String'>
    readonly email: FieldRef<"CRM", 'String'>
    readonly bookingId: FieldRef<"CRM", 'String'>
    readonly currentStatus: FieldRef<"CRM", 'String'>
    readonly source: FieldRef<"CRM", 'String'>
    readonly profileStatus: FieldRef<"CRM", 'String'>
    readonly proximaAccion: FieldRef<"CRM", 'String'>
    readonly fechaProximaAccion: FieldRef<"CRM", 'DateTime'>
    readonly prioridad: FieldRef<"CRM", 'Int'>
    readonly propertyName: FieldRef<"CRM", 'String'>
    readonly arrivalDate: FieldRef<"CRM", 'DateTime'>
    readonly departureDate: FieldRef<"CRM", 'DateTime'>
    readonly lastInteraction: FieldRef<"CRM", 'DateTime'>
    readonly threadId: FieldRef<"CRM", 'String'>
    readonly wspLabels: FieldRef<"CRM", 'String'>
    readonly totalBookings: FieldRef<"CRM", 'Int'>
    readonly totalValue: FieldRef<"CRM", 'Int'>
    readonly automationEnabled: FieldRef<"CRM", 'Boolean'>
    readonly internalNotes: FieldRef<"CRM", 'String'>
    readonly createdAt: FieldRef<"CRM", 'DateTime'>
    readonly updatedAt: FieldRef<"CRM", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CRM findUnique
   */
  export type CRMFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * Filter, which CRM to fetch.
     */
    where: CRMWhereUniqueInput
  }

  /**
   * CRM findUniqueOrThrow
   */
  export type CRMFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * Filter, which CRM to fetch.
     */
    where: CRMWhereUniqueInput
  }

  /**
   * CRM findFirst
   */
  export type CRMFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * Filter, which CRM to fetch.
     */
    where?: CRMWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CRMS to fetch.
     */
    orderBy?: CRMOrderByWithRelationInput | CRMOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CRMS.
     */
    cursor?: CRMWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CRMS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CRMS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CRMS.
     */
    distinct?: CRMScalarFieldEnum | CRMScalarFieldEnum[]
  }

  /**
   * CRM findFirstOrThrow
   */
  export type CRMFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * Filter, which CRM to fetch.
     */
    where?: CRMWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CRMS to fetch.
     */
    orderBy?: CRMOrderByWithRelationInput | CRMOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CRMS.
     */
    cursor?: CRMWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CRMS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CRMS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CRMS.
     */
    distinct?: CRMScalarFieldEnum | CRMScalarFieldEnum[]
  }

  /**
   * CRM findMany
   */
  export type CRMFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * Filter, which CRMS to fetch.
     */
    where?: CRMWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CRMS to fetch.
     */
    orderBy?: CRMOrderByWithRelationInput | CRMOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CRMS.
     */
    cursor?: CRMWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CRMS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CRMS.
     */
    skip?: number
    distinct?: CRMScalarFieldEnum | CRMScalarFieldEnum[]
  }

  /**
   * CRM create
   */
  export type CRMCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * The data needed to create a CRM.
     */
    data: XOR<CRMCreateInput, CRMUncheckedCreateInput>
  }

  /**
   * CRM createMany
   */
  export type CRMCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CRMS.
     */
    data: CRMCreateManyInput | CRMCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CRM createManyAndReturn
   */
  export type CRMCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * The data used to create many CRMS.
     */
    data: CRMCreateManyInput | CRMCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CRM update
   */
  export type CRMUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * The data needed to update a CRM.
     */
    data: XOR<CRMUpdateInput, CRMUncheckedUpdateInput>
    /**
     * Choose, which CRM to update.
     */
    where: CRMWhereUniqueInput
  }

  /**
   * CRM updateMany
   */
  export type CRMUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CRMS.
     */
    data: XOR<CRMUpdateManyMutationInput, CRMUncheckedUpdateManyInput>
    /**
     * Filter which CRMS to update
     */
    where?: CRMWhereInput
    /**
     * Limit how many CRMS to update.
     */
    limit?: number
  }

  /**
   * CRM updateManyAndReturn
   */
  export type CRMUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * The data used to update CRMS.
     */
    data: XOR<CRMUpdateManyMutationInput, CRMUncheckedUpdateManyInput>
    /**
     * Filter which CRMS to update
     */
    where?: CRMWhereInput
    /**
     * Limit how many CRMS to update.
     */
    limit?: number
  }

  /**
   * CRM upsert
   */
  export type CRMUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * The filter to search for the CRM to update in case it exists.
     */
    where: CRMWhereUniqueInput
    /**
     * In case the CRM found by the `where` argument doesn't exist, create a new CRM with this data.
     */
    create: XOR<CRMCreateInput, CRMUncheckedCreateInput>
    /**
     * In case the CRM was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CRMUpdateInput, CRMUncheckedUpdateInput>
  }

  /**
   * CRM delete
   */
  export type CRMDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
    /**
     * Filter which CRM to delete.
     */
    where: CRMWhereUniqueInput
  }

  /**
   * CRM deleteMany
   */
  export type CRMDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CRMS to delete
     */
    where?: CRMWhereInput
    /**
     * Limit how many CRMS to delete.
     */
    limit?: number
  }

  /**
   * CRM without action
   */
  export type CRMDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CRM
     */
    select?: CRMSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CRM
     */
    omit?: CRMOmit<ExtArgs> | null
  }


  /**
   * Model Clientes
   */

  export type AggregateClientes = {
    _count: ClientesCountAggregateOutputType | null
    _avg: ClientesAvgAggregateOutputType | null
    _sum: ClientesSumAggregateOutputType | null
    _min: ClientesMinAggregateOutputType | null
    _max: ClientesMaxAggregateOutputType | null
  }

  export type ClientesAvgAggregateOutputType = {
    id: number | null
    totalBookings: number | null
    confirmedBookings: number | null
    pendingBookings: number | null
    cancelledBookings: number | null
    totalSpent: Decimal | null
    syncErrors: number | null
  }

  export type ClientesSumAggregateOutputType = {
    id: number | null
    totalBookings: number | null
    confirmedBookings: number | null
    pendingBookings: number | null
    cancelledBookings: number | null
    totalSpent: Decimal | null
    syncErrors: number | null
  }

  export type ClientesMinAggregateOutputType = {
    id: number | null
    phoneNumber: string | null
    name: string | null
    email: string | null
    whatsappChatId: string | null
    whatsappLabels: string | null
    lastWhatsappMsg: Date | null
    hasWhatsapp: boolean | null
    totalBookings: number | null
    confirmedBookings: number | null
    pendingBookings: number | null
    cancelledBookings: number | null
    lastCheckIn: Date | null
    nextCheckIn: Date | null
    totalSpent: Decimal | null
    lastActivity: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    syncErrors: number | null
  }

  export type ClientesMaxAggregateOutputType = {
    id: number | null
    phoneNumber: string | null
    name: string | null
    email: string | null
    whatsappChatId: string | null
    whatsappLabels: string | null
    lastWhatsappMsg: Date | null
    hasWhatsapp: boolean | null
    totalBookings: number | null
    confirmedBookings: number | null
    pendingBookings: number | null
    cancelledBookings: number | null
    lastCheckIn: Date | null
    nextCheckIn: Date | null
    totalSpent: Decimal | null
    lastActivity: Date | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    syncErrors: number | null
  }

  export type ClientesCountAggregateOutputType = {
    id: number
    phoneNumber: number
    name: number
    email: number
    whatsappChatId: number
    whatsappLabels: number
    lastWhatsappMsg: number
    hasWhatsapp: number
    totalBookings: number
    confirmedBookings: number
    pendingBookings: number
    cancelledBookings: number
    lastCheckIn: number
    nextCheckIn: number
    totalSpent: number
    lastActivity: number
    source: number
    status: number
    createdAt: number
    updatedAt: number
    syncErrors: number
    _all: number
  }


  export type ClientesAvgAggregateInputType = {
    id?: true
    totalBookings?: true
    confirmedBookings?: true
    pendingBookings?: true
    cancelledBookings?: true
    totalSpent?: true
    syncErrors?: true
  }

  export type ClientesSumAggregateInputType = {
    id?: true
    totalBookings?: true
    confirmedBookings?: true
    pendingBookings?: true
    cancelledBookings?: true
    totalSpent?: true
    syncErrors?: true
  }

  export type ClientesMinAggregateInputType = {
    id?: true
    phoneNumber?: true
    name?: true
    email?: true
    whatsappChatId?: true
    whatsappLabels?: true
    lastWhatsappMsg?: true
    hasWhatsapp?: true
    totalBookings?: true
    confirmedBookings?: true
    pendingBookings?: true
    cancelledBookings?: true
    lastCheckIn?: true
    nextCheckIn?: true
    totalSpent?: true
    lastActivity?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    syncErrors?: true
  }

  export type ClientesMaxAggregateInputType = {
    id?: true
    phoneNumber?: true
    name?: true
    email?: true
    whatsappChatId?: true
    whatsappLabels?: true
    lastWhatsappMsg?: true
    hasWhatsapp?: true
    totalBookings?: true
    confirmedBookings?: true
    pendingBookings?: true
    cancelledBookings?: true
    lastCheckIn?: true
    nextCheckIn?: true
    totalSpent?: true
    lastActivity?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    syncErrors?: true
  }

  export type ClientesCountAggregateInputType = {
    id?: true
    phoneNumber?: true
    name?: true
    email?: true
    whatsappChatId?: true
    whatsappLabels?: true
    lastWhatsappMsg?: true
    hasWhatsapp?: true
    totalBookings?: true
    confirmedBookings?: true
    pendingBookings?: true
    cancelledBookings?: true
    lastCheckIn?: true
    nextCheckIn?: true
    totalSpent?: true
    lastActivity?: true
    source?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    syncErrors?: true
    _all?: true
  }

  export type ClientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to aggregate.
     */
    where?: ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClientesOrderByWithRelationInput | ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientesMaxAggregateInputType
  }

  export type GetClientesAggregateType<T extends ClientesAggregateArgs> = {
        [P in keyof T & keyof AggregateClientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientes[P]>
      : GetScalarType<T[P], AggregateClientes[P]>
  }




  export type ClientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientesWhereInput
    orderBy?: ClientesOrderByWithAggregationInput | ClientesOrderByWithAggregationInput[]
    by: ClientesScalarFieldEnum[] | ClientesScalarFieldEnum
    having?: ClientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientesCountAggregateInputType | true
    _avg?: ClientesAvgAggregateInputType
    _sum?: ClientesSumAggregateInputType
    _min?: ClientesMinAggregateInputType
    _max?: ClientesMaxAggregateInputType
  }

  export type ClientesGroupByOutputType = {
    id: number
    phoneNumber: string
    name: string | null
    email: string | null
    whatsappChatId: string | null
    whatsappLabels: string | null
    lastWhatsappMsg: Date | null
    hasWhatsapp: boolean
    totalBookings: number
    confirmedBookings: number
    pendingBookings: number
    cancelledBookings: number
    lastCheckIn: Date | null
    nextCheckIn: Date | null
    totalSpent: Decimal
    lastActivity: Date | null
    source: string[]
    status: string
    createdAt: Date
    updatedAt: Date
    syncErrors: number
    _count: ClientesCountAggregateOutputType | null
    _avg: ClientesAvgAggregateOutputType | null
    _sum: ClientesSumAggregateOutputType | null
    _min: ClientesMinAggregateOutputType | null
    _max: ClientesMaxAggregateOutputType | null
  }

  type GetClientesGroupByPayload<T extends ClientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientesGroupByOutputType[P]>
            : GetScalarType<T[P], ClientesGroupByOutputType[P]>
        }
      >
    >


  export type ClientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phoneNumber?: boolean
    name?: boolean
    email?: boolean
    whatsappChatId?: boolean
    whatsappLabels?: boolean
    lastWhatsappMsg?: boolean
    hasWhatsapp?: boolean
    totalBookings?: boolean
    confirmedBookings?: boolean
    pendingBookings?: boolean
    cancelledBookings?: boolean
    lastCheckIn?: boolean
    nextCheckIn?: boolean
    totalSpent?: boolean
    lastActivity?: boolean
    source?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    syncErrors?: boolean
  }, ExtArgs["result"]["clientes"]>

  export type ClientesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phoneNumber?: boolean
    name?: boolean
    email?: boolean
    whatsappChatId?: boolean
    whatsappLabels?: boolean
    lastWhatsappMsg?: boolean
    hasWhatsapp?: boolean
    totalBookings?: boolean
    confirmedBookings?: boolean
    pendingBookings?: boolean
    cancelledBookings?: boolean
    lastCheckIn?: boolean
    nextCheckIn?: boolean
    totalSpent?: boolean
    lastActivity?: boolean
    source?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    syncErrors?: boolean
  }, ExtArgs["result"]["clientes"]>

  export type ClientesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phoneNumber?: boolean
    name?: boolean
    email?: boolean
    whatsappChatId?: boolean
    whatsappLabels?: boolean
    lastWhatsappMsg?: boolean
    hasWhatsapp?: boolean
    totalBookings?: boolean
    confirmedBookings?: boolean
    pendingBookings?: boolean
    cancelledBookings?: boolean
    lastCheckIn?: boolean
    nextCheckIn?: boolean
    totalSpent?: boolean
    lastActivity?: boolean
    source?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    syncErrors?: boolean
  }, ExtArgs["result"]["clientes"]>

  export type ClientesSelectScalar = {
    id?: boolean
    phoneNumber?: boolean
    name?: boolean
    email?: boolean
    whatsappChatId?: boolean
    whatsappLabels?: boolean
    lastWhatsappMsg?: boolean
    hasWhatsapp?: boolean
    totalBookings?: boolean
    confirmedBookings?: boolean
    pendingBookings?: boolean
    cancelledBookings?: boolean
    lastCheckIn?: boolean
    nextCheckIn?: boolean
    totalSpent?: boolean
    lastActivity?: boolean
    source?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    syncErrors?: boolean
  }

  export type ClientesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "phoneNumber" | "name" | "email" | "whatsappChatId" | "whatsappLabels" | "lastWhatsappMsg" | "hasWhatsapp" | "totalBookings" | "confirmedBookings" | "pendingBookings" | "cancelledBookings" | "lastCheckIn" | "nextCheckIn" | "totalSpent" | "lastActivity" | "source" | "status" | "createdAt" | "updatedAt" | "syncErrors", ExtArgs["result"]["clientes"]>

  export type $ClientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Clientes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      phoneNumber: string
      name: string | null
      email: string | null
      whatsappChatId: string | null
      whatsappLabels: string | null
      lastWhatsappMsg: Date | null
      hasWhatsapp: boolean
      totalBookings: number
      confirmedBookings: number
      pendingBookings: number
      cancelledBookings: number
      lastCheckIn: Date | null
      nextCheckIn: Date | null
      totalSpent: Prisma.Decimal
      lastActivity: Date | null
      source: string[]
      status: string
      createdAt: Date
      updatedAt: Date
      syncErrors: number
    }, ExtArgs["result"]["clientes"]>
    composites: {}
  }

  type ClientesGetPayload<S extends boolean | null | undefined | ClientesDefaultArgs> = $Result.GetResult<Prisma.$ClientesPayload, S>

  type ClientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientesCountAggregateInputType | true
    }

  export interface ClientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Clientes'], meta: { name: 'Clientes' } }
    /**
     * Find zero or one Clientes that matches the filter.
     * @param {ClientesFindUniqueArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientesFindUniqueArgs>(args: SelectSubset<T, ClientesFindUniqueArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Clientes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientesFindUniqueOrThrowArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientesFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesFindFirstArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientesFindFirstArgs>(args?: SelectSubset<T, ClientesFindFirstArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesFindFirstOrThrowArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientesFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientesFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.clientes.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.clientes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientesWithIdOnly = await prisma.clientes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientesFindManyArgs>(args?: SelectSubset<T, ClientesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Clientes.
     * @param {ClientesCreateArgs} args - Arguments to create a Clientes.
     * @example
     * // Create one Clientes
     * const Clientes = await prisma.clientes.create({
     *   data: {
     *     // ... data to create a Clientes
     *   }
     * })
     * 
     */
    create<T extends ClientesCreateArgs>(args: SelectSubset<T, ClientesCreateArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clientes.
     * @param {ClientesCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const clientes = await prisma.clientes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientesCreateManyArgs>(args?: SelectSubset<T, ClientesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {ClientesCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const clientes = await prisma.clientes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `id`
     * const clientesWithIdOnly = await prisma.clientes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientesCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Clientes.
     * @param {ClientesDeleteArgs} args - Arguments to delete one Clientes.
     * @example
     * // Delete one Clientes
     * const Clientes = await prisma.clientes.delete({
     *   where: {
     *     // ... filter to delete one Clientes
     *   }
     * })
     * 
     */
    delete<T extends ClientesDeleteArgs>(args: SelectSubset<T, ClientesDeleteArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Clientes.
     * @param {ClientesUpdateArgs} args - Arguments to update one Clientes.
     * @example
     * // Update one Clientes
     * const clientes = await prisma.clientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientesUpdateArgs>(args: SelectSubset<T, ClientesUpdateArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clientes.
     * @param {ClientesDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.clientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientesDeleteManyArgs>(args?: SelectSubset<T, ClientesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const clientes = await prisma.clientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientesUpdateManyArgs>(args: SelectSubset<T, ClientesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes and returns the data updated in the database.
     * @param {ClientesUpdateManyAndReturnArgs} args - Arguments to update many Clientes.
     * @example
     * // Update many Clientes
     * const clientes = await prisma.clientes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clientes and only return the `id`
     * const clientesWithIdOnly = await prisma.clientes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientesUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Clientes.
     * @param {ClientesUpsertArgs} args - Arguments to update or create a Clientes.
     * @example
     * // Update or create a Clientes
     * const clientes = await prisma.clientes.upsert({
     *   create: {
     *     // ... data to create a Clientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Clientes we want to update
     *   }
     * })
     */
    upsert<T extends ClientesUpsertArgs>(args: SelectSubset<T, ClientesUpsertArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.clientes.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClientesCountArgs>(
      args?: Subset<T, ClientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientesAggregateArgs>(args: Subset<T, ClientesAggregateArgs>): Prisma.PrismaPromise<GetClientesAggregateType<T>>

    /**
     * Group by Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientesGroupByArgs['orderBy'] }
        : { orderBy?: ClientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Clientes model
   */
  readonly fields: ClientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Clientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Clientes model
   */
  interface ClientesFieldRefs {
    readonly id: FieldRef<"Clientes", 'Int'>
    readonly phoneNumber: FieldRef<"Clientes", 'String'>
    readonly name: FieldRef<"Clientes", 'String'>
    readonly email: FieldRef<"Clientes", 'String'>
    readonly whatsappChatId: FieldRef<"Clientes", 'String'>
    readonly whatsappLabels: FieldRef<"Clientes", 'String'>
    readonly lastWhatsappMsg: FieldRef<"Clientes", 'DateTime'>
    readonly hasWhatsapp: FieldRef<"Clientes", 'Boolean'>
    readonly totalBookings: FieldRef<"Clientes", 'Int'>
    readonly confirmedBookings: FieldRef<"Clientes", 'Int'>
    readonly pendingBookings: FieldRef<"Clientes", 'Int'>
    readonly cancelledBookings: FieldRef<"Clientes", 'Int'>
    readonly lastCheckIn: FieldRef<"Clientes", 'DateTime'>
    readonly nextCheckIn: FieldRef<"Clientes", 'DateTime'>
    readonly totalSpent: FieldRef<"Clientes", 'Decimal'>
    readonly lastActivity: FieldRef<"Clientes", 'DateTime'>
    readonly source: FieldRef<"Clientes", 'String[]'>
    readonly status: FieldRef<"Clientes", 'String'>
    readonly createdAt: FieldRef<"Clientes", 'DateTime'>
    readonly updatedAt: FieldRef<"Clientes", 'DateTime'>
    readonly syncErrors: FieldRef<"Clientes", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Clientes findUnique
   */
  export type ClientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where: ClientesWhereUniqueInput
  }

  /**
   * Clientes findUniqueOrThrow
   */
  export type ClientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where: ClientesWhereUniqueInput
  }

  /**
   * Clientes findFirst
   */
  export type ClientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClientesOrderByWithRelationInput | ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * Clientes findFirstOrThrow
   */
  export type ClientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClientesOrderByWithRelationInput | ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * Clientes findMany
   */
  export type ClientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClientesOrderByWithRelationInput | ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * Clientes create
   */
  export type ClientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * The data needed to create a Clientes.
     */
    data: XOR<ClientesCreateInput, ClientesUncheckedCreateInput>
  }

  /**
   * Clientes createMany
   */
  export type ClientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClientesCreateManyInput | ClientesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Clientes createManyAndReturn
   */
  export type ClientesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * The data used to create many Clientes.
     */
    data: ClientesCreateManyInput | ClientesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Clientes update
   */
  export type ClientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * The data needed to update a Clientes.
     */
    data: XOR<ClientesUpdateInput, ClientesUncheckedUpdateInput>
    /**
     * Choose, which Clientes to update.
     */
    where: ClientesWhereUniqueInput
  }

  /**
   * Clientes updateMany
   */
  export type ClientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClientesUpdateManyMutationInput, ClientesUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClientesWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Clientes updateManyAndReturn
   */
  export type ClientesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClientesUpdateManyMutationInput, ClientesUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClientesWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Clientes upsert
   */
  export type ClientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * The filter to search for the Clientes to update in case it exists.
     */
    where: ClientesWhereUniqueInput
    /**
     * In case the Clientes found by the `where` argument doesn't exist, create a new Clientes with this data.
     */
    create: XOR<ClientesCreateInput, ClientesUncheckedCreateInput>
    /**
     * In case the Clientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientesUpdateInput, ClientesUncheckedUpdateInput>
  }

  /**
   * Clientes delete
   */
  export type ClientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
    /**
     * Filter which Clientes to delete.
     */
    where: ClientesWhereUniqueInput
  }

  /**
   * Clientes deleteMany
   */
  export type ClientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClientesWhereInput
    /**
     * Limit how many Clientes to delete.
     */
    limit?: number
  }

  /**
   * Clientes without action
   */
  export type ClientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clientes
     */
    omit?: ClientesOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ChatsScalarFieldEnum: {
    phoneNumber: 'phoneNumber',
    name: 'name',
    userName: 'userName',
    labels: 'labels',
    chatId: 'chatId',
    lastActivity: 'lastActivity',
    threadId: 'threadId',
    threadTokenCount: 'threadTokenCount'
  };

  export type ChatsScalarFieldEnum = (typeof ChatsScalarFieldEnum)[keyof typeof ChatsScalarFieldEnum]


  export const PropiedadesScalarFieldEnum: {
    id: 'id',
    propertyId: 'propertyId',
    roomId: 'roomId',
    roomName: 'roomName',
    extraCharge: 'extraCharge',
    capacity: 'capacity'
  };

  export type PropiedadesScalarFieldEnum = (typeof PropiedadesScalarFieldEnum)[keyof typeof PropiedadesScalarFieldEnum]


  export const ReservasScalarFieldEnum: {
    id: 'id',
    bookingId: 'bookingId',
    phone: 'phone',
    guestName: 'guestName',
    status: 'status',
    internalNotes: 'internalNotes',
    propertyName: 'propertyName',
    arrivalDate: 'arrivalDate',
    departureDate: 'departureDate',
    numNights: 'numNights',
    totalPersons: 'totalPersons',
    totalCharges: 'totalCharges',
    totalPayments: 'totalPayments',
    balance: 'balance',
    basePrice: 'basePrice',
    channel: 'channel',
    email: 'email',
    apiReference: 'apiReference',
    charges: 'charges',
    payments: 'payments',
    messages: 'messages',
    infoItems: 'infoItems',
    notes: 'notes',
    bookingDate: 'bookingDate',
    modifiedDate: 'modifiedDate',
    lastUpdatedBD: 'lastUpdatedBD',
    raw: 'raw',
    BDStatus: 'BDStatus'
  };

  export type ReservasScalarFieldEnum = (typeof ReservasScalarFieldEnum)[keyof typeof ReservasScalarFieldEnum]


  export const OportunidadesScalarFieldEnum: {
    id: 'id',
    bookingId: 'bookingId',
    guestName: 'guestName',
    phone: 'phone',
    propertyName: 'propertyName',
    arrivalDate: 'arrivalDate',
    departureDate: 'departureDate',
    numNights: 'numNights',
    totalPersons: 'totalPersons',
    channel: 'channel',
    createdAt: 'createdAt'
  };

  export type OportunidadesScalarFieldEnum = (typeof OportunidadesScalarFieldEnum)[keyof typeof OportunidadesScalarFieldEnum]


  export const CRMScalarFieldEnum: {
    id: 'id',
    phoneNumber: 'phoneNumber',
    clientName: 'clientName',
    email: 'email',
    bookingId: 'bookingId',
    currentStatus: 'currentStatus',
    source: 'source',
    profileStatus: 'profileStatus',
    proximaAccion: 'proximaAccion',
    fechaProximaAccion: 'fechaProximaAccion',
    prioridad: 'prioridad',
    propertyName: 'propertyName',
    arrivalDate: 'arrivalDate',
    departureDate: 'departureDate',
    lastInteraction: 'lastInteraction',
    threadId: 'threadId',
    wspLabels: 'wspLabels',
    totalBookings: 'totalBookings',
    totalValue: 'totalValue',
    automationEnabled: 'automationEnabled',
    internalNotes: 'internalNotes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CRMScalarFieldEnum = (typeof CRMScalarFieldEnum)[keyof typeof CRMScalarFieldEnum]


  export const ClientesScalarFieldEnum: {
    id: 'id',
    phoneNumber: 'phoneNumber',
    name: 'name',
    email: 'email',
    whatsappChatId: 'whatsappChatId',
    whatsappLabels: 'whatsappLabels',
    lastWhatsappMsg: 'lastWhatsappMsg',
    hasWhatsapp: 'hasWhatsapp',
    totalBookings: 'totalBookings',
    confirmedBookings: 'confirmedBookings',
    pendingBookings: 'pendingBookings',
    cancelledBookings: 'cancelledBookings',
    lastCheckIn: 'lastCheckIn',
    nextCheckIn: 'nextCheckIn',
    totalSpent: 'totalSpent',
    lastActivity: 'lastActivity',
    source: 'source',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    syncErrors: 'syncErrors'
  };

  export type ClientesScalarFieldEnum = (typeof ClientesScalarFieldEnum)[keyof typeof ClientesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type ChatsWhereInput = {
    AND?: ChatsWhereInput | ChatsWhereInput[]
    OR?: ChatsWhereInput[]
    NOT?: ChatsWhereInput | ChatsWhereInput[]
    phoneNumber?: StringFilter<"Chats"> | string
    name?: StringNullableFilter<"Chats"> | string | null
    userName?: StringNullableFilter<"Chats"> | string | null
    labels?: StringNullableFilter<"Chats"> | string | null
    chatId?: StringNullableFilter<"Chats"> | string | null
    lastActivity?: DateTimeFilter<"Chats"> | Date | string
    threadId?: StringNullableFilter<"Chats"> | string | null
    threadTokenCount?: IntNullableFilter<"Chats"> | number | null
  }

  export type ChatsOrderByWithRelationInput = {
    phoneNumber?: SortOrder
    name?: SortOrderInput | SortOrder
    userName?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    chatId?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrderInput | SortOrder
    threadTokenCount?: SortOrderInput | SortOrder
  }

  export type ChatsWhereUniqueInput = Prisma.AtLeast<{
    phoneNumber?: string
    chatId?: string
    AND?: ChatsWhereInput | ChatsWhereInput[]
    OR?: ChatsWhereInput[]
    NOT?: ChatsWhereInput | ChatsWhereInput[]
    name?: StringNullableFilter<"Chats"> | string | null
    userName?: StringNullableFilter<"Chats"> | string | null
    labels?: StringNullableFilter<"Chats"> | string | null
    lastActivity?: DateTimeFilter<"Chats"> | Date | string
    threadId?: StringNullableFilter<"Chats"> | string | null
    threadTokenCount?: IntNullableFilter<"Chats"> | number | null
  }, "phoneNumber" | "chatId">

  export type ChatsOrderByWithAggregationInput = {
    phoneNumber?: SortOrder
    name?: SortOrderInput | SortOrder
    userName?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    chatId?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrderInput | SortOrder
    threadTokenCount?: SortOrderInput | SortOrder
    _count?: ChatsCountOrderByAggregateInput
    _avg?: ChatsAvgOrderByAggregateInput
    _max?: ChatsMaxOrderByAggregateInput
    _min?: ChatsMinOrderByAggregateInput
    _sum?: ChatsSumOrderByAggregateInput
  }

  export type ChatsScalarWhereWithAggregatesInput = {
    AND?: ChatsScalarWhereWithAggregatesInput | ChatsScalarWhereWithAggregatesInput[]
    OR?: ChatsScalarWhereWithAggregatesInput[]
    NOT?: ChatsScalarWhereWithAggregatesInput | ChatsScalarWhereWithAggregatesInput[]
    phoneNumber?: StringWithAggregatesFilter<"Chats"> | string
    name?: StringNullableWithAggregatesFilter<"Chats"> | string | null
    userName?: StringNullableWithAggregatesFilter<"Chats"> | string | null
    labels?: StringNullableWithAggregatesFilter<"Chats"> | string | null
    chatId?: StringNullableWithAggregatesFilter<"Chats"> | string | null
    lastActivity?: DateTimeWithAggregatesFilter<"Chats"> | Date | string
    threadId?: StringNullableWithAggregatesFilter<"Chats"> | string | null
    threadTokenCount?: IntNullableWithAggregatesFilter<"Chats"> | number | null
  }

  export type PropiedadesWhereInput = {
    AND?: PropiedadesWhereInput | PropiedadesWhereInput[]
    OR?: PropiedadesWhereInput[]
    NOT?: PropiedadesWhereInput | PropiedadesWhereInput[]
    id?: IntFilter<"Propiedades"> | number
    propertyId?: IntFilter<"Propiedades"> | number
    roomId?: IntFilter<"Propiedades"> | number
    roomName?: StringFilter<"Propiedades"> | string
    extraCharge?: JsonFilter<"Propiedades">
    capacity?: IntFilter<"Propiedades"> | number
  }

  export type PropiedadesOrderByWithRelationInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    extraCharge?: SortOrder
    capacity?: SortOrder
  }

  export type PropiedadesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    roomId?: number
    AND?: PropiedadesWhereInput | PropiedadesWhereInput[]
    OR?: PropiedadesWhereInput[]
    NOT?: PropiedadesWhereInput | PropiedadesWhereInput[]
    propertyId?: IntFilter<"Propiedades"> | number
    roomName?: StringFilter<"Propiedades"> | string
    extraCharge?: JsonFilter<"Propiedades">
    capacity?: IntFilter<"Propiedades"> | number
  }, "id" | "roomId">

  export type PropiedadesOrderByWithAggregationInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    extraCharge?: SortOrder
    capacity?: SortOrder
    _count?: PropiedadesCountOrderByAggregateInput
    _avg?: PropiedadesAvgOrderByAggregateInput
    _max?: PropiedadesMaxOrderByAggregateInput
    _min?: PropiedadesMinOrderByAggregateInput
    _sum?: PropiedadesSumOrderByAggregateInput
  }

  export type PropiedadesScalarWhereWithAggregatesInput = {
    AND?: PropiedadesScalarWhereWithAggregatesInput | PropiedadesScalarWhereWithAggregatesInput[]
    OR?: PropiedadesScalarWhereWithAggregatesInput[]
    NOT?: PropiedadesScalarWhereWithAggregatesInput | PropiedadesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Propiedades"> | number
    propertyId?: IntWithAggregatesFilter<"Propiedades"> | number
    roomId?: IntWithAggregatesFilter<"Propiedades"> | number
    roomName?: StringWithAggregatesFilter<"Propiedades"> | string
    extraCharge?: JsonWithAggregatesFilter<"Propiedades">
    capacity?: IntWithAggregatesFilter<"Propiedades"> | number
  }

  export type ReservasWhereInput = {
    AND?: ReservasWhereInput | ReservasWhereInput[]
    OR?: ReservasWhereInput[]
    NOT?: ReservasWhereInput | ReservasWhereInput[]
    id?: IntFilter<"Reservas"> | number
    bookingId?: StringFilter<"Reservas"> | string
    phone?: StringNullableFilter<"Reservas"> | string | null
    guestName?: StringNullableFilter<"Reservas"> | string | null
    status?: StringNullableFilter<"Reservas"> | string | null
    internalNotes?: StringNullableFilter<"Reservas"> | string | null
    propertyName?: StringNullableFilter<"Reservas"> | string | null
    arrivalDate?: StringNullableFilter<"Reservas"> | string | null
    departureDate?: StringNullableFilter<"Reservas"> | string | null
    numNights?: IntNullableFilter<"Reservas"> | number | null
    totalPersons?: IntNullableFilter<"Reservas"> | number | null
    totalCharges?: StringNullableFilter<"Reservas"> | string | null
    totalPayments?: StringNullableFilter<"Reservas"> | string | null
    balance?: StringNullableFilter<"Reservas"> | string | null
    basePrice?: StringNullableFilter<"Reservas"> | string | null
    channel?: StringNullableFilter<"Reservas"> | string | null
    email?: StringNullableFilter<"Reservas"> | string | null
    apiReference?: StringNullableFilter<"Reservas"> | string | null
    charges?: JsonFilter<"Reservas">
    payments?: JsonFilter<"Reservas">
    messages?: JsonFilter<"Reservas">
    infoItems?: JsonFilter<"Reservas">
    notes?: StringNullableFilter<"Reservas"> | string | null
    bookingDate?: StringNullableFilter<"Reservas"> | string | null
    modifiedDate?: StringNullableFilter<"Reservas"> | string | null
    lastUpdatedBD?: DateTimeFilter<"Reservas"> | Date | string
    raw?: JsonNullableFilter<"Reservas">
    BDStatus?: StringNullableFilter<"Reservas"> | string | null
  }

  export type ReservasOrderByWithRelationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrderInput | SortOrder
    guestName?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    numNights?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    totalCharges?: SortOrderInput | SortOrder
    totalPayments?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    basePrice?: SortOrderInput | SortOrder
    channel?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    apiReference?: SortOrderInput | SortOrder
    charges?: SortOrder
    payments?: SortOrder
    messages?: SortOrder
    infoItems?: SortOrder
    notes?: SortOrderInput | SortOrder
    bookingDate?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
    lastUpdatedBD?: SortOrder
    raw?: SortOrderInput | SortOrder
    BDStatus?: SortOrderInput | SortOrder
  }

  export type ReservasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    bookingId?: string
    AND?: ReservasWhereInput | ReservasWhereInput[]
    OR?: ReservasWhereInput[]
    NOT?: ReservasWhereInput | ReservasWhereInput[]
    phone?: StringNullableFilter<"Reservas"> | string | null
    guestName?: StringNullableFilter<"Reservas"> | string | null
    status?: StringNullableFilter<"Reservas"> | string | null
    internalNotes?: StringNullableFilter<"Reservas"> | string | null
    propertyName?: StringNullableFilter<"Reservas"> | string | null
    arrivalDate?: StringNullableFilter<"Reservas"> | string | null
    departureDate?: StringNullableFilter<"Reservas"> | string | null
    numNights?: IntNullableFilter<"Reservas"> | number | null
    totalPersons?: IntNullableFilter<"Reservas"> | number | null
    totalCharges?: StringNullableFilter<"Reservas"> | string | null
    totalPayments?: StringNullableFilter<"Reservas"> | string | null
    balance?: StringNullableFilter<"Reservas"> | string | null
    basePrice?: StringNullableFilter<"Reservas"> | string | null
    channel?: StringNullableFilter<"Reservas"> | string | null
    email?: StringNullableFilter<"Reservas"> | string | null
    apiReference?: StringNullableFilter<"Reservas"> | string | null
    charges?: JsonFilter<"Reservas">
    payments?: JsonFilter<"Reservas">
    messages?: JsonFilter<"Reservas">
    infoItems?: JsonFilter<"Reservas">
    notes?: StringNullableFilter<"Reservas"> | string | null
    bookingDate?: StringNullableFilter<"Reservas"> | string | null
    modifiedDate?: StringNullableFilter<"Reservas"> | string | null
    lastUpdatedBD?: DateTimeFilter<"Reservas"> | Date | string
    raw?: JsonNullableFilter<"Reservas">
    BDStatus?: StringNullableFilter<"Reservas"> | string | null
  }, "id" | "bookingId">

  export type ReservasOrderByWithAggregationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrderInput | SortOrder
    guestName?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    numNights?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    totalCharges?: SortOrderInput | SortOrder
    totalPayments?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    basePrice?: SortOrderInput | SortOrder
    channel?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    apiReference?: SortOrderInput | SortOrder
    charges?: SortOrder
    payments?: SortOrder
    messages?: SortOrder
    infoItems?: SortOrder
    notes?: SortOrderInput | SortOrder
    bookingDate?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
    lastUpdatedBD?: SortOrder
    raw?: SortOrderInput | SortOrder
    BDStatus?: SortOrderInput | SortOrder
    _count?: ReservasCountOrderByAggregateInput
    _avg?: ReservasAvgOrderByAggregateInput
    _max?: ReservasMaxOrderByAggregateInput
    _min?: ReservasMinOrderByAggregateInput
    _sum?: ReservasSumOrderByAggregateInput
  }

  export type ReservasScalarWhereWithAggregatesInput = {
    AND?: ReservasScalarWhereWithAggregatesInput | ReservasScalarWhereWithAggregatesInput[]
    OR?: ReservasScalarWhereWithAggregatesInput[]
    NOT?: ReservasScalarWhereWithAggregatesInput | ReservasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Reservas"> | number
    bookingId?: StringWithAggregatesFilter<"Reservas"> | string
    phone?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    guestName?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    status?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    internalNotes?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    propertyName?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    arrivalDate?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    departureDate?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    numNights?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
    totalPersons?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
    totalCharges?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    totalPayments?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    balance?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    basePrice?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    channel?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    email?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    apiReference?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    charges?: JsonWithAggregatesFilter<"Reservas">
    payments?: JsonWithAggregatesFilter<"Reservas">
    messages?: JsonWithAggregatesFilter<"Reservas">
    infoItems?: JsonWithAggregatesFilter<"Reservas">
    notes?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    bookingDate?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    modifiedDate?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    lastUpdatedBD?: DateTimeWithAggregatesFilter<"Reservas"> | Date | string
    raw?: JsonNullableWithAggregatesFilter<"Reservas">
    BDStatus?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
  }

  export type OportunidadesWhereInput = {
    AND?: OportunidadesWhereInput | OportunidadesWhereInput[]
    OR?: OportunidadesWhereInput[]
    NOT?: OportunidadesWhereInput | OportunidadesWhereInput[]
    id?: IntFilter<"Oportunidades"> | number
    bookingId?: StringFilter<"Oportunidades"> | string
    guestName?: StringFilter<"Oportunidades"> | string
    phone?: StringFilter<"Oportunidades"> | string
    propertyName?: StringFilter<"Oportunidades"> | string
    arrivalDate?: DateTimeFilter<"Oportunidades"> | Date | string
    departureDate?: DateTimeFilter<"Oportunidades"> | Date | string
    numNights?: IntFilter<"Oportunidades"> | number
    totalPersons?: IntFilter<"Oportunidades"> | number
    channel?: StringFilter<"Oportunidades"> | string
    createdAt?: DateTimeFilter<"Oportunidades"> | Date | string
  }

  export type OportunidadesOrderByWithRelationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    guestName?: SortOrder
    phone?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    channel?: SortOrder
    createdAt?: SortOrder
  }

  export type OportunidadesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    bookingId?: string
    AND?: OportunidadesWhereInput | OportunidadesWhereInput[]
    OR?: OportunidadesWhereInput[]
    NOT?: OportunidadesWhereInput | OportunidadesWhereInput[]
    guestName?: StringFilter<"Oportunidades"> | string
    phone?: StringFilter<"Oportunidades"> | string
    propertyName?: StringFilter<"Oportunidades"> | string
    arrivalDate?: DateTimeFilter<"Oportunidades"> | Date | string
    departureDate?: DateTimeFilter<"Oportunidades"> | Date | string
    numNights?: IntFilter<"Oportunidades"> | number
    totalPersons?: IntFilter<"Oportunidades"> | number
    channel?: StringFilter<"Oportunidades"> | string
    createdAt?: DateTimeFilter<"Oportunidades"> | Date | string
  }, "id" | "bookingId">

  export type OportunidadesOrderByWithAggregationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    guestName?: SortOrder
    phone?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    channel?: SortOrder
    createdAt?: SortOrder
    _count?: OportunidadesCountOrderByAggregateInput
    _avg?: OportunidadesAvgOrderByAggregateInput
    _max?: OportunidadesMaxOrderByAggregateInput
    _min?: OportunidadesMinOrderByAggregateInput
    _sum?: OportunidadesSumOrderByAggregateInput
  }

  export type OportunidadesScalarWhereWithAggregatesInput = {
    AND?: OportunidadesScalarWhereWithAggregatesInput | OportunidadesScalarWhereWithAggregatesInput[]
    OR?: OportunidadesScalarWhereWithAggregatesInput[]
    NOT?: OportunidadesScalarWhereWithAggregatesInput | OportunidadesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Oportunidades"> | number
    bookingId?: StringWithAggregatesFilter<"Oportunidades"> | string
    guestName?: StringWithAggregatesFilter<"Oportunidades"> | string
    phone?: StringWithAggregatesFilter<"Oportunidades"> | string
    propertyName?: StringWithAggregatesFilter<"Oportunidades"> | string
    arrivalDate?: DateTimeWithAggregatesFilter<"Oportunidades"> | Date | string
    departureDate?: DateTimeWithAggregatesFilter<"Oportunidades"> | Date | string
    numNights?: IntWithAggregatesFilter<"Oportunidades"> | number
    totalPersons?: IntWithAggregatesFilter<"Oportunidades"> | number
    channel?: StringWithAggregatesFilter<"Oportunidades"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Oportunidades"> | Date | string
  }

  export type CRMWhereInput = {
    AND?: CRMWhereInput | CRMWhereInput[]
    OR?: CRMWhereInput[]
    NOT?: CRMWhereInput | CRMWhereInput[]
    id?: IntFilter<"CRM"> | number
    phoneNumber?: StringFilter<"CRM"> | string
    clientName?: StringNullableFilter<"CRM"> | string | null
    email?: StringNullableFilter<"CRM"> | string | null
    bookingId?: StringNullableFilter<"CRM"> | string | null
    currentStatus?: StringNullableFilter<"CRM"> | string | null
    source?: StringNullableFilter<"CRM"> | string | null
    profileStatus?: StringNullableFilter<"CRM"> | string | null
    proximaAccion?: StringNullableFilter<"CRM"> | string | null
    fechaProximaAccion?: DateTimeNullableFilter<"CRM"> | Date | string | null
    prioridad?: IntNullableFilter<"CRM"> | number | null
    propertyName?: StringNullableFilter<"CRM"> | string | null
    arrivalDate?: DateTimeNullableFilter<"CRM"> | Date | string | null
    departureDate?: DateTimeNullableFilter<"CRM"> | Date | string | null
    lastInteraction?: DateTimeNullableFilter<"CRM"> | Date | string | null
    threadId?: StringNullableFilter<"CRM"> | string | null
    wspLabels?: StringNullableFilter<"CRM"> | string | null
    totalBookings?: IntFilter<"CRM"> | number
    totalValue?: IntNullableFilter<"CRM"> | number | null
    automationEnabled?: BoolFilter<"CRM"> | boolean
    internalNotes?: StringNullableFilter<"CRM"> | string | null
    createdAt?: DateTimeFilter<"CRM"> | Date | string
    updatedAt?: DateTimeFilter<"CRM"> | Date | string
  }

  export type CRMOrderByWithRelationInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    clientName?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    bookingId?: SortOrderInput | SortOrder
    currentStatus?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    profileStatus?: SortOrderInput | SortOrder
    proximaAccion?: SortOrderInput | SortOrder
    fechaProximaAccion?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    lastInteraction?: SortOrderInput | SortOrder
    threadId?: SortOrderInput | SortOrder
    wspLabels?: SortOrderInput | SortOrder
    totalBookings?: SortOrder
    totalValue?: SortOrderInput | SortOrder
    automationEnabled?: SortOrder
    internalNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CRMWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    phoneNumber?: string
    AND?: CRMWhereInput | CRMWhereInput[]
    OR?: CRMWhereInput[]
    NOT?: CRMWhereInput | CRMWhereInput[]
    clientName?: StringNullableFilter<"CRM"> | string | null
    email?: StringNullableFilter<"CRM"> | string | null
    bookingId?: StringNullableFilter<"CRM"> | string | null
    currentStatus?: StringNullableFilter<"CRM"> | string | null
    source?: StringNullableFilter<"CRM"> | string | null
    profileStatus?: StringNullableFilter<"CRM"> | string | null
    proximaAccion?: StringNullableFilter<"CRM"> | string | null
    fechaProximaAccion?: DateTimeNullableFilter<"CRM"> | Date | string | null
    prioridad?: IntNullableFilter<"CRM"> | number | null
    propertyName?: StringNullableFilter<"CRM"> | string | null
    arrivalDate?: DateTimeNullableFilter<"CRM"> | Date | string | null
    departureDate?: DateTimeNullableFilter<"CRM"> | Date | string | null
    lastInteraction?: DateTimeNullableFilter<"CRM"> | Date | string | null
    threadId?: StringNullableFilter<"CRM"> | string | null
    wspLabels?: StringNullableFilter<"CRM"> | string | null
    totalBookings?: IntFilter<"CRM"> | number
    totalValue?: IntNullableFilter<"CRM"> | number | null
    automationEnabled?: BoolFilter<"CRM"> | boolean
    internalNotes?: StringNullableFilter<"CRM"> | string | null
    createdAt?: DateTimeFilter<"CRM"> | Date | string
    updatedAt?: DateTimeFilter<"CRM"> | Date | string
  }, "id" | "phoneNumber">

  export type CRMOrderByWithAggregationInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    clientName?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    bookingId?: SortOrderInput | SortOrder
    currentStatus?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    profileStatus?: SortOrderInput | SortOrder
    proximaAccion?: SortOrderInput | SortOrder
    fechaProximaAccion?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    lastInteraction?: SortOrderInput | SortOrder
    threadId?: SortOrderInput | SortOrder
    wspLabels?: SortOrderInput | SortOrder
    totalBookings?: SortOrder
    totalValue?: SortOrderInput | SortOrder
    automationEnabled?: SortOrder
    internalNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CRMCountOrderByAggregateInput
    _avg?: CRMAvgOrderByAggregateInput
    _max?: CRMMaxOrderByAggregateInput
    _min?: CRMMinOrderByAggregateInput
    _sum?: CRMSumOrderByAggregateInput
  }

  export type CRMScalarWhereWithAggregatesInput = {
    AND?: CRMScalarWhereWithAggregatesInput | CRMScalarWhereWithAggregatesInput[]
    OR?: CRMScalarWhereWithAggregatesInput[]
    NOT?: CRMScalarWhereWithAggregatesInput | CRMScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CRM"> | number
    phoneNumber?: StringWithAggregatesFilter<"CRM"> | string
    clientName?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    email?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    bookingId?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    currentStatus?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    source?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    profileStatus?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    proximaAccion?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    fechaProximaAccion?: DateTimeNullableWithAggregatesFilter<"CRM"> | Date | string | null
    prioridad?: IntNullableWithAggregatesFilter<"CRM"> | number | null
    propertyName?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    arrivalDate?: DateTimeNullableWithAggregatesFilter<"CRM"> | Date | string | null
    departureDate?: DateTimeNullableWithAggregatesFilter<"CRM"> | Date | string | null
    lastInteraction?: DateTimeNullableWithAggregatesFilter<"CRM"> | Date | string | null
    threadId?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    wspLabels?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    totalBookings?: IntWithAggregatesFilter<"CRM"> | number
    totalValue?: IntNullableWithAggregatesFilter<"CRM"> | number | null
    automationEnabled?: BoolWithAggregatesFilter<"CRM"> | boolean
    internalNotes?: StringNullableWithAggregatesFilter<"CRM"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CRM"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CRM"> | Date | string
  }

  export type ClientesWhereInput = {
    AND?: ClientesWhereInput | ClientesWhereInput[]
    OR?: ClientesWhereInput[]
    NOT?: ClientesWhereInput | ClientesWhereInput[]
    id?: IntFilter<"Clientes"> | number
    phoneNumber?: StringFilter<"Clientes"> | string
    name?: StringNullableFilter<"Clientes"> | string | null
    email?: StringNullableFilter<"Clientes"> | string | null
    whatsappChatId?: StringNullableFilter<"Clientes"> | string | null
    whatsappLabels?: StringNullableFilter<"Clientes"> | string | null
    lastWhatsappMsg?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    hasWhatsapp?: BoolFilter<"Clientes"> | boolean
    totalBookings?: IntFilter<"Clientes"> | number
    confirmedBookings?: IntFilter<"Clientes"> | number
    pendingBookings?: IntFilter<"Clientes"> | number
    cancelledBookings?: IntFilter<"Clientes"> | number
    lastCheckIn?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    nextCheckIn?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    totalSpent?: DecimalFilter<"Clientes"> | Decimal | DecimalJsLike | number | string
    lastActivity?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    source?: StringNullableListFilter<"Clientes">
    status?: StringFilter<"Clientes"> | string
    createdAt?: DateTimeFilter<"Clientes"> | Date | string
    updatedAt?: DateTimeFilter<"Clientes"> | Date | string
    syncErrors?: IntFilter<"Clientes"> | number
  }

  export type ClientesOrderByWithRelationInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    whatsappChatId?: SortOrderInput | SortOrder
    whatsappLabels?: SortOrderInput | SortOrder
    lastWhatsappMsg?: SortOrderInput | SortOrder
    hasWhatsapp?: SortOrder
    totalBookings?: SortOrder
    confirmedBookings?: SortOrder
    pendingBookings?: SortOrder
    cancelledBookings?: SortOrder
    lastCheckIn?: SortOrderInput | SortOrder
    nextCheckIn?: SortOrderInput | SortOrder
    totalSpent?: SortOrder
    lastActivity?: SortOrderInput | SortOrder
    source?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    syncErrors?: SortOrder
  }

  export type ClientesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    phoneNumber?: string
    whatsappChatId?: string
    AND?: ClientesWhereInput | ClientesWhereInput[]
    OR?: ClientesWhereInput[]
    NOT?: ClientesWhereInput | ClientesWhereInput[]
    name?: StringNullableFilter<"Clientes"> | string | null
    email?: StringNullableFilter<"Clientes"> | string | null
    whatsappLabels?: StringNullableFilter<"Clientes"> | string | null
    lastWhatsappMsg?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    hasWhatsapp?: BoolFilter<"Clientes"> | boolean
    totalBookings?: IntFilter<"Clientes"> | number
    confirmedBookings?: IntFilter<"Clientes"> | number
    pendingBookings?: IntFilter<"Clientes"> | number
    cancelledBookings?: IntFilter<"Clientes"> | number
    lastCheckIn?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    nextCheckIn?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    totalSpent?: DecimalFilter<"Clientes"> | Decimal | DecimalJsLike | number | string
    lastActivity?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    source?: StringNullableListFilter<"Clientes">
    status?: StringFilter<"Clientes"> | string
    createdAt?: DateTimeFilter<"Clientes"> | Date | string
    updatedAt?: DateTimeFilter<"Clientes"> | Date | string
    syncErrors?: IntFilter<"Clientes"> | number
  }, "id" | "phoneNumber" | "whatsappChatId">

  export type ClientesOrderByWithAggregationInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    whatsappChatId?: SortOrderInput | SortOrder
    whatsappLabels?: SortOrderInput | SortOrder
    lastWhatsappMsg?: SortOrderInput | SortOrder
    hasWhatsapp?: SortOrder
    totalBookings?: SortOrder
    confirmedBookings?: SortOrder
    pendingBookings?: SortOrder
    cancelledBookings?: SortOrder
    lastCheckIn?: SortOrderInput | SortOrder
    nextCheckIn?: SortOrderInput | SortOrder
    totalSpent?: SortOrder
    lastActivity?: SortOrderInput | SortOrder
    source?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    syncErrors?: SortOrder
    _count?: ClientesCountOrderByAggregateInput
    _avg?: ClientesAvgOrderByAggregateInput
    _max?: ClientesMaxOrderByAggregateInput
    _min?: ClientesMinOrderByAggregateInput
    _sum?: ClientesSumOrderByAggregateInput
  }

  export type ClientesScalarWhereWithAggregatesInput = {
    AND?: ClientesScalarWhereWithAggregatesInput | ClientesScalarWhereWithAggregatesInput[]
    OR?: ClientesScalarWhereWithAggregatesInput[]
    NOT?: ClientesScalarWhereWithAggregatesInput | ClientesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Clientes"> | number
    phoneNumber?: StringWithAggregatesFilter<"Clientes"> | string
    name?: StringNullableWithAggregatesFilter<"Clientes"> | string | null
    email?: StringNullableWithAggregatesFilter<"Clientes"> | string | null
    whatsappChatId?: StringNullableWithAggregatesFilter<"Clientes"> | string | null
    whatsappLabels?: StringNullableWithAggregatesFilter<"Clientes"> | string | null
    lastWhatsappMsg?: DateTimeNullableWithAggregatesFilter<"Clientes"> | Date | string | null
    hasWhatsapp?: BoolWithAggregatesFilter<"Clientes"> | boolean
    totalBookings?: IntWithAggregatesFilter<"Clientes"> | number
    confirmedBookings?: IntWithAggregatesFilter<"Clientes"> | number
    pendingBookings?: IntWithAggregatesFilter<"Clientes"> | number
    cancelledBookings?: IntWithAggregatesFilter<"Clientes"> | number
    lastCheckIn?: DateTimeNullableWithAggregatesFilter<"Clientes"> | Date | string | null
    nextCheckIn?: DateTimeNullableWithAggregatesFilter<"Clientes"> | Date | string | null
    totalSpent?: DecimalWithAggregatesFilter<"Clientes"> | Decimal | DecimalJsLike | number | string
    lastActivity?: DateTimeNullableWithAggregatesFilter<"Clientes"> | Date | string | null
    source?: StringNullableListFilter<"Clientes">
    status?: StringWithAggregatesFilter<"Clientes"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Clientes"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Clientes"> | Date | string
    syncErrors?: IntWithAggregatesFilter<"Clientes"> | number
  }

  export type ChatsCreateInput = {
    phoneNumber: string
    name?: string | null
    userName?: string | null
    labels?: string | null
    chatId?: string | null
    lastActivity?: Date | string
    threadId?: string | null
    threadTokenCount?: number | null
  }

  export type ChatsUncheckedCreateInput = {
    phoneNumber: string
    name?: string | null
    userName?: string | null
    labels?: string | null
    chatId?: string | null
    lastActivity?: Date | string
    threadId?: string | null
    threadTokenCount?: number | null
  }

  export type ChatsUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ChatsUncheckedUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ChatsCreateManyInput = {
    phoneNumber: string
    name?: string | null
    userName?: string | null
    labels?: string | null
    chatId?: string | null
    lastActivity?: Date | string
    threadId?: string | null
    threadTokenCount?: number | null
  }

  export type ChatsUpdateManyMutationInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ChatsUncheckedUpdateManyInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PropiedadesCreateInput = {
    propertyId: number
    roomId: number
    roomName: string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: number
  }

  export type PropiedadesUncheckedCreateInput = {
    id?: number
    propertyId: number
    roomId: number
    roomName: string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: number
  }

  export type PropiedadesUpdateInput = {
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type PropiedadesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type PropiedadesCreateManyInput = {
    id?: number
    propertyId: number
    roomId: number
    roomName: string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: number
  }

  export type PropiedadesUpdateManyMutationInput = {
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type PropiedadesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type ReservasCreateInput = {
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
  }

  export type ReservasUncheckedCreateInput = {
    id?: number
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
  }

  export type ReservasUpdateInput = {
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservasCreateManyInput = {
    id?: number
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
  }

  export type ReservasUpdateManyMutationInput = {
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OportunidadesCreateInput = {
    bookingId: string
    guestName: string
    phone: string
    propertyName: string
    arrivalDate: Date | string
    departureDate: Date | string
    numNights: number
    totalPersons: number
    channel: string
    createdAt?: Date | string
  }

  export type OportunidadesUncheckedCreateInput = {
    id?: number
    bookingId: string
    guestName: string
    phone: string
    propertyName: string
    arrivalDate: Date | string
    departureDate: Date | string
    numNights: number
    totalPersons: number
    channel: string
    createdAt?: Date | string
  }

  export type OportunidadesUpdateInput = {
    bookingId?: StringFieldUpdateOperationsInput | string
    guestName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    propertyName?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    departureDate?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: IntFieldUpdateOperationsInput | number
    totalPersons?: IntFieldUpdateOperationsInput | number
    channel?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OportunidadesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: StringFieldUpdateOperationsInput | string
    guestName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    propertyName?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    departureDate?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: IntFieldUpdateOperationsInput | number
    totalPersons?: IntFieldUpdateOperationsInput | number
    channel?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OportunidadesCreateManyInput = {
    id?: number
    bookingId: string
    guestName: string
    phone: string
    propertyName: string
    arrivalDate: Date | string
    departureDate: Date | string
    numNights: number
    totalPersons: number
    channel: string
    createdAt?: Date | string
  }

  export type OportunidadesUpdateManyMutationInput = {
    bookingId?: StringFieldUpdateOperationsInput | string
    guestName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    propertyName?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    departureDate?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: IntFieldUpdateOperationsInput | number
    totalPersons?: IntFieldUpdateOperationsInput | number
    channel?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OportunidadesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: StringFieldUpdateOperationsInput | string
    guestName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    propertyName?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    departureDate?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: IntFieldUpdateOperationsInput | number
    totalPersons?: IntFieldUpdateOperationsInput | number
    channel?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CRMCreateInput = {
    phoneNumber: string
    clientName?: string | null
    email?: string | null
    bookingId?: string | null
    currentStatus?: string | null
    source?: string | null
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
    propertyName?: string | null
    arrivalDate?: Date | string | null
    departureDate?: Date | string | null
    lastInteraction?: Date | string | null
    threadId?: string | null
    wspLabels?: string | null
    totalBookings?: number
    totalValue?: number | null
    automationEnabled?: boolean
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CRMUncheckedCreateInput = {
    id?: number
    phoneNumber: string
    clientName?: string | null
    email?: string | null
    bookingId?: string | null
    currentStatus?: string | null
    source?: string | null
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
    propertyName?: string | null
    arrivalDate?: Date | string | null
    departureDate?: Date | string | null
    lastInteraction?: Date | string | null
    threadId?: string | null
    wspLabels?: string | null
    totalBookings?: number
    totalValue?: number | null
    automationEnabled?: boolean
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CRMUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    currentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    departureDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastInteraction?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    wspLabels?: NullableStringFieldUpdateOperationsInput | string | null
    totalBookings?: IntFieldUpdateOperationsInput | number
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    automationEnabled?: BoolFieldUpdateOperationsInput | boolean
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CRMUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    phoneNumber?: StringFieldUpdateOperationsInput | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    currentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    departureDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastInteraction?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    wspLabels?: NullableStringFieldUpdateOperationsInput | string | null
    totalBookings?: IntFieldUpdateOperationsInput | number
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    automationEnabled?: BoolFieldUpdateOperationsInput | boolean
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CRMCreateManyInput = {
    id?: number
    phoneNumber: string
    clientName?: string | null
    email?: string | null
    bookingId?: string | null
    currentStatus?: string | null
    source?: string | null
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
    propertyName?: string | null
    arrivalDate?: Date | string | null
    departureDate?: Date | string | null
    lastInteraction?: Date | string | null
    threadId?: string | null
    wspLabels?: string | null
    totalBookings?: number
    totalValue?: number | null
    automationEnabled?: boolean
    internalNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CRMUpdateManyMutationInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    currentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    departureDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastInteraction?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    wspLabels?: NullableStringFieldUpdateOperationsInput | string | null
    totalBookings?: IntFieldUpdateOperationsInput | number
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    automationEnabled?: BoolFieldUpdateOperationsInput | boolean
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CRMUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    phoneNumber?: StringFieldUpdateOperationsInput | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    currentStatus?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    departureDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastInteraction?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    wspLabels?: NullableStringFieldUpdateOperationsInput | string | null
    totalBookings?: IntFieldUpdateOperationsInput | number
    totalValue?: NullableIntFieldUpdateOperationsInput | number | null
    automationEnabled?: BoolFieldUpdateOperationsInput | boolean
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientesCreateInput = {
    phoneNumber: string
    name?: string | null
    email?: string | null
    whatsappChatId?: string | null
    whatsappLabels?: string | null
    lastWhatsappMsg?: Date | string | null
    hasWhatsapp?: boolean
    totalBookings?: number
    confirmedBookings?: number
    pendingBookings?: number
    cancelledBookings?: number
    lastCheckIn?: Date | string | null
    nextCheckIn?: Date | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    lastActivity?: Date | string | null
    source?: ClientesCreatesourceInput | string[]
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    syncErrors?: number
  }

  export type ClientesUncheckedCreateInput = {
    id?: number
    phoneNumber: string
    name?: string | null
    email?: string | null
    whatsappChatId?: string | null
    whatsappLabels?: string | null
    lastWhatsappMsg?: Date | string | null
    hasWhatsapp?: boolean
    totalBookings?: number
    confirmedBookings?: number
    pendingBookings?: number
    cancelledBookings?: number
    lastCheckIn?: Date | string | null
    nextCheckIn?: Date | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    lastActivity?: Date | string | null
    source?: ClientesCreatesourceInput | string[]
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    syncErrors?: number
  }

  export type ClientesUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappChatId?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappLabels?: NullableStringFieldUpdateOperationsInput | string | null
    lastWhatsappMsg?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hasWhatsapp?: BoolFieldUpdateOperationsInput | boolean
    totalBookings?: IntFieldUpdateOperationsInput | number
    confirmedBookings?: IntFieldUpdateOperationsInput | number
    pendingBookings?: IntFieldUpdateOperationsInput | number
    cancelledBookings?: IntFieldUpdateOperationsInput | number
    lastCheckIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextCheckIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: ClientesUpdatesourceInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    syncErrors?: IntFieldUpdateOperationsInput | number
  }

  export type ClientesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappChatId?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappLabels?: NullableStringFieldUpdateOperationsInput | string | null
    lastWhatsappMsg?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hasWhatsapp?: BoolFieldUpdateOperationsInput | boolean
    totalBookings?: IntFieldUpdateOperationsInput | number
    confirmedBookings?: IntFieldUpdateOperationsInput | number
    pendingBookings?: IntFieldUpdateOperationsInput | number
    cancelledBookings?: IntFieldUpdateOperationsInput | number
    lastCheckIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextCheckIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: ClientesUpdatesourceInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    syncErrors?: IntFieldUpdateOperationsInput | number
  }

  export type ClientesCreateManyInput = {
    id?: number
    phoneNumber: string
    name?: string | null
    email?: string | null
    whatsappChatId?: string | null
    whatsappLabels?: string | null
    lastWhatsappMsg?: Date | string | null
    hasWhatsapp?: boolean
    totalBookings?: number
    confirmedBookings?: number
    pendingBookings?: number
    cancelledBookings?: number
    lastCheckIn?: Date | string | null
    nextCheckIn?: Date | string | null
    totalSpent?: Decimal | DecimalJsLike | number | string
    lastActivity?: Date | string | null
    source?: ClientesCreatesourceInput | string[]
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    syncErrors?: number
  }

  export type ClientesUpdateManyMutationInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappChatId?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappLabels?: NullableStringFieldUpdateOperationsInput | string | null
    lastWhatsappMsg?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hasWhatsapp?: BoolFieldUpdateOperationsInput | boolean
    totalBookings?: IntFieldUpdateOperationsInput | number
    confirmedBookings?: IntFieldUpdateOperationsInput | number
    pendingBookings?: IntFieldUpdateOperationsInput | number
    cancelledBookings?: IntFieldUpdateOperationsInput | number
    lastCheckIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextCheckIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: ClientesUpdatesourceInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    syncErrors?: IntFieldUpdateOperationsInput | number
  }

  export type ClientesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappChatId?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappLabels?: NullableStringFieldUpdateOperationsInput | string | null
    lastWhatsappMsg?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hasWhatsapp?: BoolFieldUpdateOperationsInput | boolean
    totalBookings?: IntFieldUpdateOperationsInput | number
    confirmedBookings?: IntFieldUpdateOperationsInput | number
    pendingBookings?: IntFieldUpdateOperationsInput | number
    cancelledBookings?: IntFieldUpdateOperationsInput | number
    lastCheckIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextCheckIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalSpent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    source?: ClientesUpdatesourceInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    syncErrors?: IntFieldUpdateOperationsInput | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ChatsCountOrderByAggregateInput = {
    phoneNumber?: SortOrder
    name?: SortOrder
    userName?: SortOrder
    labels?: SortOrder
    chatId?: SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrder
    threadTokenCount?: SortOrder
  }

  export type ChatsAvgOrderByAggregateInput = {
    threadTokenCount?: SortOrder
  }

  export type ChatsMaxOrderByAggregateInput = {
    phoneNumber?: SortOrder
    name?: SortOrder
    userName?: SortOrder
    labels?: SortOrder
    chatId?: SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrder
    threadTokenCount?: SortOrder
  }

  export type ChatsMinOrderByAggregateInput = {
    phoneNumber?: SortOrder
    name?: SortOrder
    userName?: SortOrder
    labels?: SortOrder
    chatId?: SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrder
    threadTokenCount?: SortOrder
  }

  export type ChatsSumOrderByAggregateInput = {
    threadTokenCount?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type PropiedadesCountOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    extraCharge?: SortOrder
    capacity?: SortOrder
  }

  export type PropiedadesAvgOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    capacity?: SortOrder
  }

  export type PropiedadesMaxOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    capacity?: SortOrder
  }

  export type PropiedadesMinOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    capacity?: SortOrder
  }

  export type PropiedadesSumOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    capacity?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ReservasCountOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    status?: SortOrder
    internalNotes?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    totalCharges?: SortOrder
    totalPayments?: SortOrder
    balance?: SortOrder
    basePrice?: SortOrder
    channel?: SortOrder
    email?: SortOrder
    apiReference?: SortOrder
    charges?: SortOrder
    payments?: SortOrder
    messages?: SortOrder
    infoItems?: SortOrder
    notes?: SortOrder
    bookingDate?: SortOrder
    modifiedDate?: SortOrder
    lastUpdatedBD?: SortOrder
    raw?: SortOrder
    BDStatus?: SortOrder
  }

  export type ReservasAvgOrderByAggregateInput = {
    id?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
  }

  export type ReservasMaxOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    status?: SortOrder
    internalNotes?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    totalCharges?: SortOrder
    totalPayments?: SortOrder
    balance?: SortOrder
    basePrice?: SortOrder
    channel?: SortOrder
    email?: SortOrder
    apiReference?: SortOrder
    notes?: SortOrder
    bookingDate?: SortOrder
    modifiedDate?: SortOrder
    lastUpdatedBD?: SortOrder
    BDStatus?: SortOrder
  }

  export type ReservasMinOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    status?: SortOrder
    internalNotes?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    totalCharges?: SortOrder
    totalPayments?: SortOrder
    balance?: SortOrder
    basePrice?: SortOrder
    channel?: SortOrder
    email?: SortOrder
    apiReference?: SortOrder
    notes?: SortOrder
    bookingDate?: SortOrder
    modifiedDate?: SortOrder
    lastUpdatedBD?: SortOrder
    BDStatus?: SortOrder
  }

  export type ReservasSumOrderByAggregateInput = {
    id?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type OportunidadesCountOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    guestName?: SortOrder
    phone?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    channel?: SortOrder
    createdAt?: SortOrder
  }

  export type OportunidadesAvgOrderByAggregateInput = {
    id?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
  }

  export type OportunidadesMaxOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    guestName?: SortOrder
    phone?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    channel?: SortOrder
    createdAt?: SortOrder
  }

  export type OportunidadesMinOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    guestName?: SortOrder
    phone?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    channel?: SortOrder
    createdAt?: SortOrder
  }

  export type OportunidadesSumOrderByAggregateInput = {
    id?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type CRMCountOrderByAggregateInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    clientName?: SortOrder
    email?: SortOrder
    bookingId?: SortOrder
    currentStatus?: SortOrder
    source?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    lastInteraction?: SortOrder
    threadId?: SortOrder
    wspLabels?: SortOrder
    totalBookings?: SortOrder
    totalValue?: SortOrder
    automationEnabled?: SortOrder
    internalNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CRMAvgOrderByAggregateInput = {
    id?: SortOrder
    prioridad?: SortOrder
    totalBookings?: SortOrder
    totalValue?: SortOrder
  }

  export type CRMMaxOrderByAggregateInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    clientName?: SortOrder
    email?: SortOrder
    bookingId?: SortOrder
    currentStatus?: SortOrder
    source?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    lastInteraction?: SortOrder
    threadId?: SortOrder
    wspLabels?: SortOrder
    totalBookings?: SortOrder
    totalValue?: SortOrder
    automationEnabled?: SortOrder
    internalNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CRMMinOrderByAggregateInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    clientName?: SortOrder
    email?: SortOrder
    bookingId?: SortOrder
    currentStatus?: SortOrder
    source?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    lastInteraction?: SortOrder
    threadId?: SortOrder
    wspLabels?: SortOrder
    totalBookings?: SortOrder
    totalValue?: SortOrder
    automationEnabled?: SortOrder
    internalNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CRMSumOrderByAggregateInput = {
    id?: SortOrder
    prioridad?: SortOrder
    totalBookings?: SortOrder
    totalValue?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type ClientesCountOrderByAggregateInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    name?: SortOrder
    email?: SortOrder
    whatsappChatId?: SortOrder
    whatsappLabels?: SortOrder
    lastWhatsappMsg?: SortOrder
    hasWhatsapp?: SortOrder
    totalBookings?: SortOrder
    confirmedBookings?: SortOrder
    pendingBookings?: SortOrder
    cancelledBookings?: SortOrder
    lastCheckIn?: SortOrder
    nextCheckIn?: SortOrder
    totalSpent?: SortOrder
    lastActivity?: SortOrder
    source?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    syncErrors?: SortOrder
  }

  export type ClientesAvgOrderByAggregateInput = {
    id?: SortOrder
    totalBookings?: SortOrder
    confirmedBookings?: SortOrder
    pendingBookings?: SortOrder
    cancelledBookings?: SortOrder
    totalSpent?: SortOrder
    syncErrors?: SortOrder
  }

  export type ClientesMaxOrderByAggregateInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    name?: SortOrder
    email?: SortOrder
    whatsappChatId?: SortOrder
    whatsappLabels?: SortOrder
    lastWhatsappMsg?: SortOrder
    hasWhatsapp?: SortOrder
    totalBookings?: SortOrder
    confirmedBookings?: SortOrder
    pendingBookings?: SortOrder
    cancelledBookings?: SortOrder
    lastCheckIn?: SortOrder
    nextCheckIn?: SortOrder
    totalSpent?: SortOrder
    lastActivity?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    syncErrors?: SortOrder
  }

  export type ClientesMinOrderByAggregateInput = {
    id?: SortOrder
    phoneNumber?: SortOrder
    name?: SortOrder
    email?: SortOrder
    whatsappChatId?: SortOrder
    whatsappLabels?: SortOrder
    lastWhatsappMsg?: SortOrder
    hasWhatsapp?: SortOrder
    totalBookings?: SortOrder
    confirmedBookings?: SortOrder
    pendingBookings?: SortOrder
    cancelledBookings?: SortOrder
    lastCheckIn?: SortOrder
    nextCheckIn?: SortOrder
    totalSpent?: SortOrder
    lastActivity?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    syncErrors?: SortOrder
  }

  export type ClientesSumOrderByAggregateInput = {
    id?: SortOrder
    totalBookings?: SortOrder
    confirmedBookings?: SortOrder
    pendingBookings?: SortOrder
    cancelledBookings?: SortOrder
    totalSpent?: SortOrder
    syncErrors?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ClientesCreatesourceInput = {
    set: string[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type ClientesUpdatesourceInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}