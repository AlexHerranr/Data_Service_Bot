
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model WhatsApp
 * 
 */
export type WhatsApp = $Result.DefaultSelection<Prisma.$WhatsAppPayload>
/**
 * Model Apartamentos
 * 
 */
export type Apartamentos = $Result.DefaultSelection<Prisma.$ApartamentosPayload>
/**
 * Model Reservas
 * 
 */
export type Reservas = $Result.DefaultSelection<Prisma.$ReservasPayload>
/**
 * Model Prospectos
 * 
 */
export type Prospectos = $Result.DefaultSelection<Prisma.$ProspectosPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more WhatsApps
 * const whatsApps = await prisma.whatsApp.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more WhatsApps
   * const whatsApps = await prisma.whatsApp.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.whatsApp`: Exposes CRUD operations for the **WhatsApp** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WhatsApps
    * const whatsApps = await prisma.whatsApp.findMany()
    * ```
    */
  get whatsApp(): Prisma.WhatsAppDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.apartamentos`: Exposes CRUD operations for the **Apartamentos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Apartamentos
    * const apartamentos = await prisma.apartamentos.findMany()
    * ```
    */
  get apartamentos(): Prisma.ApartamentosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservas`: Exposes CRUD operations for the **Reservas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservas
    * const reservas = await prisma.reservas.findMany()
    * ```
    */
  get reservas(): Prisma.ReservasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.prospectos`: Exposes CRUD operations for the **Prospectos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prospectos
    * const prospectos = await prisma.prospectos.findMany()
    * ```
    */
  get prospectos(): Prisma.ProspectosDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.14.0
   * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    WhatsApp: 'WhatsApp',
    Apartamentos: 'Apartamentos',
    Reservas: 'Reservas',
    Prospectos: 'Prospectos'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "whatsApp" | "apartamentos" | "reservas" | "prospectos"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      WhatsApp: {
        payload: Prisma.$WhatsAppPayload<ExtArgs>
        fields: Prisma.WhatsAppFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WhatsAppFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WhatsAppFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload>
          }
          findFirst: {
            args: Prisma.WhatsAppFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WhatsAppFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload>
          }
          findMany: {
            args: Prisma.WhatsAppFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload>[]
          }
          create: {
            args: Prisma.WhatsAppCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload>
          }
          createMany: {
            args: Prisma.WhatsAppCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WhatsAppCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload>[]
          }
          delete: {
            args: Prisma.WhatsAppDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload>
          }
          update: {
            args: Prisma.WhatsAppUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload>
          }
          deleteMany: {
            args: Prisma.WhatsAppDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WhatsAppUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.WhatsAppUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload>[]
          }
          upsert: {
            args: Prisma.WhatsAppUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WhatsAppPayload>
          }
          aggregate: {
            args: Prisma.WhatsAppAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWhatsApp>
          }
          groupBy: {
            args: Prisma.WhatsAppGroupByArgs<ExtArgs>
            result: $Utils.Optional<WhatsAppGroupByOutputType>[]
          }
          count: {
            args: Prisma.WhatsAppCountArgs<ExtArgs>
            result: $Utils.Optional<WhatsAppCountAggregateOutputType> | number
          }
        }
      }
      Apartamentos: {
        payload: Prisma.$ApartamentosPayload<ExtArgs>
        fields: Prisma.ApartamentosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApartamentosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApartamentosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload>
          }
          findFirst: {
            args: Prisma.ApartamentosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApartamentosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload>
          }
          findMany: {
            args: Prisma.ApartamentosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload>[]
          }
          create: {
            args: Prisma.ApartamentosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload>
          }
          createMany: {
            args: Prisma.ApartamentosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApartamentosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload>[]
          }
          delete: {
            args: Prisma.ApartamentosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload>
          }
          update: {
            args: Prisma.ApartamentosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload>
          }
          deleteMany: {
            args: Prisma.ApartamentosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApartamentosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ApartamentosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload>[]
          }
          upsert: {
            args: Prisma.ApartamentosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApartamentosPayload>
          }
          aggregate: {
            args: Prisma.ApartamentosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApartamentos>
          }
          groupBy: {
            args: Prisma.ApartamentosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApartamentosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApartamentosCountArgs<ExtArgs>
            result: $Utils.Optional<ApartamentosCountAggregateOutputType> | number
          }
        }
      }
      Reservas: {
        payload: Prisma.$ReservasPayload<ExtArgs>
        fields: Prisma.ReservasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          findFirst: {
            args: Prisma.ReservasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          findMany: {
            args: Prisma.ReservasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>[]
          }
          create: {
            args: Prisma.ReservasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          createMany: {
            args: Prisma.ReservasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>[]
          }
          delete: {
            args: Prisma.ReservasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          update: {
            args: Prisma.ReservasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          deleteMany: {
            args: Prisma.ReservasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>[]
          }
          upsert: {
            args: Prisma.ReservasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          aggregate: {
            args: Prisma.ReservasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservas>
          }
          groupBy: {
            args: Prisma.ReservasGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservasGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservasCountArgs<ExtArgs>
            result: $Utils.Optional<ReservasCountAggregateOutputType> | number
          }
        }
      }
      Prospectos: {
        payload: Prisma.$ProspectosPayload<ExtArgs>
        fields: Prisma.ProspectosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProspectosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProspectosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload>
          }
          findFirst: {
            args: Prisma.ProspectosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProspectosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload>
          }
          findMany: {
            args: Prisma.ProspectosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload>[]
          }
          create: {
            args: Prisma.ProspectosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload>
          }
          createMany: {
            args: Prisma.ProspectosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProspectosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload>[]
          }
          delete: {
            args: Prisma.ProspectosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload>
          }
          update: {
            args: Prisma.ProspectosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload>
          }
          deleteMany: {
            args: Prisma.ProspectosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProspectosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProspectosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload>[]
          }
          upsert: {
            args: Prisma.ProspectosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProspectosPayload>
          }
          aggregate: {
            args: Prisma.ProspectosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProspectos>
          }
          groupBy: {
            args: Prisma.ProspectosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProspectosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProspectosCountArgs<ExtArgs>
            result: $Utils.Optional<ProspectosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    whatsApp?: WhatsAppOmit
    apartamentos?: ApartamentosOmit
    reservas?: ReservasOmit
    prospectos?: ProspectosOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model WhatsApp
   */

  export type AggregateWhatsApp = {
    _count: WhatsAppCountAggregateOutputType | null
    _avg: WhatsAppAvgAggregateOutputType | null
    _sum: WhatsAppSumAggregateOutputType | null
    _min: WhatsAppMinAggregateOutputType | null
    _max: WhatsAppMaxAggregateOutputType | null
  }

  export type WhatsAppAvgAggregateOutputType = {
    threadTokenCount: number | null
    prioridad: number | null
  }

  export type WhatsAppSumAggregateOutputType = {
    threadTokenCount: number | null
    prioridad: number | null
  }

  export type WhatsAppMinAggregateOutputType = {
    phoneNumber: string | null
    name: string | null
    userName: string | null
    labels: string | null
    chatId: string | null
    lastActivity: Date | null
    threadId: string | null
    threadTokenCount: number | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
  }

  export type WhatsAppMaxAggregateOutputType = {
    phoneNumber: string | null
    name: string | null
    userName: string | null
    labels: string | null
    chatId: string | null
    lastActivity: Date | null
    threadId: string | null
    threadTokenCount: number | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
  }

  export type WhatsAppCountAggregateOutputType = {
    phoneNumber: number
    name: number
    userName: number
    labels: number
    chatId: number
    lastActivity: number
    threadId: number
    threadTokenCount: number
    profileStatus: number
    proximaAccion: number
    fechaProximaAccion: number
    prioridad: number
    _all: number
  }


  export type WhatsAppAvgAggregateInputType = {
    threadTokenCount?: true
    prioridad?: true
  }

  export type WhatsAppSumAggregateInputType = {
    threadTokenCount?: true
    prioridad?: true
  }

  export type WhatsAppMinAggregateInputType = {
    phoneNumber?: true
    name?: true
    userName?: true
    labels?: true
    chatId?: true
    lastActivity?: true
    threadId?: true
    threadTokenCount?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
  }

  export type WhatsAppMaxAggregateInputType = {
    phoneNumber?: true
    name?: true
    userName?: true
    labels?: true
    chatId?: true
    lastActivity?: true
    threadId?: true
    threadTokenCount?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
  }

  export type WhatsAppCountAggregateInputType = {
    phoneNumber?: true
    name?: true
    userName?: true
    labels?: true
    chatId?: true
    lastActivity?: true
    threadId?: true
    threadTokenCount?: true
    profileStatus?: true
    proximaAccion?: true
    fechaProximaAccion?: true
    prioridad?: true
    _all?: true
  }

  export type WhatsAppAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WhatsApp to aggregate.
     */
    where?: WhatsAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WhatsApps to fetch.
     */
    orderBy?: WhatsAppOrderByWithRelationInput | WhatsAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WhatsAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WhatsApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WhatsApps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WhatsApps
    **/
    _count?: true | WhatsAppCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WhatsAppAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WhatsAppSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WhatsAppMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WhatsAppMaxAggregateInputType
  }

  export type GetWhatsAppAggregateType<T extends WhatsAppAggregateArgs> = {
        [P in keyof T & keyof AggregateWhatsApp]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWhatsApp[P]>
      : GetScalarType<T[P], AggregateWhatsApp[P]>
  }




  export type WhatsAppGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WhatsAppWhereInput
    orderBy?: WhatsAppOrderByWithAggregationInput | WhatsAppOrderByWithAggregationInput[]
    by: WhatsAppScalarFieldEnum[] | WhatsAppScalarFieldEnum
    having?: WhatsAppScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WhatsAppCountAggregateInputType | true
    _avg?: WhatsAppAvgAggregateInputType
    _sum?: WhatsAppSumAggregateInputType
    _min?: WhatsAppMinAggregateInputType
    _max?: WhatsAppMaxAggregateInputType
  }

  export type WhatsAppGroupByOutputType = {
    phoneNumber: string
    name: string | null
    userName: string | null
    labels: string | null
    chatId: string | null
    lastActivity: Date
    threadId: string | null
    threadTokenCount: number | null
    profileStatus: string | null
    proximaAccion: string | null
    fechaProximaAccion: Date | null
    prioridad: number | null
    _count: WhatsAppCountAggregateOutputType | null
    _avg: WhatsAppAvgAggregateOutputType | null
    _sum: WhatsAppSumAggregateOutputType | null
    _min: WhatsAppMinAggregateOutputType | null
    _max: WhatsAppMaxAggregateOutputType | null
  }

  type GetWhatsAppGroupByPayload<T extends WhatsAppGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WhatsAppGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WhatsAppGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WhatsAppGroupByOutputType[P]>
            : GetScalarType<T[P], WhatsAppGroupByOutputType[P]>
        }
      >
    >


  export type WhatsAppSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }, ExtArgs["result"]["whatsApp"]>

  export type WhatsAppSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }, ExtArgs["result"]["whatsApp"]>

  export type WhatsAppSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }, ExtArgs["result"]["whatsApp"]>

  export type WhatsAppSelectScalar = {
    phoneNumber?: boolean
    name?: boolean
    userName?: boolean
    labels?: boolean
    chatId?: boolean
    lastActivity?: boolean
    threadId?: boolean
    threadTokenCount?: boolean
    profileStatus?: boolean
    proximaAccion?: boolean
    fechaProximaAccion?: boolean
    prioridad?: boolean
  }

  export type WhatsAppOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"phoneNumber" | "name" | "userName" | "labels" | "chatId" | "lastActivity" | "threadId" | "threadTokenCount" | "profileStatus" | "proximaAccion" | "fechaProximaAccion" | "prioridad", ExtArgs["result"]["whatsApp"]>

  export type $WhatsAppPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WhatsApp"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      phoneNumber: string
      name: string | null
      userName: string | null
      labels: string | null
      chatId: string | null
      lastActivity: Date
      threadId: string | null
      threadTokenCount: number | null
      profileStatus: string | null
      proximaAccion: string | null
      fechaProximaAccion: Date | null
      prioridad: number | null
    }, ExtArgs["result"]["whatsApp"]>
    composites: {}
  }

  type WhatsAppGetPayload<S extends boolean | null | undefined | WhatsAppDefaultArgs> = $Result.GetResult<Prisma.$WhatsAppPayload, S>

  type WhatsAppCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<WhatsAppFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WhatsAppCountAggregateInputType | true
    }

  export interface WhatsAppDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WhatsApp'], meta: { name: 'WhatsApp' } }
    /**
     * Find zero or one WhatsApp that matches the filter.
     * @param {WhatsAppFindUniqueArgs} args - Arguments to find a WhatsApp
     * @example
     * // Get one WhatsApp
     * const whatsApp = await prisma.whatsApp.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WhatsAppFindUniqueArgs>(args: SelectSubset<T, WhatsAppFindUniqueArgs<ExtArgs>>): Prisma__WhatsAppClient<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one WhatsApp that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WhatsAppFindUniqueOrThrowArgs} args - Arguments to find a WhatsApp
     * @example
     * // Get one WhatsApp
     * const whatsApp = await prisma.whatsApp.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WhatsAppFindUniqueOrThrowArgs>(args: SelectSubset<T, WhatsAppFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WhatsAppClient<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first WhatsApp that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WhatsAppFindFirstArgs} args - Arguments to find a WhatsApp
     * @example
     * // Get one WhatsApp
     * const whatsApp = await prisma.whatsApp.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WhatsAppFindFirstArgs>(args?: SelectSubset<T, WhatsAppFindFirstArgs<ExtArgs>>): Prisma__WhatsAppClient<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first WhatsApp that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WhatsAppFindFirstOrThrowArgs} args - Arguments to find a WhatsApp
     * @example
     * // Get one WhatsApp
     * const whatsApp = await prisma.whatsApp.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WhatsAppFindFirstOrThrowArgs>(args?: SelectSubset<T, WhatsAppFindFirstOrThrowArgs<ExtArgs>>): Prisma__WhatsAppClient<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more WhatsApps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WhatsAppFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WhatsApps
     * const whatsApps = await prisma.whatsApp.findMany()
     * 
     * // Get first 10 WhatsApps
     * const whatsApps = await prisma.whatsApp.findMany({ take: 10 })
     * 
     * // Only select the `phoneNumber`
     * const whatsAppWithPhoneNumberOnly = await prisma.whatsApp.findMany({ select: { phoneNumber: true } })
     * 
     */
    findMany<T extends WhatsAppFindManyArgs>(args?: SelectSubset<T, WhatsAppFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a WhatsApp.
     * @param {WhatsAppCreateArgs} args - Arguments to create a WhatsApp.
     * @example
     * // Create one WhatsApp
     * const WhatsApp = await prisma.whatsApp.create({
     *   data: {
     *     // ... data to create a WhatsApp
     *   }
     * })
     * 
     */
    create<T extends WhatsAppCreateArgs>(args: SelectSubset<T, WhatsAppCreateArgs<ExtArgs>>): Prisma__WhatsAppClient<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many WhatsApps.
     * @param {WhatsAppCreateManyArgs} args - Arguments to create many WhatsApps.
     * @example
     * // Create many WhatsApps
     * const whatsApp = await prisma.whatsApp.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WhatsAppCreateManyArgs>(args?: SelectSubset<T, WhatsAppCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many WhatsApps and returns the data saved in the database.
     * @param {WhatsAppCreateManyAndReturnArgs} args - Arguments to create many WhatsApps.
     * @example
     * // Create many WhatsApps
     * const whatsApp = await prisma.whatsApp.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many WhatsApps and only return the `phoneNumber`
     * const whatsAppWithPhoneNumberOnly = await prisma.whatsApp.createManyAndReturn({
     *   select: { phoneNumber: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WhatsAppCreateManyAndReturnArgs>(args?: SelectSubset<T, WhatsAppCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a WhatsApp.
     * @param {WhatsAppDeleteArgs} args - Arguments to delete one WhatsApp.
     * @example
     * // Delete one WhatsApp
     * const WhatsApp = await prisma.whatsApp.delete({
     *   where: {
     *     // ... filter to delete one WhatsApp
     *   }
     * })
     * 
     */
    delete<T extends WhatsAppDeleteArgs>(args: SelectSubset<T, WhatsAppDeleteArgs<ExtArgs>>): Prisma__WhatsAppClient<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one WhatsApp.
     * @param {WhatsAppUpdateArgs} args - Arguments to update one WhatsApp.
     * @example
     * // Update one WhatsApp
     * const whatsApp = await prisma.whatsApp.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WhatsAppUpdateArgs>(args: SelectSubset<T, WhatsAppUpdateArgs<ExtArgs>>): Prisma__WhatsAppClient<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more WhatsApps.
     * @param {WhatsAppDeleteManyArgs} args - Arguments to filter WhatsApps to delete.
     * @example
     * // Delete a few WhatsApps
     * const { count } = await prisma.whatsApp.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WhatsAppDeleteManyArgs>(args?: SelectSubset<T, WhatsAppDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WhatsApps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WhatsAppUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WhatsApps
     * const whatsApp = await prisma.whatsApp.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WhatsAppUpdateManyArgs>(args: SelectSubset<T, WhatsAppUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WhatsApps and returns the data updated in the database.
     * @param {WhatsAppUpdateManyAndReturnArgs} args - Arguments to update many WhatsApps.
     * @example
     * // Update many WhatsApps
     * const whatsApp = await prisma.whatsApp.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more WhatsApps and only return the `phoneNumber`
     * const whatsAppWithPhoneNumberOnly = await prisma.whatsApp.updateManyAndReturn({
     *   select: { phoneNumber: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends WhatsAppUpdateManyAndReturnArgs>(args: SelectSubset<T, WhatsAppUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one WhatsApp.
     * @param {WhatsAppUpsertArgs} args - Arguments to update or create a WhatsApp.
     * @example
     * // Update or create a WhatsApp
     * const whatsApp = await prisma.whatsApp.upsert({
     *   create: {
     *     // ... data to create a WhatsApp
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WhatsApp we want to update
     *   }
     * })
     */
    upsert<T extends WhatsAppUpsertArgs>(args: SelectSubset<T, WhatsAppUpsertArgs<ExtArgs>>): Prisma__WhatsAppClient<$Result.GetResult<Prisma.$WhatsAppPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of WhatsApps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WhatsAppCountArgs} args - Arguments to filter WhatsApps to count.
     * @example
     * // Count the number of WhatsApps
     * const count = await prisma.whatsApp.count({
     *   where: {
     *     // ... the filter for the WhatsApps we want to count
     *   }
     * })
    **/
    count<T extends WhatsAppCountArgs>(
      args?: Subset<T, WhatsAppCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WhatsAppCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WhatsApp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WhatsAppAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WhatsAppAggregateArgs>(args: Subset<T, WhatsAppAggregateArgs>): Prisma.PrismaPromise<GetWhatsAppAggregateType<T>>

    /**
     * Group by WhatsApp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WhatsAppGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WhatsAppGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WhatsAppGroupByArgs['orderBy'] }
        : { orderBy?: WhatsAppGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WhatsAppGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWhatsAppGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WhatsApp model
   */
  readonly fields: WhatsAppFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WhatsApp.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WhatsAppClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WhatsApp model
   */
  interface WhatsAppFieldRefs {
    readonly phoneNumber: FieldRef<"WhatsApp", 'String'>
    readonly name: FieldRef<"WhatsApp", 'String'>
    readonly userName: FieldRef<"WhatsApp", 'String'>
    readonly labels: FieldRef<"WhatsApp", 'String'>
    readonly chatId: FieldRef<"WhatsApp", 'String'>
    readonly lastActivity: FieldRef<"WhatsApp", 'DateTime'>
    readonly threadId: FieldRef<"WhatsApp", 'String'>
    readonly threadTokenCount: FieldRef<"WhatsApp", 'Int'>
    readonly profileStatus: FieldRef<"WhatsApp", 'String'>
    readonly proximaAccion: FieldRef<"WhatsApp", 'String'>
    readonly fechaProximaAccion: FieldRef<"WhatsApp", 'DateTime'>
    readonly prioridad: FieldRef<"WhatsApp", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * WhatsApp findUnique
   */
  export type WhatsAppFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * Filter, which WhatsApp to fetch.
     */
    where: WhatsAppWhereUniqueInput
  }

  /**
   * WhatsApp findUniqueOrThrow
   */
  export type WhatsAppFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * Filter, which WhatsApp to fetch.
     */
    where: WhatsAppWhereUniqueInput
  }

  /**
   * WhatsApp findFirst
   */
  export type WhatsAppFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * Filter, which WhatsApp to fetch.
     */
    where?: WhatsAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WhatsApps to fetch.
     */
    orderBy?: WhatsAppOrderByWithRelationInput | WhatsAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WhatsApps.
     */
    cursor?: WhatsAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WhatsApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WhatsApps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WhatsApps.
     */
    distinct?: WhatsAppScalarFieldEnum | WhatsAppScalarFieldEnum[]
  }

  /**
   * WhatsApp findFirstOrThrow
   */
  export type WhatsAppFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * Filter, which WhatsApp to fetch.
     */
    where?: WhatsAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WhatsApps to fetch.
     */
    orderBy?: WhatsAppOrderByWithRelationInput | WhatsAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WhatsApps.
     */
    cursor?: WhatsAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WhatsApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WhatsApps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WhatsApps.
     */
    distinct?: WhatsAppScalarFieldEnum | WhatsAppScalarFieldEnum[]
  }

  /**
   * WhatsApp findMany
   */
  export type WhatsAppFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * Filter, which WhatsApps to fetch.
     */
    where?: WhatsAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WhatsApps to fetch.
     */
    orderBy?: WhatsAppOrderByWithRelationInput | WhatsAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WhatsApps.
     */
    cursor?: WhatsAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WhatsApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WhatsApps.
     */
    skip?: number
    distinct?: WhatsAppScalarFieldEnum | WhatsAppScalarFieldEnum[]
  }

  /**
   * WhatsApp create
   */
  export type WhatsAppCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * The data needed to create a WhatsApp.
     */
    data: XOR<WhatsAppCreateInput, WhatsAppUncheckedCreateInput>
  }

  /**
   * WhatsApp createMany
   */
  export type WhatsAppCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WhatsApps.
     */
    data: WhatsAppCreateManyInput | WhatsAppCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * WhatsApp createManyAndReturn
   */
  export type WhatsAppCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * The data used to create many WhatsApps.
     */
    data: WhatsAppCreateManyInput | WhatsAppCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * WhatsApp update
   */
  export type WhatsAppUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * The data needed to update a WhatsApp.
     */
    data: XOR<WhatsAppUpdateInput, WhatsAppUncheckedUpdateInput>
    /**
     * Choose, which WhatsApp to update.
     */
    where: WhatsAppWhereUniqueInput
  }

  /**
   * WhatsApp updateMany
   */
  export type WhatsAppUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WhatsApps.
     */
    data: XOR<WhatsAppUpdateManyMutationInput, WhatsAppUncheckedUpdateManyInput>
    /**
     * Filter which WhatsApps to update
     */
    where?: WhatsAppWhereInput
    /**
     * Limit how many WhatsApps to update.
     */
    limit?: number
  }

  /**
   * WhatsApp updateManyAndReturn
   */
  export type WhatsAppUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * The data used to update WhatsApps.
     */
    data: XOR<WhatsAppUpdateManyMutationInput, WhatsAppUncheckedUpdateManyInput>
    /**
     * Filter which WhatsApps to update
     */
    where?: WhatsAppWhereInput
    /**
     * Limit how many WhatsApps to update.
     */
    limit?: number
  }

  /**
   * WhatsApp upsert
   */
  export type WhatsAppUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * The filter to search for the WhatsApp to update in case it exists.
     */
    where: WhatsAppWhereUniqueInput
    /**
     * In case the WhatsApp found by the `where` argument doesn't exist, create a new WhatsApp with this data.
     */
    create: XOR<WhatsAppCreateInput, WhatsAppUncheckedCreateInput>
    /**
     * In case the WhatsApp was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WhatsAppUpdateInput, WhatsAppUncheckedUpdateInput>
  }

  /**
   * WhatsApp delete
   */
  export type WhatsAppDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
    /**
     * Filter which WhatsApp to delete.
     */
    where: WhatsAppWhereUniqueInput
  }

  /**
   * WhatsApp deleteMany
   */
  export type WhatsAppDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WhatsApps to delete
     */
    where?: WhatsAppWhereInput
    /**
     * Limit how many WhatsApps to delete.
     */
    limit?: number
  }

  /**
   * WhatsApp without action
   */
  export type WhatsAppDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsApp
     */
    select?: WhatsAppSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WhatsApp
     */
    omit?: WhatsAppOmit<ExtArgs> | null
  }


  /**
   * Model Apartamentos
   */

  export type AggregateApartamentos = {
    _count: ApartamentosCountAggregateOutputType | null
    _avg: ApartamentosAvgAggregateOutputType | null
    _sum: ApartamentosSumAggregateOutputType | null
    _min: ApartamentosMinAggregateOutputType | null
    _max: ApartamentosMaxAggregateOutputType | null
  }

  export type ApartamentosAvgAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    capacity: number | null
  }

  export type ApartamentosSumAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    capacity: number | null
  }

  export type ApartamentosMinAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    roomName: string | null
    capacity: number | null
  }

  export type ApartamentosMaxAggregateOutputType = {
    id: number | null
    propertyId: number | null
    roomId: number | null
    roomName: string | null
    capacity: number | null
  }

  export type ApartamentosCountAggregateOutputType = {
    id: number
    propertyId: number
    roomId: number
    roomName: number
    extraCharge: number
    capacity: number
    _all: number
  }


  export type ApartamentosAvgAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    capacity?: true
  }

  export type ApartamentosSumAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    capacity?: true
  }

  export type ApartamentosMinAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    roomName?: true
    capacity?: true
  }

  export type ApartamentosMaxAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    roomName?: true
    capacity?: true
  }

  export type ApartamentosCountAggregateInputType = {
    id?: true
    propertyId?: true
    roomId?: true
    roomName?: true
    extraCharge?: true
    capacity?: true
    _all?: true
  }

  export type ApartamentosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Apartamentos to aggregate.
     */
    where?: ApartamentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Apartamentos to fetch.
     */
    orderBy?: ApartamentosOrderByWithRelationInput | ApartamentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApartamentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Apartamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Apartamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Apartamentos
    **/
    _count?: true | ApartamentosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApartamentosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApartamentosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApartamentosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApartamentosMaxAggregateInputType
  }

  export type GetApartamentosAggregateType<T extends ApartamentosAggregateArgs> = {
        [P in keyof T & keyof AggregateApartamentos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApartamentos[P]>
      : GetScalarType<T[P], AggregateApartamentos[P]>
  }




  export type ApartamentosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApartamentosWhereInput
    orderBy?: ApartamentosOrderByWithAggregationInput | ApartamentosOrderByWithAggregationInput[]
    by: ApartamentosScalarFieldEnum[] | ApartamentosScalarFieldEnum
    having?: ApartamentosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApartamentosCountAggregateInputType | true
    _avg?: ApartamentosAvgAggregateInputType
    _sum?: ApartamentosSumAggregateInputType
    _min?: ApartamentosMinAggregateInputType
    _max?: ApartamentosMaxAggregateInputType
  }

  export type ApartamentosGroupByOutputType = {
    id: number
    propertyId: number
    roomId: number
    roomName: string
    extraCharge: JsonValue
    capacity: number
    _count: ApartamentosCountAggregateOutputType | null
    _avg: ApartamentosAvgAggregateOutputType | null
    _sum: ApartamentosSumAggregateOutputType | null
    _min: ApartamentosMinAggregateOutputType | null
    _max: ApartamentosMaxAggregateOutputType | null
  }

  type GetApartamentosGroupByPayload<T extends ApartamentosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApartamentosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApartamentosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApartamentosGroupByOutputType[P]>
            : GetScalarType<T[P], ApartamentosGroupByOutputType[P]>
        }
      >
    >


  export type ApartamentosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }, ExtArgs["result"]["apartamentos"]>

  export type ApartamentosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }, ExtArgs["result"]["apartamentos"]>

  export type ApartamentosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }, ExtArgs["result"]["apartamentos"]>

  export type ApartamentosSelectScalar = {
    id?: boolean
    propertyId?: boolean
    roomId?: boolean
    roomName?: boolean
    extraCharge?: boolean
    capacity?: boolean
  }

  export type ApartamentosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "propertyId" | "roomId" | "roomName" | "extraCharge" | "capacity", ExtArgs["result"]["apartamentos"]>

  export type $ApartamentosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Apartamentos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      propertyId: number
      roomId: number
      roomName: string
      extraCharge: Prisma.JsonValue
      capacity: number
    }, ExtArgs["result"]["apartamentos"]>
    composites: {}
  }

  type ApartamentosGetPayload<S extends boolean | null | undefined | ApartamentosDefaultArgs> = $Result.GetResult<Prisma.$ApartamentosPayload, S>

  type ApartamentosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ApartamentosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApartamentosCountAggregateInputType | true
    }

  export interface ApartamentosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Apartamentos'], meta: { name: 'Apartamentos' } }
    /**
     * Find zero or one Apartamentos that matches the filter.
     * @param {ApartamentosFindUniqueArgs} args - Arguments to find a Apartamentos
     * @example
     * // Get one Apartamentos
     * const apartamentos = await prisma.apartamentos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApartamentosFindUniqueArgs>(args: SelectSubset<T, ApartamentosFindUniqueArgs<ExtArgs>>): Prisma__ApartamentosClient<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Apartamentos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ApartamentosFindUniqueOrThrowArgs} args - Arguments to find a Apartamentos
     * @example
     * // Get one Apartamentos
     * const apartamentos = await prisma.apartamentos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApartamentosFindUniqueOrThrowArgs>(args: SelectSubset<T, ApartamentosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApartamentosClient<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Apartamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApartamentosFindFirstArgs} args - Arguments to find a Apartamentos
     * @example
     * // Get one Apartamentos
     * const apartamentos = await prisma.apartamentos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApartamentosFindFirstArgs>(args?: SelectSubset<T, ApartamentosFindFirstArgs<ExtArgs>>): Prisma__ApartamentosClient<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Apartamentos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApartamentosFindFirstOrThrowArgs} args - Arguments to find a Apartamentos
     * @example
     * // Get one Apartamentos
     * const apartamentos = await prisma.apartamentos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApartamentosFindFirstOrThrowArgs>(args?: SelectSubset<T, ApartamentosFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApartamentosClient<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Apartamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApartamentosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Apartamentos
     * const apartamentos = await prisma.apartamentos.findMany()
     * 
     * // Get first 10 Apartamentos
     * const apartamentos = await prisma.apartamentos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const apartamentosWithIdOnly = await prisma.apartamentos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApartamentosFindManyArgs>(args?: SelectSubset<T, ApartamentosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Apartamentos.
     * @param {ApartamentosCreateArgs} args - Arguments to create a Apartamentos.
     * @example
     * // Create one Apartamentos
     * const Apartamentos = await prisma.apartamentos.create({
     *   data: {
     *     // ... data to create a Apartamentos
     *   }
     * })
     * 
     */
    create<T extends ApartamentosCreateArgs>(args: SelectSubset<T, ApartamentosCreateArgs<ExtArgs>>): Prisma__ApartamentosClient<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Apartamentos.
     * @param {ApartamentosCreateManyArgs} args - Arguments to create many Apartamentos.
     * @example
     * // Create many Apartamentos
     * const apartamentos = await prisma.apartamentos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApartamentosCreateManyArgs>(args?: SelectSubset<T, ApartamentosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Apartamentos and returns the data saved in the database.
     * @param {ApartamentosCreateManyAndReturnArgs} args - Arguments to create many Apartamentos.
     * @example
     * // Create many Apartamentos
     * const apartamentos = await prisma.apartamentos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Apartamentos and only return the `id`
     * const apartamentosWithIdOnly = await prisma.apartamentos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApartamentosCreateManyAndReturnArgs>(args?: SelectSubset<T, ApartamentosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Apartamentos.
     * @param {ApartamentosDeleteArgs} args - Arguments to delete one Apartamentos.
     * @example
     * // Delete one Apartamentos
     * const Apartamentos = await prisma.apartamentos.delete({
     *   where: {
     *     // ... filter to delete one Apartamentos
     *   }
     * })
     * 
     */
    delete<T extends ApartamentosDeleteArgs>(args: SelectSubset<T, ApartamentosDeleteArgs<ExtArgs>>): Prisma__ApartamentosClient<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Apartamentos.
     * @param {ApartamentosUpdateArgs} args - Arguments to update one Apartamentos.
     * @example
     * // Update one Apartamentos
     * const apartamentos = await prisma.apartamentos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApartamentosUpdateArgs>(args: SelectSubset<T, ApartamentosUpdateArgs<ExtArgs>>): Prisma__ApartamentosClient<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Apartamentos.
     * @param {ApartamentosDeleteManyArgs} args - Arguments to filter Apartamentos to delete.
     * @example
     * // Delete a few Apartamentos
     * const { count } = await prisma.apartamentos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApartamentosDeleteManyArgs>(args?: SelectSubset<T, ApartamentosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Apartamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApartamentosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Apartamentos
     * const apartamentos = await prisma.apartamentos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApartamentosUpdateManyArgs>(args: SelectSubset<T, ApartamentosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Apartamentos and returns the data updated in the database.
     * @param {ApartamentosUpdateManyAndReturnArgs} args - Arguments to update many Apartamentos.
     * @example
     * // Update many Apartamentos
     * const apartamentos = await prisma.apartamentos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Apartamentos and only return the `id`
     * const apartamentosWithIdOnly = await prisma.apartamentos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ApartamentosUpdateManyAndReturnArgs>(args: SelectSubset<T, ApartamentosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Apartamentos.
     * @param {ApartamentosUpsertArgs} args - Arguments to update or create a Apartamentos.
     * @example
     * // Update or create a Apartamentos
     * const apartamentos = await prisma.apartamentos.upsert({
     *   create: {
     *     // ... data to create a Apartamentos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Apartamentos we want to update
     *   }
     * })
     */
    upsert<T extends ApartamentosUpsertArgs>(args: SelectSubset<T, ApartamentosUpsertArgs<ExtArgs>>): Prisma__ApartamentosClient<$Result.GetResult<Prisma.$ApartamentosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Apartamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApartamentosCountArgs} args - Arguments to filter Apartamentos to count.
     * @example
     * // Count the number of Apartamentos
     * const count = await prisma.apartamentos.count({
     *   where: {
     *     // ... the filter for the Apartamentos we want to count
     *   }
     * })
    **/
    count<T extends ApartamentosCountArgs>(
      args?: Subset<T, ApartamentosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApartamentosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Apartamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApartamentosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApartamentosAggregateArgs>(args: Subset<T, ApartamentosAggregateArgs>): Prisma.PrismaPromise<GetApartamentosAggregateType<T>>

    /**
     * Group by Apartamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApartamentosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApartamentosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApartamentosGroupByArgs['orderBy'] }
        : { orderBy?: ApartamentosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApartamentosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApartamentosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Apartamentos model
   */
  readonly fields: ApartamentosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Apartamentos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApartamentosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Apartamentos model
   */
  interface ApartamentosFieldRefs {
    readonly id: FieldRef<"Apartamentos", 'Int'>
    readonly propertyId: FieldRef<"Apartamentos", 'Int'>
    readonly roomId: FieldRef<"Apartamentos", 'Int'>
    readonly roomName: FieldRef<"Apartamentos", 'String'>
    readonly extraCharge: FieldRef<"Apartamentos", 'Json'>
    readonly capacity: FieldRef<"Apartamentos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Apartamentos findUnique
   */
  export type ApartamentosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * Filter, which Apartamentos to fetch.
     */
    where: ApartamentosWhereUniqueInput
  }

  /**
   * Apartamentos findUniqueOrThrow
   */
  export type ApartamentosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * Filter, which Apartamentos to fetch.
     */
    where: ApartamentosWhereUniqueInput
  }

  /**
   * Apartamentos findFirst
   */
  export type ApartamentosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * Filter, which Apartamentos to fetch.
     */
    where?: ApartamentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Apartamentos to fetch.
     */
    orderBy?: ApartamentosOrderByWithRelationInput | ApartamentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Apartamentos.
     */
    cursor?: ApartamentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Apartamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Apartamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Apartamentos.
     */
    distinct?: ApartamentosScalarFieldEnum | ApartamentosScalarFieldEnum[]
  }

  /**
   * Apartamentos findFirstOrThrow
   */
  export type ApartamentosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * Filter, which Apartamentos to fetch.
     */
    where?: ApartamentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Apartamentos to fetch.
     */
    orderBy?: ApartamentosOrderByWithRelationInput | ApartamentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Apartamentos.
     */
    cursor?: ApartamentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Apartamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Apartamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Apartamentos.
     */
    distinct?: ApartamentosScalarFieldEnum | ApartamentosScalarFieldEnum[]
  }

  /**
   * Apartamentos findMany
   */
  export type ApartamentosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * Filter, which Apartamentos to fetch.
     */
    where?: ApartamentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Apartamentos to fetch.
     */
    orderBy?: ApartamentosOrderByWithRelationInput | ApartamentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Apartamentos.
     */
    cursor?: ApartamentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Apartamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Apartamentos.
     */
    skip?: number
    distinct?: ApartamentosScalarFieldEnum | ApartamentosScalarFieldEnum[]
  }

  /**
   * Apartamentos create
   */
  export type ApartamentosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * The data needed to create a Apartamentos.
     */
    data: XOR<ApartamentosCreateInput, ApartamentosUncheckedCreateInput>
  }

  /**
   * Apartamentos createMany
   */
  export type ApartamentosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Apartamentos.
     */
    data: ApartamentosCreateManyInput | ApartamentosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Apartamentos createManyAndReturn
   */
  export type ApartamentosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * The data used to create many Apartamentos.
     */
    data: ApartamentosCreateManyInput | ApartamentosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Apartamentos update
   */
  export type ApartamentosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * The data needed to update a Apartamentos.
     */
    data: XOR<ApartamentosUpdateInput, ApartamentosUncheckedUpdateInput>
    /**
     * Choose, which Apartamentos to update.
     */
    where: ApartamentosWhereUniqueInput
  }

  /**
   * Apartamentos updateMany
   */
  export type ApartamentosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Apartamentos.
     */
    data: XOR<ApartamentosUpdateManyMutationInput, ApartamentosUncheckedUpdateManyInput>
    /**
     * Filter which Apartamentos to update
     */
    where?: ApartamentosWhereInput
    /**
     * Limit how many Apartamentos to update.
     */
    limit?: number
  }

  /**
   * Apartamentos updateManyAndReturn
   */
  export type ApartamentosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * The data used to update Apartamentos.
     */
    data: XOR<ApartamentosUpdateManyMutationInput, ApartamentosUncheckedUpdateManyInput>
    /**
     * Filter which Apartamentos to update
     */
    where?: ApartamentosWhereInput
    /**
     * Limit how many Apartamentos to update.
     */
    limit?: number
  }

  /**
   * Apartamentos upsert
   */
  export type ApartamentosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * The filter to search for the Apartamentos to update in case it exists.
     */
    where: ApartamentosWhereUniqueInput
    /**
     * In case the Apartamentos found by the `where` argument doesn't exist, create a new Apartamentos with this data.
     */
    create: XOR<ApartamentosCreateInput, ApartamentosUncheckedCreateInput>
    /**
     * In case the Apartamentos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApartamentosUpdateInput, ApartamentosUncheckedUpdateInput>
  }

  /**
   * Apartamentos delete
   */
  export type ApartamentosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
    /**
     * Filter which Apartamentos to delete.
     */
    where: ApartamentosWhereUniqueInput
  }

  /**
   * Apartamentos deleteMany
   */
  export type ApartamentosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Apartamentos to delete
     */
    where?: ApartamentosWhereInput
    /**
     * Limit how many Apartamentos to delete.
     */
    limit?: number
  }

  /**
   * Apartamentos without action
   */
  export type ApartamentosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Apartamentos
     */
    select?: ApartamentosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Apartamentos
     */
    omit?: ApartamentosOmit<ExtArgs> | null
  }


  /**
   * Model Reservas
   */

  export type AggregateReservas = {
    _count: ReservasCountAggregateOutputType | null
    _avg: ReservasAvgAggregateOutputType | null
    _sum: ReservasSumAggregateOutputType | null
    _min: ReservasMinAggregateOutputType | null
    _max: ReservasMaxAggregateOutputType | null
  }

  export type ReservasAvgAggregateOutputType = {
    id: number | null
    numNights: number | null
    totalPersons: number | null
  }

  export type ReservasSumAggregateOutputType = {
    id: number | null
    numNights: number | null
    totalPersons: number | null
  }

  export type ReservasMinAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    status: string | null
    internalNotes: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    numNights: number | null
    totalPersons: number | null
    totalCharges: string | null
    totalPayments: string | null
    balance: string | null
    basePrice: string | null
    channel: string | null
    email: string | null
    apiReference: string | null
    notes: string | null
    bookingDate: string | null
    modifiedDate: string | null
    lastUpdatedBD: Date | null
    BDStatus: string | null
  }

  export type ReservasMaxAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    status: string | null
    internalNotes: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    numNights: number | null
    totalPersons: number | null
    totalCharges: string | null
    totalPayments: string | null
    balance: string | null
    basePrice: string | null
    channel: string | null
    email: string | null
    apiReference: string | null
    notes: string | null
    bookingDate: string | null
    modifiedDate: string | null
    lastUpdatedBD: Date | null
    BDStatus: string | null
  }

  export type ReservasCountAggregateOutputType = {
    id: number
    bookingId: number
    phone: number
    guestName: number
    status: number
    internalNotes: number
    propertyName: number
    arrivalDate: number
    departureDate: number
    numNights: number
    totalPersons: number
    totalCharges: number
    totalPayments: number
    balance: number
    basePrice: number
    channel: number
    email: number
    apiReference: number
    charges: number
    payments: number
    messages: number
    infoItems: number
    notes: number
    bookingDate: number
    modifiedDate: number
    lastUpdatedBD: number
    raw: number
    BDStatus: number
    _all: number
  }


  export type ReservasAvgAggregateInputType = {
    id?: true
    numNights?: true
    totalPersons?: true
  }

  export type ReservasSumAggregateInputType = {
    id?: true
    numNights?: true
    totalPersons?: true
  }

  export type ReservasMinAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    status?: true
    internalNotes?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    totalCharges?: true
    totalPayments?: true
    balance?: true
    basePrice?: true
    channel?: true
    email?: true
    apiReference?: true
    notes?: true
    bookingDate?: true
    modifiedDate?: true
    lastUpdatedBD?: true
    BDStatus?: true
  }

  export type ReservasMaxAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    status?: true
    internalNotes?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    totalCharges?: true
    totalPayments?: true
    balance?: true
    basePrice?: true
    channel?: true
    email?: true
    apiReference?: true
    notes?: true
    bookingDate?: true
    modifiedDate?: true
    lastUpdatedBD?: true
    BDStatus?: true
  }

  export type ReservasCountAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    status?: true
    internalNotes?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    numNights?: true
    totalPersons?: true
    totalCharges?: true
    totalPayments?: true
    balance?: true
    basePrice?: true
    channel?: true
    email?: true
    apiReference?: true
    charges?: true
    payments?: true
    messages?: true
    infoItems?: true
    notes?: true
    bookingDate?: true
    modifiedDate?: true
    lastUpdatedBD?: true
    raw?: true
    BDStatus?: true
    _all?: true
  }

  export type ReservasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to aggregate.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservas
    **/
    _count?: true | ReservasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservasMaxAggregateInputType
  }

  export type GetReservasAggregateType<T extends ReservasAggregateArgs> = {
        [P in keyof T & keyof AggregateReservas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservas[P]>
      : GetScalarType<T[P], AggregateReservas[P]>
  }




  export type ReservasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservasWhereInput
    orderBy?: ReservasOrderByWithAggregationInput | ReservasOrderByWithAggregationInput[]
    by: ReservasScalarFieldEnum[] | ReservasScalarFieldEnum
    having?: ReservasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservasCountAggregateInputType | true
    _avg?: ReservasAvgAggregateInputType
    _sum?: ReservasSumAggregateInputType
    _min?: ReservasMinAggregateInputType
    _max?: ReservasMaxAggregateInputType
  }

  export type ReservasGroupByOutputType = {
    id: number
    bookingId: string
    phone: string | null
    guestName: string | null
    status: string | null
    internalNotes: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    numNights: number | null
    totalPersons: number | null
    totalCharges: string | null
    totalPayments: string | null
    balance: string | null
    basePrice: string | null
    channel: string | null
    email: string | null
    apiReference: string | null
    charges: JsonValue
    payments: JsonValue
    messages: JsonValue
    infoItems: JsonValue
    notes: string | null
    bookingDate: string | null
    modifiedDate: string | null
    lastUpdatedBD: Date
    raw: JsonValue | null
    BDStatus: string | null
    _count: ReservasCountAggregateOutputType | null
    _avg: ReservasAvgAggregateOutputType | null
    _sum: ReservasSumAggregateOutputType | null
    _min: ReservasMinAggregateOutputType | null
    _max: ReservasMaxAggregateOutputType | null
  }

  type GetReservasGroupByPayload<T extends ReservasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservasGroupByOutputType[P]>
            : GetScalarType<T[P], ReservasGroupByOutputType[P]>
        }
      >
    >


  export type ReservasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
    Prospectos?: boolean | Reservas$ProspectosArgs<ExtArgs>
  }, ExtArgs["result"]["reservas"]>

  export type ReservasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
  }, ExtArgs["result"]["reservas"]>

  export type ReservasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
  }, ExtArgs["result"]["reservas"]>

  export type ReservasSelectScalar = {
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    status?: boolean
    internalNotes?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    numNights?: boolean
    totalPersons?: boolean
    totalCharges?: boolean
    totalPayments?: boolean
    balance?: boolean
    basePrice?: boolean
    channel?: boolean
    email?: boolean
    apiReference?: boolean
    charges?: boolean
    payments?: boolean
    messages?: boolean
    infoItems?: boolean
    notes?: boolean
    bookingDate?: boolean
    modifiedDate?: boolean
    lastUpdatedBD?: boolean
    raw?: boolean
    BDStatus?: boolean
  }

  export type ReservasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bookingId" | "phone" | "guestName" | "status" | "internalNotes" | "propertyName" | "arrivalDate" | "departureDate" | "numNights" | "totalPersons" | "totalCharges" | "totalPayments" | "balance" | "basePrice" | "channel" | "email" | "apiReference" | "charges" | "payments" | "messages" | "infoItems" | "notes" | "bookingDate" | "modifiedDate" | "lastUpdatedBD" | "raw" | "BDStatus", ExtArgs["result"]["reservas"]>
  export type ReservasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Prospectos?: boolean | Reservas$ProspectosArgs<ExtArgs>
  }
  export type ReservasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ReservasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ReservasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reservas"
    objects: {
      Prospectos: Prisma.$ProspectosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bookingId: string
      phone: string | null
      guestName: string | null
      status: string | null
      internalNotes: string | null
      propertyName: string | null
      arrivalDate: string | null
      departureDate: string | null
      numNights: number | null
      totalPersons: number | null
      totalCharges: string | null
      totalPayments: string | null
      balance: string | null
      basePrice: string | null
      channel: string | null
      email: string | null
      apiReference: string | null
      charges: Prisma.JsonValue
      payments: Prisma.JsonValue
      messages: Prisma.JsonValue
      infoItems: Prisma.JsonValue
      notes: string | null
      bookingDate: string | null
      modifiedDate: string | null
      lastUpdatedBD: Date
      raw: Prisma.JsonValue | null
      BDStatus: string | null
    }, ExtArgs["result"]["reservas"]>
    composites: {}
  }

  type ReservasGetPayload<S extends boolean | null | undefined | ReservasDefaultArgs> = $Result.GetResult<Prisma.$ReservasPayload, S>

  type ReservasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservasCountAggregateInputType | true
    }

  export interface ReservasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reservas'], meta: { name: 'Reservas' } }
    /**
     * Find zero or one Reservas that matches the filter.
     * @param {ReservasFindUniqueArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservasFindUniqueArgs>(args: SelectSubset<T, ReservasFindUniqueArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reservas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservasFindUniqueOrThrowArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservasFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindFirstArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservasFindFirstArgs>(args?: SelectSubset<T, ReservasFindFirstArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindFirstOrThrowArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservasFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservasFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservas
     * const reservas = await prisma.reservas.findMany()
     * 
     * // Get first 10 Reservas
     * const reservas = await prisma.reservas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservasWithIdOnly = await prisma.reservas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservasFindManyArgs>(args?: SelectSubset<T, ReservasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reservas.
     * @param {ReservasCreateArgs} args - Arguments to create a Reservas.
     * @example
     * // Create one Reservas
     * const Reservas = await prisma.reservas.create({
     *   data: {
     *     // ... data to create a Reservas
     *   }
     * })
     * 
     */
    create<T extends ReservasCreateArgs>(args: SelectSubset<T, ReservasCreateArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservas.
     * @param {ReservasCreateManyArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reservas = await prisma.reservas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservasCreateManyArgs>(args?: SelectSubset<T, ReservasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservas and returns the data saved in the database.
     * @param {ReservasCreateManyAndReturnArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reservas = await prisma.reservas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservas and only return the `id`
     * const reservasWithIdOnly = await prisma.reservas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservasCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reservas.
     * @param {ReservasDeleteArgs} args - Arguments to delete one Reservas.
     * @example
     * // Delete one Reservas
     * const Reservas = await prisma.reservas.delete({
     *   where: {
     *     // ... filter to delete one Reservas
     *   }
     * })
     * 
     */
    delete<T extends ReservasDeleteArgs>(args: SelectSubset<T, ReservasDeleteArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reservas.
     * @param {ReservasUpdateArgs} args - Arguments to update one Reservas.
     * @example
     * // Update one Reservas
     * const reservas = await prisma.reservas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservasUpdateArgs>(args: SelectSubset<T, ReservasUpdateArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservas.
     * @param {ReservasDeleteManyArgs} args - Arguments to filter Reservas to delete.
     * @example
     * // Delete a few Reservas
     * const { count } = await prisma.reservas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservasDeleteManyArgs>(args?: SelectSubset<T, ReservasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservas
     * const reservas = await prisma.reservas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservasUpdateManyArgs>(args: SelectSubset<T, ReservasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas and returns the data updated in the database.
     * @param {ReservasUpdateManyAndReturnArgs} args - Arguments to update many Reservas.
     * @example
     * // Update many Reservas
     * const reservas = await prisma.reservas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reservas and only return the `id`
     * const reservasWithIdOnly = await prisma.reservas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservasUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reservas.
     * @param {ReservasUpsertArgs} args - Arguments to update or create a Reservas.
     * @example
     * // Update or create a Reservas
     * const reservas = await prisma.reservas.upsert({
     *   create: {
     *     // ... data to create a Reservas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservas we want to update
     *   }
     * })
     */
    upsert<T extends ReservasUpsertArgs>(args: SelectSubset<T, ReservasUpsertArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasCountArgs} args - Arguments to filter Reservas to count.
     * @example
     * // Count the number of Reservas
     * const count = await prisma.reservas.count({
     *   where: {
     *     // ... the filter for the Reservas we want to count
     *   }
     * })
    **/
    count<T extends ReservasCountArgs>(
      args?: Subset<T, ReservasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservasAggregateArgs>(args: Subset<T, ReservasAggregateArgs>): Prisma.PrismaPromise<GetReservasAggregateType<T>>

    /**
     * Group by Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservasGroupByArgs['orderBy'] }
        : { orderBy?: ReservasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reservas model
   */
  readonly fields: ReservasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reservas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Prospectos<T extends Reservas$ProspectosArgs<ExtArgs> = {}>(args?: Subset<T, Reservas$ProspectosArgs<ExtArgs>>): Prisma__ProspectosClient<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reservas model
   */
  interface ReservasFieldRefs {
    readonly id: FieldRef<"Reservas", 'Int'>
    readonly bookingId: FieldRef<"Reservas", 'String'>
    readonly phone: FieldRef<"Reservas", 'String'>
    readonly guestName: FieldRef<"Reservas", 'String'>
    readonly status: FieldRef<"Reservas", 'String'>
    readonly internalNotes: FieldRef<"Reservas", 'String'>
    readonly propertyName: FieldRef<"Reservas", 'String'>
    readonly arrivalDate: FieldRef<"Reservas", 'String'>
    readonly departureDate: FieldRef<"Reservas", 'String'>
    readonly numNights: FieldRef<"Reservas", 'Int'>
    readonly totalPersons: FieldRef<"Reservas", 'Int'>
    readonly totalCharges: FieldRef<"Reservas", 'String'>
    readonly totalPayments: FieldRef<"Reservas", 'String'>
    readonly balance: FieldRef<"Reservas", 'String'>
    readonly basePrice: FieldRef<"Reservas", 'String'>
    readonly channel: FieldRef<"Reservas", 'String'>
    readonly email: FieldRef<"Reservas", 'String'>
    readonly apiReference: FieldRef<"Reservas", 'String'>
    readonly charges: FieldRef<"Reservas", 'Json'>
    readonly payments: FieldRef<"Reservas", 'Json'>
    readonly messages: FieldRef<"Reservas", 'Json'>
    readonly infoItems: FieldRef<"Reservas", 'Json'>
    readonly notes: FieldRef<"Reservas", 'String'>
    readonly bookingDate: FieldRef<"Reservas", 'String'>
    readonly modifiedDate: FieldRef<"Reservas", 'String'>
    readonly lastUpdatedBD: FieldRef<"Reservas", 'DateTime'>
    readonly raw: FieldRef<"Reservas", 'Json'>
    readonly BDStatus: FieldRef<"Reservas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Reservas findUnique
   */
  export type ReservasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas findUniqueOrThrow
   */
  export type ReservasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas findFirst
   */
  export type ReservasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Reservas findFirstOrThrow
   */
  export type ReservasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Reservas findMany
   */
  export type ReservasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Reservas create
   */
  export type ReservasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * The data needed to create a Reservas.
     */
    data: XOR<ReservasCreateInput, ReservasUncheckedCreateInput>
  }

  /**
   * Reservas createMany
   */
  export type ReservasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservas.
     */
    data: ReservasCreateManyInput | ReservasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reservas createManyAndReturn
   */
  export type ReservasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * The data used to create many Reservas.
     */
    data: ReservasCreateManyInput | ReservasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reservas update
   */
  export type ReservasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * The data needed to update a Reservas.
     */
    data: XOR<ReservasUpdateInput, ReservasUncheckedUpdateInput>
    /**
     * Choose, which Reservas to update.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas updateMany
   */
  export type ReservasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservasWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
  }

  /**
   * Reservas updateManyAndReturn
   */
  export type ReservasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservasWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
  }

  /**
   * Reservas upsert
   */
  export type ReservasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * The filter to search for the Reservas to update in case it exists.
     */
    where: ReservasWhereUniqueInput
    /**
     * In case the Reservas found by the `where` argument doesn't exist, create a new Reservas with this data.
     */
    create: XOR<ReservasCreateInput, ReservasUncheckedCreateInput>
    /**
     * In case the Reservas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservasUpdateInput, ReservasUncheckedUpdateInput>
  }

  /**
   * Reservas delete
   */
  export type ReservasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter which Reservas to delete.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas deleteMany
   */
  export type ReservasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to delete
     */
    where?: ReservasWhereInput
    /**
     * Limit how many Reservas to delete.
     */
    limit?: number
  }

  /**
   * Reservas.Prospectos
   */
  export type Reservas$ProspectosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    where?: ProspectosWhereInput
  }

  /**
   * Reservas without action
   */
  export type ReservasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
  }


  /**
   * Model Prospectos
   */

  export type AggregateProspectos = {
    _count: ProspectosCountAggregateOutputType | null
    _avg: ProspectosAvgAggregateOutputType | null
    _sum: ProspectosSumAggregateOutputType | null
    _min: ProspectosMinAggregateOutputType | null
    _max: ProspectosMaxAggregateOutputType | null
  }

  export type ProspectosAvgAggregateOutputType = {
    id: number | null
    totalPersons: number | null
    numNights: number | null
  }

  export type ProspectosSumAggregateOutputType = {
    id: number | null
    totalPersons: number | null
    numNights: number | null
  }

  export type ProspectosMinAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    totalPersons: number | null
    source: string | null
    channel: string | null
    priority: string | null
    notes: string | null
    createdAt: Date | null
    lastUpdatedLeads: Date | null
    numNights: number | null
    leadNotes: string | null
  }

  export type ProspectosMaxAggregateOutputType = {
    id: number | null
    bookingId: string | null
    phone: string | null
    guestName: string | null
    propertyName: string | null
    arrivalDate: string | null
    departureDate: string | null
    totalPersons: number | null
    source: string | null
    channel: string | null
    priority: string | null
    notes: string | null
    createdAt: Date | null
    lastUpdatedLeads: Date | null
    numNights: number | null
    leadNotes: string | null
  }

  export type ProspectosCountAggregateOutputType = {
    id: number
    bookingId: number
    phone: number
    guestName: number
    propertyName: number
    arrivalDate: number
    departureDate: number
    totalPersons: number
    source: number
    channel: number
    priority: number
    notes: number
    createdAt: number
    lastUpdatedLeads: number
    numNights: number
    leadNotes: number
    _all: number
  }


  export type ProspectosAvgAggregateInputType = {
    id?: true
    totalPersons?: true
    numNights?: true
  }

  export type ProspectosSumAggregateInputType = {
    id?: true
    totalPersons?: true
    numNights?: true
  }

  export type ProspectosMinAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    totalPersons?: true
    source?: true
    channel?: true
    priority?: true
    notes?: true
    createdAt?: true
    lastUpdatedLeads?: true
    numNights?: true
    leadNotes?: true
  }

  export type ProspectosMaxAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    totalPersons?: true
    source?: true
    channel?: true
    priority?: true
    notes?: true
    createdAt?: true
    lastUpdatedLeads?: true
    numNights?: true
    leadNotes?: true
  }

  export type ProspectosCountAggregateInputType = {
    id?: true
    bookingId?: true
    phone?: true
    guestName?: true
    propertyName?: true
    arrivalDate?: true
    departureDate?: true
    totalPersons?: true
    source?: true
    channel?: true
    priority?: true
    notes?: true
    createdAt?: true
    lastUpdatedLeads?: true
    numNights?: true
    leadNotes?: true
    _all?: true
  }

  export type ProspectosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prospectos to aggregate.
     */
    where?: ProspectosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prospectos to fetch.
     */
    orderBy?: ProspectosOrderByWithRelationInput | ProspectosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProspectosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prospectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prospectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Prospectos
    **/
    _count?: true | ProspectosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProspectosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProspectosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProspectosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProspectosMaxAggregateInputType
  }

  export type GetProspectosAggregateType<T extends ProspectosAggregateArgs> = {
        [P in keyof T & keyof AggregateProspectos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProspectos[P]>
      : GetScalarType<T[P], AggregateProspectos[P]>
  }




  export type ProspectosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProspectosWhereInput
    orderBy?: ProspectosOrderByWithAggregationInput | ProspectosOrderByWithAggregationInput[]
    by: ProspectosScalarFieldEnum[] | ProspectosScalarFieldEnum
    having?: ProspectosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProspectosCountAggregateInputType | true
    _avg?: ProspectosAvgAggregateInputType
    _sum?: ProspectosSumAggregateInputType
    _min?: ProspectosMinAggregateInputType
    _max?: ProspectosMaxAggregateInputType
  }

  export type ProspectosGroupByOutputType = {
    id: number
    bookingId: string | null
    phone: string
    guestName: string | null
    propertyName: string | null
    arrivalDate: string
    departureDate: string | null
    totalPersons: number | null
    source: string
    channel: string | null
    priority: string
    notes: string | null
    createdAt: Date
    lastUpdatedLeads: Date
    numNights: number | null
    leadNotes: string | null
    _count: ProspectosCountAggregateOutputType | null
    _avg: ProspectosAvgAggregateOutputType | null
    _sum: ProspectosSumAggregateOutputType | null
    _min: ProspectosMinAggregateOutputType | null
    _max: ProspectosMaxAggregateOutputType | null
  }

  type GetProspectosGroupByPayload<T extends ProspectosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProspectosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProspectosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProspectosGroupByOutputType[P]>
            : GetScalarType<T[P], ProspectosGroupByOutputType[P]>
        }
      >
    >


  export type ProspectosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    totalPersons?: boolean
    source?: boolean
    channel?: boolean
    priority?: boolean
    notes?: boolean
    createdAt?: boolean
    lastUpdatedLeads?: boolean
    numNights?: boolean
    leadNotes?: boolean
    Reservas?: boolean | Prospectos$ReservasArgs<ExtArgs>
  }, ExtArgs["result"]["prospectos"]>

  export type ProspectosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    totalPersons?: boolean
    source?: boolean
    channel?: boolean
    priority?: boolean
    notes?: boolean
    createdAt?: boolean
    lastUpdatedLeads?: boolean
    numNights?: boolean
    leadNotes?: boolean
    Reservas?: boolean | Prospectos$ReservasArgs<ExtArgs>
  }, ExtArgs["result"]["prospectos"]>

  export type ProspectosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    totalPersons?: boolean
    source?: boolean
    channel?: boolean
    priority?: boolean
    notes?: boolean
    createdAt?: boolean
    lastUpdatedLeads?: boolean
    numNights?: boolean
    leadNotes?: boolean
    Reservas?: boolean | Prospectos$ReservasArgs<ExtArgs>
  }, ExtArgs["result"]["prospectos"]>

  export type ProspectosSelectScalar = {
    id?: boolean
    bookingId?: boolean
    phone?: boolean
    guestName?: boolean
    propertyName?: boolean
    arrivalDate?: boolean
    departureDate?: boolean
    totalPersons?: boolean
    source?: boolean
    channel?: boolean
    priority?: boolean
    notes?: boolean
    createdAt?: boolean
    lastUpdatedLeads?: boolean
    numNights?: boolean
    leadNotes?: boolean
  }

  export type ProspectosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bookingId" | "phone" | "guestName" | "propertyName" | "arrivalDate" | "departureDate" | "totalPersons" | "source" | "channel" | "priority" | "notes" | "createdAt" | "lastUpdatedLeads" | "numNights" | "leadNotes", ExtArgs["result"]["prospectos"]>
  export type ProspectosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Reservas?: boolean | Prospectos$ReservasArgs<ExtArgs>
  }
  export type ProspectosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Reservas?: boolean | Prospectos$ReservasArgs<ExtArgs>
  }
  export type ProspectosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Reservas?: boolean | Prospectos$ReservasArgs<ExtArgs>
  }

  export type $ProspectosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Prospectos"
    objects: {
      Reservas: Prisma.$ReservasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bookingId: string | null
      phone: string
      guestName: string | null
      propertyName: string | null
      arrivalDate: string
      departureDate: string | null
      totalPersons: number | null
      source: string
      channel: string | null
      priority: string
      notes: string | null
      createdAt: Date
      lastUpdatedLeads: Date
      numNights: number | null
      leadNotes: string | null
    }, ExtArgs["result"]["prospectos"]>
    composites: {}
  }

  type ProspectosGetPayload<S extends boolean | null | undefined | ProspectosDefaultArgs> = $Result.GetResult<Prisma.$ProspectosPayload, S>

  type ProspectosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProspectosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProspectosCountAggregateInputType | true
    }

  export interface ProspectosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Prospectos'], meta: { name: 'Prospectos' } }
    /**
     * Find zero or one Prospectos that matches the filter.
     * @param {ProspectosFindUniqueArgs} args - Arguments to find a Prospectos
     * @example
     * // Get one Prospectos
     * const prospectos = await prisma.prospectos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProspectosFindUniqueArgs>(args: SelectSubset<T, ProspectosFindUniqueArgs<ExtArgs>>): Prisma__ProspectosClient<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Prospectos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProspectosFindUniqueOrThrowArgs} args - Arguments to find a Prospectos
     * @example
     * // Get one Prospectos
     * const prospectos = await prisma.prospectos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProspectosFindUniqueOrThrowArgs>(args: SelectSubset<T, ProspectosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProspectosClient<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Prospectos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProspectosFindFirstArgs} args - Arguments to find a Prospectos
     * @example
     * // Get one Prospectos
     * const prospectos = await prisma.prospectos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProspectosFindFirstArgs>(args?: SelectSubset<T, ProspectosFindFirstArgs<ExtArgs>>): Prisma__ProspectosClient<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Prospectos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProspectosFindFirstOrThrowArgs} args - Arguments to find a Prospectos
     * @example
     * // Get one Prospectos
     * const prospectos = await prisma.prospectos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProspectosFindFirstOrThrowArgs>(args?: SelectSubset<T, ProspectosFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProspectosClient<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Prospectos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProspectosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prospectos
     * const prospectos = await prisma.prospectos.findMany()
     * 
     * // Get first 10 Prospectos
     * const prospectos = await prisma.prospectos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const prospectosWithIdOnly = await prisma.prospectos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProspectosFindManyArgs>(args?: SelectSubset<T, ProspectosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Prospectos.
     * @param {ProspectosCreateArgs} args - Arguments to create a Prospectos.
     * @example
     * // Create one Prospectos
     * const Prospectos = await prisma.prospectos.create({
     *   data: {
     *     // ... data to create a Prospectos
     *   }
     * })
     * 
     */
    create<T extends ProspectosCreateArgs>(args: SelectSubset<T, ProspectosCreateArgs<ExtArgs>>): Prisma__ProspectosClient<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Prospectos.
     * @param {ProspectosCreateManyArgs} args - Arguments to create many Prospectos.
     * @example
     * // Create many Prospectos
     * const prospectos = await prisma.prospectos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProspectosCreateManyArgs>(args?: SelectSubset<T, ProspectosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Prospectos and returns the data saved in the database.
     * @param {ProspectosCreateManyAndReturnArgs} args - Arguments to create many Prospectos.
     * @example
     * // Create many Prospectos
     * const prospectos = await prisma.prospectos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Prospectos and only return the `id`
     * const prospectosWithIdOnly = await prisma.prospectos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProspectosCreateManyAndReturnArgs>(args?: SelectSubset<T, ProspectosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Prospectos.
     * @param {ProspectosDeleteArgs} args - Arguments to delete one Prospectos.
     * @example
     * // Delete one Prospectos
     * const Prospectos = await prisma.prospectos.delete({
     *   where: {
     *     // ... filter to delete one Prospectos
     *   }
     * })
     * 
     */
    delete<T extends ProspectosDeleteArgs>(args: SelectSubset<T, ProspectosDeleteArgs<ExtArgs>>): Prisma__ProspectosClient<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Prospectos.
     * @param {ProspectosUpdateArgs} args - Arguments to update one Prospectos.
     * @example
     * // Update one Prospectos
     * const prospectos = await prisma.prospectos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProspectosUpdateArgs>(args: SelectSubset<T, ProspectosUpdateArgs<ExtArgs>>): Prisma__ProspectosClient<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Prospectos.
     * @param {ProspectosDeleteManyArgs} args - Arguments to filter Prospectos to delete.
     * @example
     * // Delete a few Prospectos
     * const { count } = await prisma.prospectos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProspectosDeleteManyArgs>(args?: SelectSubset<T, ProspectosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prospectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProspectosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prospectos
     * const prospectos = await prisma.prospectos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProspectosUpdateManyArgs>(args: SelectSubset<T, ProspectosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prospectos and returns the data updated in the database.
     * @param {ProspectosUpdateManyAndReturnArgs} args - Arguments to update many Prospectos.
     * @example
     * // Update many Prospectos
     * const prospectos = await prisma.prospectos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Prospectos and only return the `id`
     * const prospectosWithIdOnly = await prisma.prospectos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProspectosUpdateManyAndReturnArgs>(args: SelectSubset<T, ProspectosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Prospectos.
     * @param {ProspectosUpsertArgs} args - Arguments to update or create a Prospectos.
     * @example
     * // Update or create a Prospectos
     * const prospectos = await prisma.prospectos.upsert({
     *   create: {
     *     // ... data to create a Prospectos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Prospectos we want to update
     *   }
     * })
     */
    upsert<T extends ProspectosUpsertArgs>(args: SelectSubset<T, ProspectosUpsertArgs<ExtArgs>>): Prisma__ProspectosClient<$Result.GetResult<Prisma.$ProspectosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Prospectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProspectosCountArgs} args - Arguments to filter Prospectos to count.
     * @example
     * // Count the number of Prospectos
     * const count = await prisma.prospectos.count({
     *   where: {
     *     // ... the filter for the Prospectos we want to count
     *   }
     * })
    **/
    count<T extends ProspectosCountArgs>(
      args?: Subset<T, ProspectosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProspectosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Prospectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProspectosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProspectosAggregateArgs>(args: Subset<T, ProspectosAggregateArgs>): Prisma.PrismaPromise<GetProspectosAggregateType<T>>

    /**
     * Group by Prospectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProspectosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProspectosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProspectosGroupByArgs['orderBy'] }
        : { orderBy?: ProspectosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProspectosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProspectosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Prospectos model
   */
  readonly fields: ProspectosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Prospectos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProspectosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Reservas<T extends Prospectos$ReservasArgs<ExtArgs> = {}>(args?: Subset<T, Prospectos$ReservasArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Prospectos model
   */
  interface ProspectosFieldRefs {
    readonly id: FieldRef<"Prospectos", 'Int'>
    readonly bookingId: FieldRef<"Prospectos", 'String'>
    readonly phone: FieldRef<"Prospectos", 'String'>
    readonly guestName: FieldRef<"Prospectos", 'String'>
    readonly propertyName: FieldRef<"Prospectos", 'String'>
    readonly arrivalDate: FieldRef<"Prospectos", 'String'>
    readonly departureDate: FieldRef<"Prospectos", 'String'>
    readonly totalPersons: FieldRef<"Prospectos", 'Int'>
    readonly source: FieldRef<"Prospectos", 'String'>
    readonly channel: FieldRef<"Prospectos", 'String'>
    readonly priority: FieldRef<"Prospectos", 'String'>
    readonly notes: FieldRef<"Prospectos", 'String'>
    readonly createdAt: FieldRef<"Prospectos", 'DateTime'>
    readonly lastUpdatedLeads: FieldRef<"Prospectos", 'DateTime'>
    readonly numNights: FieldRef<"Prospectos", 'Int'>
    readonly leadNotes: FieldRef<"Prospectos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Prospectos findUnique
   */
  export type ProspectosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    /**
     * Filter, which Prospectos to fetch.
     */
    where: ProspectosWhereUniqueInput
  }

  /**
   * Prospectos findUniqueOrThrow
   */
  export type ProspectosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    /**
     * Filter, which Prospectos to fetch.
     */
    where: ProspectosWhereUniqueInput
  }

  /**
   * Prospectos findFirst
   */
  export type ProspectosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    /**
     * Filter, which Prospectos to fetch.
     */
    where?: ProspectosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prospectos to fetch.
     */
    orderBy?: ProspectosOrderByWithRelationInput | ProspectosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prospectos.
     */
    cursor?: ProspectosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prospectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prospectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prospectos.
     */
    distinct?: ProspectosScalarFieldEnum | ProspectosScalarFieldEnum[]
  }

  /**
   * Prospectos findFirstOrThrow
   */
  export type ProspectosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    /**
     * Filter, which Prospectos to fetch.
     */
    where?: ProspectosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prospectos to fetch.
     */
    orderBy?: ProspectosOrderByWithRelationInput | ProspectosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prospectos.
     */
    cursor?: ProspectosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prospectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prospectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prospectos.
     */
    distinct?: ProspectosScalarFieldEnum | ProspectosScalarFieldEnum[]
  }

  /**
   * Prospectos findMany
   */
  export type ProspectosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    /**
     * Filter, which Prospectos to fetch.
     */
    where?: ProspectosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prospectos to fetch.
     */
    orderBy?: ProspectosOrderByWithRelationInput | ProspectosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Prospectos.
     */
    cursor?: ProspectosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prospectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prospectos.
     */
    skip?: number
    distinct?: ProspectosScalarFieldEnum | ProspectosScalarFieldEnum[]
  }

  /**
   * Prospectos create
   */
  export type ProspectosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    /**
     * The data needed to create a Prospectos.
     */
    data: XOR<ProspectosCreateInput, ProspectosUncheckedCreateInput>
  }

  /**
   * Prospectos createMany
   */
  export type ProspectosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Prospectos.
     */
    data: ProspectosCreateManyInput | ProspectosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Prospectos createManyAndReturn
   */
  export type ProspectosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * The data used to create many Prospectos.
     */
    data: ProspectosCreateManyInput | ProspectosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Prospectos update
   */
  export type ProspectosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    /**
     * The data needed to update a Prospectos.
     */
    data: XOR<ProspectosUpdateInput, ProspectosUncheckedUpdateInput>
    /**
     * Choose, which Prospectos to update.
     */
    where: ProspectosWhereUniqueInput
  }

  /**
   * Prospectos updateMany
   */
  export type ProspectosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Prospectos.
     */
    data: XOR<ProspectosUpdateManyMutationInput, ProspectosUncheckedUpdateManyInput>
    /**
     * Filter which Prospectos to update
     */
    where?: ProspectosWhereInput
    /**
     * Limit how many Prospectos to update.
     */
    limit?: number
  }

  /**
   * Prospectos updateManyAndReturn
   */
  export type ProspectosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * The data used to update Prospectos.
     */
    data: XOR<ProspectosUpdateManyMutationInput, ProspectosUncheckedUpdateManyInput>
    /**
     * Filter which Prospectos to update
     */
    where?: ProspectosWhereInput
    /**
     * Limit how many Prospectos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Prospectos upsert
   */
  export type ProspectosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    /**
     * The filter to search for the Prospectos to update in case it exists.
     */
    where: ProspectosWhereUniqueInput
    /**
     * In case the Prospectos found by the `where` argument doesn't exist, create a new Prospectos with this data.
     */
    create: XOR<ProspectosCreateInput, ProspectosUncheckedCreateInput>
    /**
     * In case the Prospectos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProspectosUpdateInput, ProspectosUncheckedUpdateInput>
  }

  /**
   * Prospectos delete
   */
  export type ProspectosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
    /**
     * Filter which Prospectos to delete.
     */
    where: ProspectosWhereUniqueInput
  }

  /**
   * Prospectos deleteMany
   */
  export type ProspectosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prospectos to delete
     */
    where?: ProspectosWhereInput
    /**
     * Limit how many Prospectos to delete.
     */
    limit?: number
  }

  /**
   * Prospectos.Reservas
   */
  export type Prospectos$ReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservas
     */
    omit?: ReservasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    where?: ReservasWhereInput
  }

  /**
   * Prospectos without action
   */
  export type ProspectosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prospectos
     */
    select?: ProspectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prospectos
     */
    omit?: ProspectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProspectosInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const WhatsAppScalarFieldEnum: {
    phoneNumber: 'phoneNumber',
    name: 'name',
    userName: 'userName',
    labels: 'labels',
    chatId: 'chatId',
    lastActivity: 'lastActivity',
    threadId: 'threadId',
    threadTokenCount: 'threadTokenCount',
    profileStatus: 'profileStatus',
    proximaAccion: 'proximaAccion',
    fechaProximaAccion: 'fechaProximaAccion',
    prioridad: 'prioridad'
  };

  export type WhatsAppScalarFieldEnum = (typeof WhatsAppScalarFieldEnum)[keyof typeof WhatsAppScalarFieldEnum]


  export const ApartamentosScalarFieldEnum: {
    id: 'id',
    propertyId: 'propertyId',
    roomId: 'roomId',
    roomName: 'roomName',
    extraCharge: 'extraCharge',
    capacity: 'capacity'
  };

  export type ApartamentosScalarFieldEnum = (typeof ApartamentosScalarFieldEnum)[keyof typeof ApartamentosScalarFieldEnum]


  export const ReservasScalarFieldEnum: {
    id: 'id',
    bookingId: 'bookingId',
    phone: 'phone',
    guestName: 'guestName',
    status: 'status',
    internalNotes: 'internalNotes',
    propertyName: 'propertyName',
    arrivalDate: 'arrivalDate',
    departureDate: 'departureDate',
    numNights: 'numNights',
    totalPersons: 'totalPersons',
    totalCharges: 'totalCharges',
    totalPayments: 'totalPayments',
    balance: 'balance',
    basePrice: 'basePrice',
    channel: 'channel',
    email: 'email',
    apiReference: 'apiReference',
    charges: 'charges',
    payments: 'payments',
    messages: 'messages',
    infoItems: 'infoItems',
    notes: 'notes',
    bookingDate: 'bookingDate',
    modifiedDate: 'modifiedDate',
    lastUpdatedBD: 'lastUpdatedBD',
    raw: 'raw',
    BDStatus: 'BDStatus'
  };

  export type ReservasScalarFieldEnum = (typeof ReservasScalarFieldEnum)[keyof typeof ReservasScalarFieldEnum]


  export const ProspectosScalarFieldEnum: {
    id: 'id',
    bookingId: 'bookingId',
    phone: 'phone',
    guestName: 'guestName',
    propertyName: 'propertyName',
    arrivalDate: 'arrivalDate',
    departureDate: 'departureDate',
    totalPersons: 'totalPersons',
    source: 'source',
    channel: 'channel',
    priority: 'priority',
    notes: 'notes',
    createdAt: 'createdAt',
    lastUpdatedLeads: 'lastUpdatedLeads',
    numNights: 'numNights',
    leadNotes: 'leadNotes'
  };

  export type ProspectosScalarFieldEnum = (typeof ProspectosScalarFieldEnum)[keyof typeof ProspectosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type WhatsAppWhereInput = {
    AND?: WhatsAppWhereInput | WhatsAppWhereInput[]
    OR?: WhatsAppWhereInput[]
    NOT?: WhatsAppWhereInput | WhatsAppWhereInput[]
    phoneNumber?: StringFilter<"WhatsApp"> | string
    name?: StringNullableFilter<"WhatsApp"> | string | null
    userName?: StringNullableFilter<"WhatsApp"> | string | null
    labels?: StringNullableFilter<"WhatsApp"> | string | null
    chatId?: StringNullableFilter<"WhatsApp"> | string | null
    lastActivity?: DateTimeFilter<"WhatsApp"> | Date | string
    threadId?: StringNullableFilter<"WhatsApp"> | string | null
    threadTokenCount?: IntNullableFilter<"WhatsApp"> | number | null
    profileStatus?: StringNullableFilter<"WhatsApp"> | string | null
    proximaAccion?: StringNullableFilter<"WhatsApp"> | string | null
    fechaProximaAccion?: DateTimeNullableFilter<"WhatsApp"> | Date | string | null
    prioridad?: IntNullableFilter<"WhatsApp"> | number | null
  }

  export type WhatsAppOrderByWithRelationInput = {
    phoneNumber?: SortOrder
    name?: SortOrderInput | SortOrder
    userName?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    chatId?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrderInput | SortOrder
    threadTokenCount?: SortOrderInput | SortOrder
    profileStatus?: SortOrderInput | SortOrder
    proximaAccion?: SortOrderInput | SortOrder
    fechaProximaAccion?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
  }

  export type WhatsAppWhereUniqueInput = Prisma.AtLeast<{
    phoneNumber?: string
    chatId?: string
    AND?: WhatsAppWhereInput | WhatsAppWhereInput[]
    OR?: WhatsAppWhereInput[]
    NOT?: WhatsAppWhereInput | WhatsAppWhereInput[]
    name?: StringNullableFilter<"WhatsApp"> | string | null
    userName?: StringNullableFilter<"WhatsApp"> | string | null
    labels?: StringNullableFilter<"WhatsApp"> | string | null
    lastActivity?: DateTimeFilter<"WhatsApp"> | Date | string
    threadId?: StringNullableFilter<"WhatsApp"> | string | null
    threadTokenCount?: IntNullableFilter<"WhatsApp"> | number | null
    profileStatus?: StringNullableFilter<"WhatsApp"> | string | null
    proximaAccion?: StringNullableFilter<"WhatsApp"> | string | null
    fechaProximaAccion?: DateTimeNullableFilter<"WhatsApp"> | Date | string | null
    prioridad?: IntNullableFilter<"WhatsApp"> | number | null
  }, "phoneNumber" | "chatId">

  export type WhatsAppOrderByWithAggregationInput = {
    phoneNumber?: SortOrder
    name?: SortOrderInput | SortOrder
    userName?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    chatId?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrderInput | SortOrder
    threadTokenCount?: SortOrderInput | SortOrder
    profileStatus?: SortOrderInput | SortOrder
    proximaAccion?: SortOrderInput | SortOrder
    fechaProximaAccion?: SortOrderInput | SortOrder
    prioridad?: SortOrderInput | SortOrder
    _count?: WhatsAppCountOrderByAggregateInput
    _avg?: WhatsAppAvgOrderByAggregateInput
    _max?: WhatsAppMaxOrderByAggregateInput
    _min?: WhatsAppMinOrderByAggregateInput
    _sum?: WhatsAppSumOrderByAggregateInput
  }

  export type WhatsAppScalarWhereWithAggregatesInput = {
    AND?: WhatsAppScalarWhereWithAggregatesInput | WhatsAppScalarWhereWithAggregatesInput[]
    OR?: WhatsAppScalarWhereWithAggregatesInput[]
    NOT?: WhatsAppScalarWhereWithAggregatesInput | WhatsAppScalarWhereWithAggregatesInput[]
    phoneNumber?: StringWithAggregatesFilter<"WhatsApp"> | string
    name?: StringNullableWithAggregatesFilter<"WhatsApp"> | string | null
    userName?: StringNullableWithAggregatesFilter<"WhatsApp"> | string | null
    labels?: StringNullableWithAggregatesFilter<"WhatsApp"> | string | null
    chatId?: StringNullableWithAggregatesFilter<"WhatsApp"> | string | null
    lastActivity?: DateTimeWithAggregatesFilter<"WhatsApp"> | Date | string
    threadId?: StringNullableWithAggregatesFilter<"WhatsApp"> | string | null
    threadTokenCount?: IntNullableWithAggregatesFilter<"WhatsApp"> | number | null
    profileStatus?: StringNullableWithAggregatesFilter<"WhatsApp"> | string | null
    proximaAccion?: StringNullableWithAggregatesFilter<"WhatsApp"> | string | null
    fechaProximaAccion?: DateTimeNullableWithAggregatesFilter<"WhatsApp"> | Date | string | null
    prioridad?: IntNullableWithAggregatesFilter<"WhatsApp"> | number | null
  }

  export type ApartamentosWhereInput = {
    AND?: ApartamentosWhereInput | ApartamentosWhereInput[]
    OR?: ApartamentosWhereInput[]
    NOT?: ApartamentosWhereInput | ApartamentosWhereInput[]
    id?: IntFilter<"Apartamentos"> | number
    propertyId?: IntFilter<"Apartamentos"> | number
    roomId?: IntFilter<"Apartamentos"> | number
    roomName?: StringFilter<"Apartamentos"> | string
    extraCharge?: JsonFilter<"Apartamentos">
    capacity?: IntFilter<"Apartamentos"> | number
  }

  export type ApartamentosOrderByWithRelationInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    extraCharge?: SortOrder
    capacity?: SortOrder
  }

  export type ApartamentosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    roomId?: number
    AND?: ApartamentosWhereInput | ApartamentosWhereInput[]
    OR?: ApartamentosWhereInput[]
    NOT?: ApartamentosWhereInput | ApartamentosWhereInput[]
    propertyId?: IntFilter<"Apartamentos"> | number
    roomName?: StringFilter<"Apartamentos"> | string
    extraCharge?: JsonFilter<"Apartamentos">
    capacity?: IntFilter<"Apartamentos"> | number
  }, "id" | "roomId">

  export type ApartamentosOrderByWithAggregationInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    extraCharge?: SortOrder
    capacity?: SortOrder
    _count?: ApartamentosCountOrderByAggregateInput
    _avg?: ApartamentosAvgOrderByAggregateInput
    _max?: ApartamentosMaxOrderByAggregateInput
    _min?: ApartamentosMinOrderByAggregateInput
    _sum?: ApartamentosSumOrderByAggregateInput
  }

  export type ApartamentosScalarWhereWithAggregatesInput = {
    AND?: ApartamentosScalarWhereWithAggregatesInput | ApartamentosScalarWhereWithAggregatesInput[]
    OR?: ApartamentosScalarWhereWithAggregatesInput[]
    NOT?: ApartamentosScalarWhereWithAggregatesInput | ApartamentosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Apartamentos"> | number
    propertyId?: IntWithAggregatesFilter<"Apartamentos"> | number
    roomId?: IntWithAggregatesFilter<"Apartamentos"> | number
    roomName?: StringWithAggregatesFilter<"Apartamentos"> | string
    extraCharge?: JsonWithAggregatesFilter<"Apartamentos">
    capacity?: IntWithAggregatesFilter<"Apartamentos"> | number
  }

  export type ReservasWhereInput = {
    AND?: ReservasWhereInput | ReservasWhereInput[]
    OR?: ReservasWhereInput[]
    NOT?: ReservasWhereInput | ReservasWhereInput[]
    id?: IntFilter<"Reservas"> | number
    bookingId?: StringFilter<"Reservas"> | string
    phone?: StringNullableFilter<"Reservas"> | string | null
    guestName?: StringNullableFilter<"Reservas"> | string | null
    status?: StringNullableFilter<"Reservas"> | string | null
    internalNotes?: StringNullableFilter<"Reservas"> | string | null
    propertyName?: StringNullableFilter<"Reservas"> | string | null
    arrivalDate?: StringNullableFilter<"Reservas"> | string | null
    departureDate?: StringNullableFilter<"Reservas"> | string | null
    numNights?: IntNullableFilter<"Reservas"> | number | null
    totalPersons?: IntNullableFilter<"Reservas"> | number | null
    totalCharges?: StringNullableFilter<"Reservas"> | string | null
    totalPayments?: StringNullableFilter<"Reservas"> | string | null
    balance?: StringNullableFilter<"Reservas"> | string | null
    basePrice?: StringNullableFilter<"Reservas"> | string | null
    channel?: StringNullableFilter<"Reservas"> | string | null
    email?: StringNullableFilter<"Reservas"> | string | null
    apiReference?: StringNullableFilter<"Reservas"> | string | null
    charges?: JsonFilter<"Reservas">
    payments?: JsonFilter<"Reservas">
    messages?: JsonFilter<"Reservas">
    infoItems?: JsonFilter<"Reservas">
    notes?: StringNullableFilter<"Reservas"> | string | null
    bookingDate?: StringNullableFilter<"Reservas"> | string | null
    modifiedDate?: StringNullableFilter<"Reservas"> | string | null
    lastUpdatedBD?: DateTimeFilter<"Reservas"> | Date | string
    raw?: JsonNullableFilter<"Reservas">
    BDStatus?: StringNullableFilter<"Reservas"> | string | null
    Prospectos?: XOR<ProspectosNullableScalarRelationFilter, ProspectosWhereInput> | null
  }

  export type ReservasOrderByWithRelationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrderInput | SortOrder
    guestName?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    numNights?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    totalCharges?: SortOrderInput | SortOrder
    totalPayments?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    basePrice?: SortOrderInput | SortOrder
    channel?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    apiReference?: SortOrderInput | SortOrder
    charges?: SortOrder
    payments?: SortOrder
    messages?: SortOrder
    infoItems?: SortOrder
    notes?: SortOrderInput | SortOrder
    bookingDate?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
    lastUpdatedBD?: SortOrder
    raw?: SortOrderInput | SortOrder
    BDStatus?: SortOrderInput | SortOrder
    Prospectos?: ProspectosOrderByWithRelationInput
  }

  export type ReservasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    bookingId?: string
    AND?: ReservasWhereInput | ReservasWhereInput[]
    OR?: ReservasWhereInput[]
    NOT?: ReservasWhereInput | ReservasWhereInput[]
    phone?: StringNullableFilter<"Reservas"> | string | null
    guestName?: StringNullableFilter<"Reservas"> | string | null
    status?: StringNullableFilter<"Reservas"> | string | null
    internalNotes?: StringNullableFilter<"Reservas"> | string | null
    propertyName?: StringNullableFilter<"Reservas"> | string | null
    arrivalDate?: StringNullableFilter<"Reservas"> | string | null
    departureDate?: StringNullableFilter<"Reservas"> | string | null
    numNights?: IntNullableFilter<"Reservas"> | number | null
    totalPersons?: IntNullableFilter<"Reservas"> | number | null
    totalCharges?: StringNullableFilter<"Reservas"> | string | null
    totalPayments?: StringNullableFilter<"Reservas"> | string | null
    balance?: StringNullableFilter<"Reservas"> | string | null
    basePrice?: StringNullableFilter<"Reservas"> | string | null
    channel?: StringNullableFilter<"Reservas"> | string | null
    email?: StringNullableFilter<"Reservas"> | string | null
    apiReference?: StringNullableFilter<"Reservas"> | string | null
    charges?: JsonFilter<"Reservas">
    payments?: JsonFilter<"Reservas">
    messages?: JsonFilter<"Reservas">
    infoItems?: JsonFilter<"Reservas">
    notes?: StringNullableFilter<"Reservas"> | string | null
    bookingDate?: StringNullableFilter<"Reservas"> | string | null
    modifiedDate?: StringNullableFilter<"Reservas"> | string | null
    lastUpdatedBD?: DateTimeFilter<"Reservas"> | Date | string
    raw?: JsonNullableFilter<"Reservas">
    BDStatus?: StringNullableFilter<"Reservas"> | string | null
    Prospectos?: XOR<ProspectosNullableScalarRelationFilter, ProspectosWhereInput> | null
  }, "id" | "bookingId">

  export type ReservasOrderByWithAggregationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrderInput | SortOrder
    guestName?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    numNights?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    totalCharges?: SortOrderInput | SortOrder
    totalPayments?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    basePrice?: SortOrderInput | SortOrder
    channel?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    apiReference?: SortOrderInput | SortOrder
    charges?: SortOrder
    payments?: SortOrder
    messages?: SortOrder
    infoItems?: SortOrder
    notes?: SortOrderInput | SortOrder
    bookingDate?: SortOrderInput | SortOrder
    modifiedDate?: SortOrderInput | SortOrder
    lastUpdatedBD?: SortOrder
    raw?: SortOrderInput | SortOrder
    BDStatus?: SortOrderInput | SortOrder
    _count?: ReservasCountOrderByAggregateInput
    _avg?: ReservasAvgOrderByAggregateInput
    _max?: ReservasMaxOrderByAggregateInput
    _min?: ReservasMinOrderByAggregateInput
    _sum?: ReservasSumOrderByAggregateInput
  }

  export type ReservasScalarWhereWithAggregatesInput = {
    AND?: ReservasScalarWhereWithAggregatesInput | ReservasScalarWhereWithAggregatesInput[]
    OR?: ReservasScalarWhereWithAggregatesInput[]
    NOT?: ReservasScalarWhereWithAggregatesInput | ReservasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Reservas"> | number
    bookingId?: StringWithAggregatesFilter<"Reservas"> | string
    phone?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    guestName?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    status?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    internalNotes?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    propertyName?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    arrivalDate?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    departureDate?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    numNights?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
    totalPersons?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
    totalCharges?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    totalPayments?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    balance?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    basePrice?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    channel?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    email?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    apiReference?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    charges?: JsonWithAggregatesFilter<"Reservas">
    payments?: JsonWithAggregatesFilter<"Reservas">
    messages?: JsonWithAggregatesFilter<"Reservas">
    infoItems?: JsonWithAggregatesFilter<"Reservas">
    notes?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    bookingDate?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    modifiedDate?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    lastUpdatedBD?: DateTimeWithAggregatesFilter<"Reservas"> | Date | string
    raw?: JsonNullableWithAggregatesFilter<"Reservas">
    BDStatus?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
  }

  export type ProspectosWhereInput = {
    AND?: ProspectosWhereInput | ProspectosWhereInput[]
    OR?: ProspectosWhereInput[]
    NOT?: ProspectosWhereInput | ProspectosWhereInput[]
    id?: IntFilter<"Prospectos"> | number
    bookingId?: StringNullableFilter<"Prospectos"> | string | null
    phone?: StringFilter<"Prospectos"> | string
    guestName?: StringNullableFilter<"Prospectos"> | string | null
    propertyName?: StringNullableFilter<"Prospectos"> | string | null
    arrivalDate?: StringFilter<"Prospectos"> | string
    departureDate?: StringNullableFilter<"Prospectos"> | string | null
    totalPersons?: IntNullableFilter<"Prospectos"> | number | null
    source?: StringFilter<"Prospectos"> | string
    channel?: StringNullableFilter<"Prospectos"> | string | null
    priority?: StringFilter<"Prospectos"> | string
    notes?: StringNullableFilter<"Prospectos"> | string | null
    createdAt?: DateTimeFilter<"Prospectos"> | Date | string
    lastUpdatedLeads?: DateTimeFilter<"Prospectos"> | Date | string
    numNights?: IntNullableFilter<"Prospectos"> | number | null
    leadNotes?: StringNullableFilter<"Prospectos"> | string | null
    Reservas?: XOR<ReservasNullableScalarRelationFilter, ReservasWhereInput> | null
  }

  export type ProspectosOrderByWithRelationInput = {
    id?: SortOrder
    bookingId?: SortOrderInput | SortOrder
    phone?: SortOrder
    guestName?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    source?: SortOrder
    channel?: SortOrderInput | SortOrder
    priority?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrderInput | SortOrder
    leadNotes?: SortOrderInput | SortOrder
    Reservas?: ReservasOrderByWithRelationInput
  }

  export type ProspectosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    bookingId?: string
    AND?: ProspectosWhereInput | ProspectosWhereInput[]
    OR?: ProspectosWhereInput[]
    NOT?: ProspectosWhereInput | ProspectosWhereInput[]
    phone?: StringFilter<"Prospectos"> | string
    guestName?: StringNullableFilter<"Prospectos"> | string | null
    propertyName?: StringNullableFilter<"Prospectos"> | string | null
    arrivalDate?: StringFilter<"Prospectos"> | string
    departureDate?: StringNullableFilter<"Prospectos"> | string | null
    totalPersons?: IntNullableFilter<"Prospectos"> | number | null
    source?: StringFilter<"Prospectos"> | string
    channel?: StringNullableFilter<"Prospectos"> | string | null
    priority?: StringFilter<"Prospectos"> | string
    notes?: StringNullableFilter<"Prospectos"> | string | null
    createdAt?: DateTimeFilter<"Prospectos"> | Date | string
    lastUpdatedLeads?: DateTimeFilter<"Prospectos"> | Date | string
    numNights?: IntNullableFilter<"Prospectos"> | number | null
    leadNotes?: StringNullableFilter<"Prospectos"> | string | null
    Reservas?: XOR<ReservasNullableScalarRelationFilter, ReservasWhereInput> | null
  }, "id" | "bookingId">

  export type ProspectosOrderByWithAggregationInput = {
    id?: SortOrder
    bookingId?: SortOrderInput | SortOrder
    phone?: SortOrder
    guestName?: SortOrderInput | SortOrder
    propertyName?: SortOrderInput | SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrderInput | SortOrder
    totalPersons?: SortOrderInput | SortOrder
    source?: SortOrder
    channel?: SortOrderInput | SortOrder
    priority?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrderInput | SortOrder
    leadNotes?: SortOrderInput | SortOrder
    _count?: ProspectosCountOrderByAggregateInput
    _avg?: ProspectosAvgOrderByAggregateInput
    _max?: ProspectosMaxOrderByAggregateInput
    _min?: ProspectosMinOrderByAggregateInput
    _sum?: ProspectosSumOrderByAggregateInput
  }

  export type ProspectosScalarWhereWithAggregatesInput = {
    AND?: ProspectosScalarWhereWithAggregatesInput | ProspectosScalarWhereWithAggregatesInput[]
    OR?: ProspectosScalarWhereWithAggregatesInput[]
    NOT?: ProspectosScalarWhereWithAggregatesInput | ProspectosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Prospectos"> | number
    bookingId?: StringNullableWithAggregatesFilter<"Prospectos"> | string | null
    phone?: StringWithAggregatesFilter<"Prospectos"> | string
    guestName?: StringNullableWithAggregatesFilter<"Prospectos"> | string | null
    propertyName?: StringNullableWithAggregatesFilter<"Prospectos"> | string | null
    arrivalDate?: StringWithAggregatesFilter<"Prospectos"> | string
    departureDate?: StringNullableWithAggregatesFilter<"Prospectos"> | string | null
    totalPersons?: IntNullableWithAggregatesFilter<"Prospectos"> | number | null
    source?: StringWithAggregatesFilter<"Prospectos"> | string
    channel?: StringNullableWithAggregatesFilter<"Prospectos"> | string | null
    priority?: StringWithAggregatesFilter<"Prospectos"> | string
    notes?: StringNullableWithAggregatesFilter<"Prospectos"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Prospectos"> | Date | string
    lastUpdatedLeads?: DateTimeWithAggregatesFilter<"Prospectos"> | Date | string
    numNights?: IntNullableWithAggregatesFilter<"Prospectos"> | number | null
    leadNotes?: StringNullableWithAggregatesFilter<"Prospectos"> | string | null
  }

  export type WhatsAppCreateInput = {
    phoneNumber: string
    name?: string | null
    userName?: string | null
    labels?: string | null
    chatId?: string | null
    lastActivity?: Date | string
    threadId?: string | null
    threadTokenCount?: number | null
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
  }

  export type WhatsAppUncheckedCreateInput = {
    phoneNumber: string
    name?: string | null
    userName?: string | null
    labels?: string | null
    chatId?: string | null
    lastActivity?: Date | string
    threadId?: string | null
    threadTokenCount?: number | null
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
  }

  export type WhatsAppUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WhatsAppUncheckedUpdateInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WhatsAppCreateManyInput = {
    phoneNumber: string
    name?: string | null
    userName?: string | null
    labels?: string | null
    chatId?: string | null
    lastActivity?: Date | string
    threadId?: string | null
    threadTokenCount?: number | null
    profileStatus?: string | null
    proximaAccion?: string | null
    fechaProximaAccion?: Date | string | null
    prioridad?: number | null
  }

  export type WhatsAppUpdateManyMutationInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WhatsAppUncheckedUpdateManyInput = {
    phoneNumber?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    userName?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: NullableStringFieldUpdateOperationsInput | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    threadId?: NullableStringFieldUpdateOperationsInput | string | null
    threadTokenCount?: NullableIntFieldUpdateOperationsInput | number | null
    profileStatus?: NullableStringFieldUpdateOperationsInput | string | null
    proximaAccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaProximaAccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prioridad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ApartamentosCreateInput = {
    propertyId: number
    roomId: number
    roomName: string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: number
  }

  export type ApartamentosUncheckedCreateInput = {
    id?: number
    propertyId: number
    roomId: number
    roomName: string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: number
  }

  export type ApartamentosUpdateInput = {
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type ApartamentosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type ApartamentosCreateManyInput = {
    id?: number
    propertyId: number
    roomId: number
    roomName: string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: number
  }

  export type ApartamentosUpdateManyMutationInput = {
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type ApartamentosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    propertyId?: IntFieldUpdateOperationsInput | number
    roomId?: IntFieldUpdateOperationsInput | number
    roomName?: StringFieldUpdateOperationsInput | string
    extraCharge?: JsonNullValueInput | InputJsonValue
    capacity?: IntFieldUpdateOperationsInput | number
  }

  export type ReservasCreateInput = {
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
    Prospectos?: ProspectosCreateNestedOneWithoutReservasInput
  }

  export type ReservasUncheckedCreateInput = {
    id?: number
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
    Prospectos?: ProspectosUncheckedCreateNestedOneWithoutReservasInput
  }

  export type ReservasUpdateInput = {
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
    Prospectos?: ProspectosUpdateOneWithoutReservasNestedInput
  }

  export type ReservasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
    Prospectos?: ProspectosUncheckedUpdateOneWithoutReservasNestedInput
  }

  export type ReservasCreateManyInput = {
    id?: number
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
  }

  export type ReservasUpdateManyMutationInput = {
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProspectosCreateInput = {
    phone: string
    guestName?: string | null
    propertyName?: string | null
    arrivalDate: string
    departureDate?: string | null
    totalPersons?: number | null
    source: string
    channel?: string | null
    priority?: string
    notes?: string | null
    createdAt?: Date | string
    lastUpdatedLeads?: Date | string
    numNights?: number | null
    leadNotes?: string | null
    Reservas?: ReservasCreateNestedOneWithoutProspectosInput
  }

  export type ProspectosUncheckedCreateInput = {
    id?: number
    bookingId?: string | null
    phone: string
    guestName?: string | null
    propertyName?: string | null
    arrivalDate: string
    departureDate?: string | null
    totalPersons?: number | null
    source: string
    channel?: string | null
    priority?: string
    notes?: string | null
    createdAt?: Date | string
    lastUpdatedLeads?: Date | string
    numNights?: number | null
    leadNotes?: string | null
  }

  export type ProspectosUpdateInput = {
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    leadNotes?: NullableStringFieldUpdateOperationsInput | string | null
    Reservas?: ReservasUpdateOneWithoutProspectosNestedInput
  }

  export type ProspectosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    leadNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProspectosCreateManyInput = {
    id?: number
    bookingId?: string | null
    phone: string
    guestName?: string | null
    propertyName?: string | null
    arrivalDate: string
    departureDate?: string | null
    totalPersons?: number | null
    source: string
    channel?: string | null
    priority?: string
    notes?: string | null
    createdAt?: Date | string
    lastUpdatedLeads?: Date | string
    numNights?: number | null
    leadNotes?: string | null
  }

  export type ProspectosUpdateManyMutationInput = {
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    leadNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProspectosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    leadNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type WhatsAppCountOrderByAggregateInput = {
    phoneNumber?: SortOrder
    name?: SortOrder
    userName?: SortOrder
    labels?: SortOrder
    chatId?: SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrder
    threadTokenCount?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
  }

  export type WhatsAppAvgOrderByAggregateInput = {
    threadTokenCount?: SortOrder
    prioridad?: SortOrder
  }

  export type WhatsAppMaxOrderByAggregateInput = {
    phoneNumber?: SortOrder
    name?: SortOrder
    userName?: SortOrder
    labels?: SortOrder
    chatId?: SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrder
    threadTokenCount?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
  }

  export type WhatsAppMinOrderByAggregateInput = {
    phoneNumber?: SortOrder
    name?: SortOrder
    userName?: SortOrder
    labels?: SortOrder
    chatId?: SortOrder
    lastActivity?: SortOrder
    threadId?: SortOrder
    threadTokenCount?: SortOrder
    profileStatus?: SortOrder
    proximaAccion?: SortOrder
    fechaProximaAccion?: SortOrder
    prioridad?: SortOrder
  }

  export type WhatsAppSumOrderByAggregateInput = {
    threadTokenCount?: SortOrder
    prioridad?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ApartamentosCountOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    extraCharge?: SortOrder
    capacity?: SortOrder
  }

  export type ApartamentosAvgOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    capacity?: SortOrder
  }

  export type ApartamentosMaxOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    capacity?: SortOrder
  }

  export type ApartamentosMinOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    roomName?: SortOrder
    capacity?: SortOrder
  }

  export type ApartamentosSumOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    roomId?: SortOrder
    capacity?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ProspectosNullableScalarRelationFilter = {
    is?: ProspectosWhereInput | null
    isNot?: ProspectosWhereInput | null
  }

  export type ReservasCountOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    status?: SortOrder
    internalNotes?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    totalCharges?: SortOrder
    totalPayments?: SortOrder
    balance?: SortOrder
    basePrice?: SortOrder
    channel?: SortOrder
    email?: SortOrder
    apiReference?: SortOrder
    charges?: SortOrder
    payments?: SortOrder
    messages?: SortOrder
    infoItems?: SortOrder
    notes?: SortOrder
    bookingDate?: SortOrder
    modifiedDate?: SortOrder
    lastUpdatedBD?: SortOrder
    raw?: SortOrder
    BDStatus?: SortOrder
  }

  export type ReservasAvgOrderByAggregateInput = {
    id?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
  }

  export type ReservasMaxOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    status?: SortOrder
    internalNotes?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    totalCharges?: SortOrder
    totalPayments?: SortOrder
    balance?: SortOrder
    basePrice?: SortOrder
    channel?: SortOrder
    email?: SortOrder
    apiReference?: SortOrder
    notes?: SortOrder
    bookingDate?: SortOrder
    modifiedDate?: SortOrder
    lastUpdatedBD?: SortOrder
    BDStatus?: SortOrder
  }

  export type ReservasMinOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    status?: SortOrder
    internalNotes?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
    totalCharges?: SortOrder
    totalPayments?: SortOrder
    balance?: SortOrder
    basePrice?: SortOrder
    channel?: SortOrder
    email?: SortOrder
    apiReference?: SortOrder
    notes?: SortOrder
    bookingDate?: SortOrder
    modifiedDate?: SortOrder
    lastUpdatedBD?: SortOrder
    BDStatus?: SortOrder
  }

  export type ReservasSumOrderByAggregateInput = {
    id?: SortOrder
    numNights?: SortOrder
    totalPersons?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type ReservasNullableScalarRelationFilter = {
    is?: ReservasWhereInput | null
    isNot?: ReservasWhereInput | null
  }

  export type ProspectosCountOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    totalPersons?: SortOrder
    source?: SortOrder
    channel?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrder
    leadNotes?: SortOrder
  }

  export type ProspectosAvgOrderByAggregateInput = {
    id?: SortOrder
    totalPersons?: SortOrder
    numNights?: SortOrder
  }

  export type ProspectosMaxOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    totalPersons?: SortOrder
    source?: SortOrder
    channel?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrder
    leadNotes?: SortOrder
  }

  export type ProspectosMinOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    phone?: SortOrder
    guestName?: SortOrder
    propertyName?: SortOrder
    arrivalDate?: SortOrder
    departureDate?: SortOrder
    totalPersons?: SortOrder
    source?: SortOrder
    channel?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    lastUpdatedLeads?: SortOrder
    numNights?: SortOrder
    leadNotes?: SortOrder
  }

  export type ProspectosSumOrderByAggregateInput = {
    id?: SortOrder
    totalPersons?: SortOrder
    numNights?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProspectosCreateNestedOneWithoutReservasInput = {
    create?: XOR<ProspectosCreateWithoutReservasInput, ProspectosUncheckedCreateWithoutReservasInput>
    connectOrCreate?: ProspectosCreateOrConnectWithoutReservasInput
    connect?: ProspectosWhereUniqueInput
  }

  export type ProspectosUncheckedCreateNestedOneWithoutReservasInput = {
    create?: XOR<ProspectosCreateWithoutReservasInput, ProspectosUncheckedCreateWithoutReservasInput>
    connectOrCreate?: ProspectosCreateOrConnectWithoutReservasInput
    connect?: ProspectosWhereUniqueInput
  }

  export type ProspectosUpdateOneWithoutReservasNestedInput = {
    create?: XOR<ProspectosCreateWithoutReservasInput, ProspectosUncheckedCreateWithoutReservasInput>
    connectOrCreate?: ProspectosCreateOrConnectWithoutReservasInput
    upsert?: ProspectosUpsertWithoutReservasInput
    disconnect?: ProspectosWhereInput | boolean
    delete?: ProspectosWhereInput | boolean
    connect?: ProspectosWhereUniqueInput
    update?: XOR<XOR<ProspectosUpdateToOneWithWhereWithoutReservasInput, ProspectosUpdateWithoutReservasInput>, ProspectosUncheckedUpdateWithoutReservasInput>
  }

  export type ProspectosUncheckedUpdateOneWithoutReservasNestedInput = {
    create?: XOR<ProspectosCreateWithoutReservasInput, ProspectosUncheckedCreateWithoutReservasInput>
    connectOrCreate?: ProspectosCreateOrConnectWithoutReservasInput
    upsert?: ProspectosUpsertWithoutReservasInput
    disconnect?: ProspectosWhereInput | boolean
    delete?: ProspectosWhereInput | boolean
    connect?: ProspectosWhereUniqueInput
    update?: XOR<XOR<ProspectosUpdateToOneWithWhereWithoutReservasInput, ProspectosUpdateWithoutReservasInput>, ProspectosUncheckedUpdateWithoutReservasInput>
  }

  export type ReservasCreateNestedOneWithoutProspectosInput = {
    create?: XOR<ReservasCreateWithoutProspectosInput, ReservasUncheckedCreateWithoutProspectosInput>
    connectOrCreate?: ReservasCreateOrConnectWithoutProspectosInput
    connect?: ReservasWhereUniqueInput
  }

  export type ReservasUpdateOneWithoutProspectosNestedInput = {
    create?: XOR<ReservasCreateWithoutProspectosInput, ReservasUncheckedCreateWithoutProspectosInput>
    connectOrCreate?: ReservasCreateOrConnectWithoutProspectosInput
    upsert?: ReservasUpsertWithoutProspectosInput
    disconnect?: ReservasWhereInput | boolean
    delete?: ReservasWhereInput | boolean
    connect?: ReservasWhereUniqueInput
    update?: XOR<XOR<ReservasUpdateToOneWithWhereWithoutProspectosInput, ReservasUpdateWithoutProspectosInput>, ReservasUncheckedUpdateWithoutProspectosInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ProspectosCreateWithoutReservasInput = {
    phone: string
    guestName?: string | null
    propertyName?: string | null
    arrivalDate: string
    departureDate?: string | null
    totalPersons?: number | null
    source: string
    channel?: string | null
    priority?: string
    notes?: string | null
    createdAt?: Date | string
    lastUpdatedLeads?: Date | string
    numNights?: number | null
    leadNotes?: string | null
  }

  export type ProspectosUncheckedCreateWithoutReservasInput = {
    id?: number
    phone: string
    guestName?: string | null
    propertyName?: string | null
    arrivalDate: string
    departureDate?: string | null
    totalPersons?: number | null
    source: string
    channel?: string | null
    priority?: string
    notes?: string | null
    createdAt?: Date | string
    lastUpdatedLeads?: Date | string
    numNights?: number | null
    leadNotes?: string | null
  }

  export type ProspectosCreateOrConnectWithoutReservasInput = {
    where: ProspectosWhereUniqueInput
    create: XOR<ProspectosCreateWithoutReservasInput, ProspectosUncheckedCreateWithoutReservasInput>
  }

  export type ProspectosUpsertWithoutReservasInput = {
    update: XOR<ProspectosUpdateWithoutReservasInput, ProspectosUncheckedUpdateWithoutReservasInput>
    create: XOR<ProspectosCreateWithoutReservasInput, ProspectosUncheckedCreateWithoutReservasInput>
    where?: ProspectosWhereInput
  }

  export type ProspectosUpdateToOneWithWhereWithoutReservasInput = {
    where?: ProspectosWhereInput
    data: XOR<ProspectosUpdateWithoutReservasInput, ProspectosUncheckedUpdateWithoutReservasInput>
  }

  export type ProspectosUpdateWithoutReservasInput = {
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    leadNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProspectosUncheckedUpdateWithoutReservasInput = {
    id?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: StringFieldUpdateOperationsInput | string
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    source?: StringFieldUpdateOperationsInput | string
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedLeads?: DateTimeFieldUpdateOperationsInput | Date | string
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    leadNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservasCreateWithoutProspectosInput = {
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
  }

  export type ReservasUncheckedCreateWithoutProspectosInput = {
    id?: number
    bookingId: string
    phone?: string | null
    guestName?: string | null
    status?: string | null
    internalNotes?: string | null
    propertyName?: string | null
    arrivalDate?: string | null
    departureDate?: string | null
    numNights?: number | null
    totalPersons?: number | null
    totalCharges?: string | null
    totalPayments?: string | null
    balance?: string | null
    basePrice?: string | null
    channel?: string | null
    email?: string | null
    apiReference?: string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: string | null
    bookingDate?: string | null
    modifiedDate?: string | null
    lastUpdatedBD?: Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: string | null
  }

  export type ReservasCreateOrConnectWithoutProspectosInput = {
    where: ReservasWhereUniqueInput
    create: XOR<ReservasCreateWithoutProspectosInput, ReservasUncheckedCreateWithoutProspectosInput>
  }

  export type ReservasUpsertWithoutProspectosInput = {
    update: XOR<ReservasUpdateWithoutProspectosInput, ReservasUncheckedUpdateWithoutProspectosInput>
    create: XOR<ReservasCreateWithoutProspectosInput, ReservasUncheckedCreateWithoutProspectosInput>
    where?: ReservasWhereInput
  }

  export type ReservasUpdateToOneWithWhereWithoutProspectosInput = {
    where?: ReservasWhereInput
    data: XOR<ReservasUpdateWithoutProspectosInput, ReservasUncheckedUpdateWithoutProspectosInput>
  }

  export type ReservasUpdateWithoutProspectosInput = {
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservasUncheckedUpdateWithoutProspectosInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    guestName?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    propertyName?: NullableStringFieldUpdateOperationsInput | string | null
    arrivalDate?: NullableStringFieldUpdateOperationsInput | string | null
    departureDate?: NullableStringFieldUpdateOperationsInput | string | null
    numNights?: NullableIntFieldUpdateOperationsInput | number | null
    totalPersons?: NullableIntFieldUpdateOperationsInput | number | null
    totalCharges?: NullableStringFieldUpdateOperationsInput | string | null
    totalPayments?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: NullableStringFieldUpdateOperationsInput | string | null
    channel?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    apiReference?: NullableStringFieldUpdateOperationsInput | string | null
    charges?: JsonNullValueInput | InputJsonValue
    payments?: JsonNullValueInput | InputJsonValue
    messages?: JsonNullValueInput | InputJsonValue
    infoItems?: JsonNullValueInput | InputJsonValue
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    bookingDate?: NullableStringFieldUpdateOperationsInput | string | null
    modifiedDate?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdatedBD?: DateTimeFieldUpdateOperationsInput | Date | string
    raw?: NullableJsonNullValueInput | InputJsonValue
    BDStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}